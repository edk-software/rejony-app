{% extends 'CantigaCoreBundle:layout:base-layout.html.twig' %}

{% block page_title %}
    {{ pageTitle | trans({}, 'pages') }}
{% endblock %}

{% block page_subtitle %}
    {{ pageSubtitle | trans({}, 'pages') }}
{% endblock %}

{% macro route_file_box(title, route, file, approveRoute, revokeRoute, downloadRoute, approved, revoked, createdAt,
    createdBy, updatedAt, updatedBy, approvedAt, approvedBy, icon, cssClass = '') %}
    <div class="info-box {{ cssClass }}">
        <span class="info-box-icon{{ file ? (approved ? ' bg-green' : (revoked ? ' bg-red' : ' bg-blue')) : '' }}">
            <i class="fa {{ icon }}"></i>
        </span>
        <div class="info-box-content">
            {% if file %}
                <span class="pull-right">
                    {#{% if approved %}
                        <a href="{{ url(revokeRoute, { 'id': route.id, 'slug': route.area.project.slug }) }}">
                            <i class="fa fa-remove"></i> {{ 'Revoke' | trans([], 'edk') }}
                        </a>
                    {% else %}
                        <a href="{{ url(approveRoute, { 'id': route.id, 'slug': route.area.project.slug }) }}">
                            <i class="fa fa-check"></i> {{ 'Approve' | trans([], 'edk') }}
                        </a>
                    {% endif %}#}
                    <a href="{{ url(downloadRoute, { 'slug': route.publicAccessSlug }) }}">
                        <i class="fa fa-download"></i> {{ 'Download' | trans([], 'edk') }}
                    </a>
                </span>
            {% endif %}
            <span class="info-box-text">{{ title | trans([], 'edk') }}</span>
            {% if file %}
                {% if createdAt and createdBy %}
                    <span class="progress-description">
                        <i class="fa fa-plus"></i>
                        {{ 'Created %time% by %user%' | trans({
                            '%time%': format_time(TimeFormatter.FORMAT_LONG, createdAt),
                            '%user%': createdBy.name
                        }, 'edk') }}
                    </span>
                {% endif %}
                {% if updatedAt and updatedBy %}
                    <span class="progress-description">
                        <i class="fa fa-pencil"></i>
                        {{ 'Updated %time% by %user%' | trans({
                            '%time%': format_time(TimeFormatter.FORMAT_LONG, updatedAt),
                            '%user%': updatedBy.name
                        }, 'edk') }}
                    </span>
                {% endif %}
                {% if approvedAt and approvedBy %}
                    <span class="progress-description">
                        <i class="fa {{ approved ? 'fa-check' : 'fa-remove' }}"></i>
                        {{ (approved ? 'Approved %time% by %user%' : 'Revoked %time% by %user%') | trans({
                            '%time%': format_time(TimeFormatter.FORMAT_LONG, approvedAt),
                            '%user%': approvedBy.name
                        }, 'edk') }}
                    </span>
                {% endif %}
            {% else %}
                <span class="progress-description">{{ 'Not uploaded' | trans([], 'edk') }}</span>
            {% endif %}
        </div>
    </div>
{% endmacro %}

{% macro route_verification_task_box(id, iconClass, status, title, description = null, randomValue = null) -%}
	{%- set item = attribute(status, id) is defined ? attribute(status, id) : null %}
	<div class="col-md-4 col-sm-6 col-xs-12">
		<div id="{{ id }}" class="info-box">
			<span class="info-box-icon {{ item ? (item.valid ? 'bg-green' : 'bg-yellow') : 'bg-gray-light' }}">
				<i class="fa {{ iconClass }}"></i>
			</span>
			<div class="info-box-content">
				<span class="info-box-text">{{ title }}</span>
				{% if randomValue %}
					<span class="info-box-number">{{ randomValue }}</span>
				{% elseif item and item.value is defined %}
					<span class="info-box-number">{{ item.value }}</span>
				{% endif %}
				{% if description %}
					<span class="users-list-date">{{ description }}</span>
				{% endif %}
			</div>
		</div>
	</div>
{% endmacro %}

{% macro route_type_name(routeType) -%}
	{%- if routeType == 0 -%}
		{{ 'FullRoute' | trans({}, 'edk') }}
	{%- elseif routeType == 1 -%}
		{{ 'RouteInspiredByEWC' | trans({}, 'edk') }}
	{%- else -%}
		{{ 'UndefinedRoute' | trans({}, 'edk') }}
	{%- endif -%}
{%- endmacro %}

{% block page_content %}
    {% import _self as macros %}
    {% if infoText %}
        <div class="callout callout-info">
            <h4>{{ infoText.title}}</h4>
            <p>{{ infoText.content | raw }}</p>
        </div>
    {% endif %}
    <div class="row">
        <div class="col-md-12">
            <div class="box box-solid">
                <div class="box-header with-border">
                    <h3 class="box-title">{{ item.name }}</h3>
                    <div class="box-tools pull-right">
                        <a href="{{ spath(indexPage) }}" class="btn btn-default btn-sm">
                            <i class="fa fa-fa-arrow-circle-o-left"></i> {{ 'Routes list' | trans([], 'pages') }}
                        </a>
                        {% if not isArea and not isGroup %}
                            {% if item.approved %}
                                <a class="btn btn-danger btn-sm" href="{{ spath(revokePage, {'id': item.id}) }}">
                                    <i class="fa fa-close"></i> {{ 'Revoke' | trans([], 'general') }}
                                </a>
                            {% else %}
                                <div class="btn-group">
                                    <a class="btn btn-success btn-sm" href="{{ spath(approvePage, {'id': item.id}) }}">
                                        <i class="fa fa-check"></i> {{ 'Approve' | trans([], 'general') }}
                                    </a>
                                </div>
                            {% endif %}
                        {% endif %}
                        <a class="btn btn-primary btn-sm" href="{{ spath(editPage, {'id': item.id }) }}">
                            <i class="fa fa-pencil"></i> {{ 'Edit' | trans({}, 'general') }}
                        </a>
                        {% if item.canRemove() %}
                            <a class="btn btn-danger btn-sm" href="{{ spath(removePage, {'id': item.id }) }}">
                                <i class="fa fa-trash"></i> {{ 'Remove' | trans({}, 'general') }}
                            </a>
                        {% endif %}
                    </div>
                </div>
                <div class="box-body no-padding">
                    <div class="col-lg-3 col-md-6">
                        <strong><i class="fa fa-plus"></i> {{ 'Created at' | trans({}, 'edk') }}</strong>
                        <p>{{ format_time(TimeFormatter.FORMAT_DATE_LONG, item.createdAt) }}
                            ({{ ago(item.createdAt) }})</p>
                    </div>
                    <div class="col-lg-3 col-md-6">
                        <strong><i class="fa fa-pencil"></i> {{ 'Updated at' | trans({}, 'edk') }}</strong>
                        <p>{{ format_time(TimeFormatter.FORMAT_LONG, item.updatedAt) }}
                            ({{ ago(item.updatedAt) }})</p>
                    </div>
                    <div class="col-lg-3 col-md-6">
                        <strong><i class="fa fa-check"></i> {{ 'Approved at' | trans({}, 'edk') }}</strong>
                        <p>{{ format_time(TimeFormatter.FORMAT_LONG, item.approvedAt) }}
                            ({{ ago(item.approvedAt) }})</p>
                    </div>
                    <div class="col-lg-3 col-md-6 no-padding">
						<div class="info-box {{ item.approved ? 'bg-green' : 'bg-red' }} no-margin">
							<span class="info-box-icon">
								<i class="fa {{ item.approved ? 'fa-check' : 'fa-close' }}"></i>
							</span>
							<div class="info-box-content">
								<span class="info-box-text">{{ 'Route type' | trans({}, 'edk') }}</span>
								<span class="info-box-number">
									{{ macros.route_type_name(item.routeType) }}
								</span>
								<span class="progress-description">
									{% if item.approved %}
										{{ 'Approved' | trans({}, 'edk') }}
									{% else %}
										{{ 'Unapproved' | trans({}, 'edk') }}
									{% endif %}
								</span>
							</div>
						</div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="row" id="ppp">
        <div class="col-md-8">
            <div class="box box-solid">
                <div class="box-header with-border">
                    <h3 class="box-title">
                        <i class="fa fa-crosshairs"></i> {{ 'Basic information' | trans({}, 'edk') }}
                    </h3>
                    <div class="box-tools pull-right">
                        <button type="button" class="btn btn-box-tool" data-widget="collapse"><i
                                    class="fa fa-minus"></i>
                        </button>
                    </div>
                </div>
                <div class="box-body">
                    <dl class="dl-horizontal no-margin">
                        <dt>{{ 'Route name' | trans({}, 'edk') }}</dt>
                        <dd>{{ item.name }}</dd>
                        <dt>{{ 'Route patron' | trans({}, 'edk') }}</dt>
                        <dd>{{ item.routePatron }}</dd>
                        <dt>{{ 'Route color' | trans({}, 'edk') }}</dt>
                        <dd>{{ item.routeColor }}</dd>
                        <dt>{{ 'Route author' | trans({}, 'edk') }}</dt>
                        <dd>{{ item.routeAuthor }}</dd>
                    </dl>
                </div>
            </div>
            <div class="box box-solid">
                <div class="box-header with-border">
                    <h3 class="box-title"><i class="fa fa-globe"></i> {{ 'Route characteristic' | trans({}, 'edk') }}
                    </h3>
                    <div class="box-tools pull-right">
                        <button type="button" class="btn btn-box-tool" data-widget="collapse"><i
                                    class="fa fa-minus"></i>
                        </button>
                    </div>
                </div>
                <div class="box-body">
                    <dl class="dl-horizontal no-margin">
                        <dt>{{ 'Route beginning' | trans({}, 'edk') }}</dt>
                        <dd>{{ item.routeFrom }} <span class="users-list-date">{{ item.routeFromDetails }}</span></dd>
                        <dt>{{ 'Route end' | trans({}, 'edk') }}</dt>
                        <dd>{{ item.routeTo }} <span class="users-list-date">{{ item.routeToDetails }}</span></dd>
                        <dt>{{ 'Route length' | trans({}, 'edk') }}</dt>
                        <dd>{{ item.routeLength }} km</dd>
                        <dt>{{ 'Route ascent' | trans({}, 'edk') }}</dt>
                        <dd>{{ item.routeAscent }} m</dd>
                        {#<dt>{{ 'Continent' | trans({}, 'edk') }}</dt>#}
                        {#<dd>-</dd>#}
                        {#<dt>{{ 'Country' | trans({}, 'edk') }}</dt>#}
                        {#<dd>-</dd>#}
                        {#<dt>{{ 'Region' | trans({}, 'edk') }}</dt>#}
                        {#<dd>-</dd>#}
                        {#<dt>{{ 'Place' | trans({}, 'edk') }}</dt>#}
                        {#<dd>-</dd>#}
                    </dl>
                </div>
            </div>
            <div class="box box-solid">
                <div class="nav-tabs-custom">
                    <ul class="nav nav-tabs">
                        <li class="active"><a href="#route-course" aria-controls="route-info" role="tab"
                                              data-toggle="tab">{{ 'Route course' | trans({}, 'edk') }}</a></li>
                        <li><a href="#route-info" aria-controls="route-info" role="tab"
                               data-toggle="tab">{{ 'Route brief' | trans({}, 'edk') }}</a></li>
                        <li><a href="#notes" aria-controls="notes" role="tab"
                               data-toggle="tab">{{ 'Route additional information' | trans([], 'edk') }}</a></li>
                        {% if not isArea %}
                            <li><a href="#areas" aria-controls="areas" role="tab"
                                   data-toggle="tab">{{ 'Area' | trans({}, 'edk') }}</a></li>
                        {% endif %}
                    </ul>
                    <div class="tab-content">
                        <div role="tabpanel" class="tab-pane active" id="route-course">
                            <p>{{ item.routeCourse }}</p>
                        </div>
                        <div role="tabpanel" class="tab-pane" id="route-info">
                            <p>{{ item.routeObstacles }}</p>
                        </div>

                        <div role="tabpanel" class="tab-pane" id="notes">
                            <p class="lead">{{ 'RouteAdditionalNoteInfoText' | trans([], 'edk') }}</p>
                            <div id="note-location"></div>
                            <div class="modal fade" id="note-modal">
                                <div class="modal-dialog">
                                    <div class="modal-content">
                                        <div class="modal-header">
                                            <button type="button" class="close" data-dismiss="modal"
                                                    aria-label="{{ 'Close' | trans([], 'general') }}"><span
                                                        aria-hidden="true">&times;</span></button>
                                            <h4 class="modal-title" id="note-name"></h4>
                                        </div>
                                        <div class="modal-body" style="max-height: 300px; overflow-y: auto;">
                                            <p class="text-small text-muted"><i
                                                        class="fa fa-question"></i> {{ 'EditorFormattingHint' | trans([], 'edk') }}
                                            </p>
                                            <hr/>
                                            <form class="form">
                                                <div class="form-group">
                                                <textarea name="note-content-editor"
                                                          id="note-content-editor"></textarea>
                                                </div>
                                            </form>
                                        </div>
                                        <div class="modal-footer">
                                            <button type="button" class="btn btn-primary"
                                                    id="note-modal-save">{{ 'Save' | trans({}, 'general') }}</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        {% if not isArea %}
                            <div role="tabpanel" class="tab-pane" id="areas">
                                <i class="fa fa-cube"></i>
                                <a href="{{ spath(areaInfoPage, {'id': item.area.id }) }}">{{ item.area.name }}</a>
                            </div>
                        {% endif %}
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="box box-solid">
                <div class="box-body no-padding">
                    <div id="map-canvas" style="height:400px;width:100%"
                         data-what="{{ url('public_edk_download_gps', {'slug': item.publicAccessSlug }) }}"
                         data-where="{{ item.routeFrom }}">
                    </div>
                </div>
            </div>
            {#{{ macro.chat_box('Comments' | trans, 'route-comments', not isArea, 'Disable chatbox' | trans({}, 'edk')) }}#}
        </div>
    </div>
    <!-- /.row -->
    <div class="row">
        <div class="col-md-12">
            <div class="box box-solid">
                <div class="box-header with-border">
                    <h3 class="box-title"><i class="fa fa-file-o"></i> {{ 'Files' | trans([], 'edk') }}</h3>
                    <div class="box-tools pull-right">
                        <button type="button" class="btn btn-box-tool" data-widget="collapse">
                            <i class="fa fa-minus"></i>
                        </button>
                    </div>
                </div>
                <div class="box-body no-padding">
                    <div class="col-md-4 no-margin">
                        {{ macros.route_file_box(
                            'RouteGPSTraceFileUpload', item, item.gpsTrackFile, 'edk_route_approve_gps',
                            'edk_route_revoke_gps', 'public_edk_download_gps', item.gpsApproved, item.gpsRevoked,
                            item.gpsCreatedAt, item.gpsCreatedBy, item.gpsUpdatedAt, item.gpsUpdatedBy,
                            item.gpsApprovedAt, item.gpsApprovedBy, 'fa-map-marker'
                        ) }}
                    </div>
                    <div class="col-md-4 no-margin">
                        {{ macros.route_file_box(
                            'RouteDescriptionFileUpload', item, item.descriptionFile,
                            'edk_route_approve_description', 'edk_route_revoke_description',
                            'public_edk_download_description', item.descriptionApproved, item.descriptionRevoked,
                            item.descriptionCreatedAt, item.descriptionCreatedBy, item.descriptionUpdatedAt,
                            item.descriptionUpdatedBy, item.descriptionApprovedAt, item.descriptionApprovedBy,
                            'fa-file-pdf-o'
                        ) }}
                    </div>
                    <div class="col-md-4 no-margin">
                        {{ macros.route_file_box(
                            'RouteMapFileUpload', item, item.mapFile, 'edk_route_approve_map',
                            'edk_route_revoke_map', 'public_edk_download_map', item.mapApproved, item.mapRevoked,
                            item.mapCreatedAt, item.mapCreatedBy, item.mapUpdatedAt, item.mapUpdatedBy,
                            item.mapApprovedAt, item.mapApprovedBy, 'fa-map', 'no-margin'
                        ) }}
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <div class="box box-solid">
                <div class="box-header with-border">
                    <h3 class="box-title"><i class="fa fa-check"></i> {{ 'Route verification' | trans({}, 'edk') }}</h3>
                    <div class="box-tools pull-right">
                        <button type="button" class="btn btn-box-tool" data-widget="collapse">
                            <i class="fa fa-minus"></i>
                        </button>
                    </div>
                </div>
                <div class="box-body">
                    <div class="col-md-12 margin-bottom">
                        <a href="{{ spath('edk_route_verify', { id: item.id }) }}" class="btn btn-primary btn-block">
                            <i class="fa fa-gears"></i> {{ 'Verify' | trans({}, 'edk') }}
                        </a>
                    </div>
					{{ macros.route_verification_task_box(
						'singlePath', 'fa-circle-o', item.verificationStatus, 'Single path' | trans({}, 'edk'),
						'SinglePathDescription' | trans({}, 'edk')
					) }}
					{{ macros.route_verification_task_box(
						'pathLength', 'fa-map-signs', item.verificationStatus, 'Length' | trans({}, 'edk'),
						'RouteLengthDescription' | trans({}, 'edk')
					) }}
					{{ macros.route_verification_task_box(
						'routeType', 'fa-flag-o', item.verificationStatus, 'Route type' | trans({}, 'edk'), null,
						macros.route_type_name(item.routeType)
					) }}
					{{ macros.route_verification_task_box(
						'numberOfStations', 'fa-map-marker', item.verificationStatus,
						'Stations number and naming' | trans({}, 'edk'),
						'NumberOfStationsDescription' | trans({}, 'edk')
					) }}
					{{ macros.route_verification_task_box(
						'stationsOrder', 'fa-sort-numeric-asc', item.verificationStatus,
						'Stations order' | trans({}, 'edk'), 'StationsOrderDescription' | trans({}, 'edk')
					) }}
					{{ macros.route_verification_task_box(
						'stationsOnPath', 'fa-map-pin', item.verificationStatus,
						'Stations location' | trans({}, 'edk'), 'StationsOnPathDescription' | trans({}, 'edk')
					) }}
					{{ macros.route_verification_task_box(
						'elevationGain', 'fa-arrow-up', item.verificationStatus, 'Total ascent' | trans({}, 'edk'),
						'TotalAscentDescription' | trans({}, 'edk')
					) }}
					{{ macros.route_verification_task_box(
						'elevationLoss', 'fa-arrow-down', item.verificationStatus, 'Total descent' | trans({}, 'edk'),
						'TotalDescentDescription' | trans({}, 'edk')
					) }}
					{{ macros.route_verification_task_box(
						'elevationTotalChange', 'fa-arrows-v', item.verificationStatus,
						'Total elevation change' | trans({}, 'edk'),
						'TotalElevationChangeDescription' | trans({}, 'edk')
					) }}
                </div>
				{% if item.elevationCharacteristic %}
					<div class="box-footer">
						<div class="col-md-12">
							<div id="profilTrasy">{{ 'Elevation chart' | trans({}, 'edk') }}</div>
							<canvas id="elevationChart" style="height:150px;width:100%"
								data-elevation="{{ item.elevationCharacteristic | json_encode }}"></canvas>
						</div>
					</div>
				{% endif %}
            </div>
        </div>
    </div>
{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <link rel="stylesheet" href="{{ asset('css/summernote.css') }}"/>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script src="{{ asset('js/description-editor.js') }}"></script>
    <script src="{{ asset('js/chatbox.js') }}"></script>
    <script src="{{ asset('js/summernote.min.js') }}"></script>
    <script src="{{ asset('js/lang/summernote-' ~ user.settingsLanguage.locale ~ '.js') }}"></script>
    <script src="{{ asset('js/Chart.min.js') }}"></script>
	<script>
		function drawElevationChart(chart, data) {
            var X_AXIS_NUMBER_OF_LABELS = 10;
            var X_AXIS_LABEL_STRING = '[km]';
            var Y_AXIS_LABEL_STRING = '[m]';
            var CHART_BACKGROUND_COLOR = 'rgb(32, 77, 116)';

            var labelWidth = Math.round(data.length / X_AXIS_NUMBER_OF_LABELS);
            var labels = data.map(function (item) {
                return item.distance.toFixed();
            });
            var values = data.map(function (item) {
                return item.elevation;
            });

            console.debug('Drawing elevation chart. Input:', data);

            new Chart(chart, {
                type: 'line',
                data: {
                    datasets: [{
                        label: '',
                        data: values,
                        fill: 'start',
                        radius: 0,
                        backgroundColor: CHART_BACKGROUND_COLOR,
                    }],
                    labels: labels
                },
                options: {
                    scales: {
                        xAxes: [{
                            scaleLabel: {
                                display: true,
                                labelString: X_AXIS_LABEL_STRING
                            },
                            ticks: {
                                callback: function (dataLabel, index) {
                                    return index % labelWidth === 0 || index === data.length - 1 ? dataLabel : null;
                                }
                            }
                        }],
                        yAxes: [{
                            scaleLabel: {
                                display: true,
                                labelString: Y_AXIS_LABEL_STRING
                            }
                        }]
                    },
                    legend: {
                        display: false
                    },
                    tooltips: {
                        enabled: false
                    }
                }
            });
        }
        var chartCanvas = $('#elevationChart');
        if (chartCanvas.length === 1) {
            drawElevationChart(chartCanvas, chartCanvas.data('elevation'));
        }
	</script>
{% endblock %}

{% block javascripts_inline %}
    <script>
        $('#notes').descriptions({
            'tabActivator': 'a[data-toggle="tab"]',
            'noteTab': 'notes',
            'reloadActionUrl': '{{ spath(ajaxReloadPage, {'id': item.id }) }}',
            'updateActionUrl': '{{ spath(ajaxUpdatePage, {'id': item.id }) }}',
            'clickToEditText': '{{ 'Click to edit' | trans([], 'edk') }}'
        });
        $('#ppp').chatbox({
            chatboxSummary: '#route-comments-summary',
            chatboxBody: '#route-comments-body',
            chatboxForm: '#route-comments-form',
            chatboxFeedUrl: '{{ spath(ajaxChatFeedPage, {'id': item.id} ) }}',
            chatboxPostUrl: '{{ spath(ajaxChatPostPage, {'id': item.id} ) }}',
            avatars: '{{ asset('ph') }}',
            isPreviewMode: false,
        });
    </script>
    <script>
        $('#note-content-editor').summernote({
            lang: '{{ user.settingsLanguage.locale }}',
            airMode: true,
            placeholder: '{{ 'EditorStartTypingPlaceholder' | trans([], 'edk') }}',
            popover: {
                air: [
                    ['link', ['link', 'unlink']],
                    ['font', ['bold', 'italic', 'underline', 'strikethrough', 'superscript', 'subscript']],
                    ['para', ['ul', 'ol', 'paragraph']],
                    ['misc', ['clear', 'undo', 'redo']]
                ]
            }
        });
    </script>
    <script src="{{ map.geometryLink }}"></script>
    <script>
        {% raw %}
        function initialize() {
            var myLatLng = new google.maps.LatLng(50.06561980, 19.946850);
            var element = document.getElementById('map-canvas');
            var map = new
            google.maps.Map(element, {
                zoom: 11,
                center: myLatLng,
                styles: [{
                    "featureType": "administrative",
                    "elementType": "labels.text.fill",
                    "stylers": [{"color": "#444444"}]
                }, {
                    "featureType": "administrative.land_parcel",
                    "elementType": "all",
                    "stylers": [{"visibility": "off"}]
                }, {
                    "featureType": "landscape",
                    "elementType": "all",
                    "stylers": [{"color": "#f2f2f2"}]
                }, {
                    "featureType": "landscape.natural",
                    "elementType": "all",
                    "stylers": [{"visibility": "off"}]
                }, {
                    "featureType": "poi",
                    "elementType": "all",
                    "stylers": [{"visibility": "on"}, {"color": "#052366"}, {"saturation": "-70"}, {"lightness": "85"}]
                }, {
                    "featureType": "poi",
                    "elementType": "labels",
                    "stylers": [{"visibility": "simplified"}, {"lightness": "-53"}, {"weight": "1.00"}, {"gamma": "0.98"}]
                }, {
                    "featureType": "poi",
                    "elementType": "labels.icon",
                    "stylers": [{"visibility": "simplified"}]
                }, {
                    "featureType": "road",
                    "elementType": "all",
                    "stylers": [{"saturation": -100}, {"lightness": 45}, {"visibility": "on"}]
                }, {
                    "featureType": "road",
                    "elementType": "geometry",
                    "stylers": [{"saturation": "-18"}]
                }, {
                    "featureType": "road",
                    "elementType": "labels",
                    "stylers": [{"visibility": "off"}]
                }, {
                    "featureType": "road.highway",
                    "elementType": "all",
                    "stylers": [{"visibility": "on"}]
                }, {
                    "featureType": "road.arterial",
                    "elementType": "all",
                    "stylers": [{"visibility": "on"}]
                }, {
                    "featureType": "road.arterial",
                    "elementType": "labels.icon",
                    "stylers": [{"visibility": "off"}]
                }, {
                    "featureType": "road.local",
                    "elementType": "all",
                    "stylers": [{"visibility": "on"}]
                }, {
                    "featureType": "transit",
                    "elementType": "all",
                    "stylers": [{"visibility": "off"}]
                }, {
                    "featureType": "water",
                    "elementType": "all",
                    "stylers": [{"color": "#57677a"}, {"visibility": "on"}]
                }]
            });

            var ctaLayer = new google.maps.KmlLayer({
                url: element.getAttribute('data-what')
            });
            ctaLayer.setMap(map);
        }

        google.maps.event.addDomListener(window, 'load', initialize);
        {% endraw %}
    </script>
{% endblock %}
