(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){"use strict";var invariant=require("@turf/invariant");function bearing(start,end,options){var final=typeof options==="object"?options.final:options;if(final===true)return calculateFinalBearing(start,end);var degrees2radians=Math.PI/180;var radians2degrees=180/Math.PI;var coordinates1=invariant.getCoord(start);var coordinates2=invariant.getCoord(end);var lon1=degrees2radians*coordinates1[0];var lon2=degrees2radians*coordinates2[0];var lat1=degrees2radians*coordinates1[1];var lat2=degrees2radians*coordinates2[1];var a=Math.sin(lon2-lon1)*Math.cos(lat2);var b=Math.cos(lat1)*Math.sin(lat2)-Math.sin(lat1)*Math.cos(lat2)*Math.cos(lon2-lon1);var bear=radians2degrees*Math.atan2(a,b);return bear}function calculateFinalBearing(start,end){var bear=bearing(end,start);bear=(bear+180)%360;return bear}module.exports=bearing;module.exports.default=bearing},{"@turf/invariant":2}],2:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});function getCoord(obj){if(!obj)throw new Error("obj is required");var coordinates=getCoords(obj);if(coordinates.length>1&&typeof coordinates[0]==="number"&&typeof coordinates[1]==="number"){return coordinates}else{throw new Error("Coordinate is not a valid Point")}}function getCoords(obj){if(!obj)throw new Error("obj is required");var coordinates;if(obj.length){coordinates=obj}else if(obj.coordinates){coordinates=obj.coordinates}else if(obj.geometry&&obj.geometry.coordinates){coordinates=obj.geometry.coordinates}if(coordinates){containsNumber(coordinates);return coordinates}throw new Error("No valid coordinates")}function containsNumber(coordinates){if(coordinates.length>1&&typeof coordinates[0]==="number"&&typeof coordinates[1]==="number"){return true}if(Array.isArray(coordinates[0])&&coordinates[0].length){return containsNumber(coordinates[0])}throw new Error("coordinates must only contain numbers")}function geojsonType(value,type,name){if(!type||!name)throw new Error("type and name required");if(!value||value.type!==type){throw new Error("Invalid input to "+name+": must be a "+type+", given "+value.type)}}function featureOf(feature,type,name){if(!feature)throw new Error("No feature passed");if(!name)throw new Error(".featureOf() requires a name");if(!feature||feature.type!=="Feature"||!feature.geometry){throw new Error("Invalid input to "+name+", Feature with geometry required")}if(!feature.geometry||feature.geometry.type!==type){throw new Error("Invalid input to "+name+": must be a "+type+", given "+feature.geometry.type)}}function collectionOf(featureCollection,type,name){if(!featureCollection)throw new Error("No featureCollection passed");if(!name)throw new Error(".collectionOf() requires a name");if(!featureCollection||featureCollection.type!=="FeatureCollection"){throw new Error("Invalid input to "+name+", FeatureCollection required")}for(var i=0;i<featureCollection.features.length;i++){var feature=featureCollection.features[i];if(!feature||feature.type!=="Feature"||!feature.geometry){throw new Error("Invalid input to "+name+", Feature with geometry required")}if(!feature.geometry||feature.geometry.type!==type){throw new Error("Invalid input to "+name+": must be a "+type+", given "+feature.geometry.type)}}}function getGeom(geojson){if(!geojson)throw new Error("geojson is required");if(geojson.geometry!==undefined)return geojson.geometry;if(geojson.coordinates||geojson.geometries)return geojson;throw new Error("geojson must be a valid Feature or Geometry Object")}function getGeomType(){throw new Error("invariant.getGeomType has been deprecated in v5.0 in favor of invariant.getType")}function getType(geojson,name){if(!geojson)throw new Error((name||"geojson")+" is required");if(geojson.geometry&&geojson.geometry.type)return geojson.geometry.type;if(geojson.type)return geojson.type;throw new Error((name||"geojson")+" is invalid")}exports.getCoord=getCoord;exports.getCoords=getCoords;exports.containsNumber=containsNumber;exports.geojsonType=geojsonType;exports.featureOf=featureOf;exports.collectionOf=collectionOf;exports.getGeom=getGeom;exports.getGeomType=getGeomType;exports.getType=getType},{}],3:[function(require,module,exports){"use strict";var invariant=require("@turf/invariant");var helpers=require("@turf/helpers");function destination(origin,distance,bearing,units){var degrees2radians=Math.PI/180;var radians2degrees=180/Math.PI;var coordinates1=invariant.getCoord(origin);var longitude1=degrees2radians*coordinates1[0];var latitude1=degrees2radians*coordinates1[1];var bearing_rad=degrees2radians*bearing;var radians=helpers.distanceToRadians(distance,units);var latitude2=Math.asin(Math.sin(latitude1)*Math.cos(radians)+Math.cos(latitude1)*Math.sin(radians)*Math.cos(bearing_rad));var longitude2=longitude1+Math.atan2(Math.sin(bearing_rad)*Math.sin(radians)*Math.cos(latitude1),Math.cos(radians)-Math.sin(latitude1)*Math.sin(latitude2));return helpers.point([radians2degrees*longitude2,radians2degrees*latitude2])}module.exports=destination;module.exports.default=destination},{"@turf/helpers":4,"@turf/invariant":5}],4:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});function feature(geometry,properties,bbox,id){if(geometry===undefined)throw new Error("geometry is required");if(properties&&properties.constructor!==Object)throw new Error("properties must be an Object");if(bbox&&bbox.length!==4)throw new Error("bbox must be an Array of 4 numbers");if(id&&["string","number"].indexOf(typeof id)===-1)throw new Error("id must be a number or a string");var feat={type:"Feature"};if(id)feat.id=id;if(bbox)feat.bbox=bbox;feat.properties=properties||{};feat.geometry=geometry;return feat}function geometry(type,coordinates,bbox){if(!type)throw new Error("type is required");if(!coordinates)throw new Error("coordinates is required");if(!Array.isArray(coordinates))throw new Error("coordinates must be an Array");if(bbox&&bbox.length!==4)throw new Error("bbox must be an Array of 4 numbers");var geom;switch(type){case"Point":geom=point(coordinates).geometry;break;case"LineString":geom=lineString(coordinates).geometry;break;case"Polygon":geom=polygon(coordinates).geometry;break;case"MultiPoint":geom=multiPoint(coordinates).geometry;break;case"MultiLineString":geom=multiLineString(coordinates).geometry;break;case"MultiPolygon":geom=multiPolygon(coordinates).geometry;break;default:throw new Error(type+" is invalid")}if(bbox)geom.bbox=bbox;return geom}function point(coordinates,properties,bbox,id){if(!coordinates)throw new Error("No coordinates passed");if(coordinates.length===undefined)throw new Error("Coordinates must be an array");if(coordinates.length<2)throw new Error("Coordinates must be at least 2 numbers long");if(!isNumber(coordinates[0])||!isNumber(coordinates[1]))throw new Error("Coordinates must contain numbers");return feature({type:"Point",coordinates:coordinates},properties,bbox,id)}function polygon(coordinates,properties,bbox,id){if(!coordinates)throw new Error("No coordinates passed");for(var i=0;i<coordinates.length;i++){var ring=coordinates[i];if(ring.length<4){throw new Error("Each LinearRing of a Polygon must have 4 or more Positions.")}for(var j=0;j<ring[ring.length-1].length;j++){if(i===0&&j===0&&!isNumber(ring[0][0])||!isNumber(ring[0][1]))throw new Error("Coordinates must contain numbers");if(ring[ring.length-1][j]!==ring[0][j]){throw new Error("First and last Position are not equivalent.")}}}return feature({type:"Polygon",coordinates:coordinates},properties,bbox,id)}function lineString(coordinates,properties,bbox,id){if(!coordinates)throw new Error("No coordinates passed");if(coordinates.length<2)throw new Error("Coordinates must be an array of two or more positions");if(!isNumber(coordinates[0][1])||!isNumber(coordinates[0][1]))throw new Error("Coordinates must contain numbers");return feature({type:"LineString",coordinates:coordinates},properties,bbox,id)}function featureCollection(features,bbox,id){if(!features)throw new Error("No features passed");if(!Array.isArray(features))throw new Error("features must be an Array");if(bbox&&bbox.length!==4)throw new Error("bbox must be an Array of 4 numbers");if(id&&["string","number"].indexOf(typeof id)===-1)throw new Error("id must be a number or a string");var fc={type:"FeatureCollection"};if(id)fc.id=id;if(bbox)fc.bbox=bbox;fc.features=features;return fc}function multiLineString(coordinates,properties,bbox,id){if(!coordinates)throw new Error("No coordinates passed");return feature({type:"MultiLineString",coordinates:coordinates},properties,bbox,id)}function multiPoint(coordinates,properties,bbox,id){if(!coordinates)throw new Error("No coordinates passed");return feature({type:"MultiPoint",coordinates:coordinates},properties,bbox,id)}function multiPolygon(coordinates,properties,bbox,id){if(!coordinates)throw new Error("No coordinates passed");return feature({type:"MultiPolygon",coordinates:coordinates},properties,bbox,id)}function geometryCollection(geometries,properties,bbox,id){if(!geometries)throw new Error("geometries is required");if(!Array.isArray(geometries))throw new Error("geometries must be an Array");return feature({type:"GeometryCollection",geometries:geometries},properties,bbox,id)}var factors={miles:3960,nauticalmiles:3441.145,degrees:57.2957795,radians:1,inches:250905600,yards:6969600,meters:6373e3,metres:6373e3,centimeters:6373e5,centimetres:6373e5,kilometers:6373,kilometres:6373,feet:20908792.65};var areaFactors={kilometers:1e-6,kilometres:1e-6,meters:1,metres:1,centimetres:1e4,millimeter:1e6,acres:247105e-9,miles:3.86e-7,yards:1.195990046,feet:10.763910417,inches:1550.003100006};function round(num,precision){if(num===undefined||num===null||isNaN(num))throw new Error("num is required");if(precision&&!(precision>=0))throw new Error("precision must be a positive number");var multiplier=Math.pow(10,precision||0);return Math.round(num*multiplier)/multiplier}function radiansToDistance(radians,units){if(radians===undefined||radians===null)throw new Error("radians is required");if(units&&typeof units!=="string")throw new Error("units must be a string");var factor=factors[units||"kilometers"];if(!factor)throw new Error(units+" units is invalid");return radians*factor}function distanceToRadians(distance,units){if(distance===undefined||distance===null)throw new Error("distance is required");if(units&&typeof units!=="string")throw new Error("units must be a string");var factor=factors[units||"kilometers"];if(!factor)throw new Error(units+" units is invalid");return distance/factor}function distanceToDegrees(distance,units){return radians2degrees(distanceToRadians(distance,units))}function bearingToAngle(bearing){if(bearing===null||bearing===undefined)throw new Error("bearing is required");var angle=bearing%360;if(angle<0)angle+=360;return angle}function radians2degrees(radians){if(radians===null||radians===undefined)throw new Error("radians is required");var degrees=radians%(2*Math.PI);return degrees*180/Math.PI}function degrees2radians(degrees){if(degrees===null||degrees===undefined)throw new Error("degrees is required");var radians=degrees%360;return radians*Math.PI/180}function convertDistance(distance,originalUnit,finalUnit){if(distance===null||distance===undefined)throw new Error("distance is required");if(!(distance>=0))throw new Error("distance must be a positive number");var convertedDistance=radiansToDistance(distanceToRadians(distance,originalUnit),finalUnit||"kilometers");return convertedDistance}function convertArea(area,originalUnit,finalUnit){if(area===null||area===undefined)throw new Error("area is required");if(!(area>=0))throw new Error("area must be a positive number");var startFactor=areaFactors[originalUnit||"meters"];if(!startFactor)throw new Error("invalid original units");var finalFactor=areaFactors[finalUnit||"kilometers"];if(!finalFactor)throw new Error("invalid final units");return area/startFactor*finalFactor}function isNumber(num){return!isNaN(num)&&num!==null&&!Array.isArray(num)}function isObject(input){return!!input&&input.constructor===Object}var earthRadius=6371008.8;exports.feature=feature;exports.geometry=geometry;exports.point=point;exports.polygon=polygon;exports.lineString=lineString;exports.featureCollection=featureCollection;exports.multiLineString=multiLineString;exports.multiPoint=multiPoint;exports.multiPolygon=multiPolygon;exports.geometryCollection=geometryCollection;exports.round=round;exports.radiansToDistance=radiansToDistance;exports.distanceToRadians=distanceToRadians;exports.distanceToDegrees=distanceToDegrees;exports.bearingToAngle=bearingToAngle;exports.radians2degrees=radians2degrees;exports.degrees2radians=degrees2radians;exports.convertDistance=convertDistance;exports.convertArea=convertArea;exports.isNumber=isNumber;exports.isObject=isObject;exports.earthRadius=earthRadius},{}],5:[function(require,module,exports){arguments[4][2][0].apply(exports,arguments)},{dup:2}],6:[function(require,module,exports){"use strict";var meta=require("@turf/meta");var helpers=require("@turf/helpers");function flatten(geojson){if(!geojson)throw new Error("geojson is required");var results=[];meta.flattenEach(geojson,function(feature){results.push(feature)});return helpers.featureCollection(results)}module.exports=flatten;module.exports.default=flatten},{"@turf/helpers":7,"@turf/meta":8}],7:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var earthRadius=6371008.8;var factors={meters:earthRadius,metres:earthRadius,millimeters:earthRadius*1e3,millimetres:earthRadius*1e3,centimeters:earthRadius*100,centimetres:earthRadius*100,kilometers:earthRadius/1e3,kilometres:earthRadius/1e3,miles:earthRadius/1609.344,nauticalmiles:earthRadius/1852,inches:earthRadius*39.37,yards:earthRadius/1.0936,feet:earthRadius*3.28084,radians:1,degrees:earthRadius/111325};var unitsFactors={meters:1,metres:1,millimeters:1e3,millimetres:1e3,centimeters:100,centimetres:100,kilometers:1/1e3,kilometres:1/1e3,miles:1/1609.344,nauticalmiles:1/1852,inches:39.37,yards:1/1.0936,feet:3.28084,radians:1/earthRadius,degrees:1/111325};var areaFactors={meters:1,metres:1,millimeters:1e6,millimetres:1e6,centimeters:1e4,centimetres:1e4,kilometers:1e-6,kilometres:1e-6,acres:247105e-9,miles:3.86e-7,yards:1.195990046,feet:10.763910417,inches:1550.003100006};function feature(geometry,properties,options){options=options||{};if(!isObject(options))throw new Error("options is invalid");var bbox=options.bbox;var id=options.id;if(geometry===undefined)throw new Error("geometry is required");if(properties&&properties.constructor!==Object)throw new Error("properties must be an Object");if(bbox)validateBBox(bbox);if(id)validateId(id);var feat={type:"Feature"};if(id)feat.id=id;if(bbox)feat.bbox=bbox;feat.properties=properties||{};feat.geometry=geometry;return feat}function geometry(type,coordinates,options){options=options||{};if(!isObject(options))throw new Error("options is invalid");var bbox=options.bbox;if(!type)throw new Error("type is required");if(!coordinates)throw new Error("coordinates is required");if(!Array.isArray(coordinates))throw new Error("coordinates must be an Array");if(bbox)validateBBox(bbox);var geom;switch(type){case"Point":geom=point(coordinates).geometry;break;case"LineString":geom=lineString(coordinates).geometry;break;case"Polygon":geom=polygon(coordinates).geometry;break;case"MultiPoint":geom=multiPoint(coordinates).geometry;break;case"MultiLineString":geom=multiLineString(coordinates).geometry;break;case"MultiPolygon":geom=multiPolygon(coordinates).geometry;break;default:throw new Error(type+" is invalid")}if(bbox)geom.bbox=bbox;return geom}function point(coordinates,properties,options){if(!coordinates)throw new Error("coordinates is required");if(!Array.isArray(coordinates))throw new Error("coordinates must be an Array");if(coordinates.length<2)throw new Error("coordinates must be at least 2 numbers long");if(!isNumber(coordinates[0])||!isNumber(coordinates[1]))throw new Error("coordinates must contain numbers");return feature({type:"Point",coordinates:coordinates},properties,options)}function points(coordinates,properties,options){if(!coordinates)throw new Error("coordinates is required");if(!Array.isArray(coordinates))throw new Error("coordinates must be an Array");return featureCollection(coordinates.map(function(coords){return point(coords,properties)}),options)}function polygon(coordinates,properties,options){if(!coordinates)throw new Error("coordinates is required");for(var i=0;i<coordinates.length;i++){var ring=coordinates[i];if(ring.length<4){throw new Error("Each LinearRing of a Polygon must have 4 or more Positions.")}for(var j=0;j<ring[ring.length-1].length;j++){if(i===0&&j===0&&!isNumber(ring[0][0])||!isNumber(ring[0][1]))throw new Error("coordinates must contain numbers");if(ring[ring.length-1][j]!==ring[0][j]){throw new Error("First and last Position are not equivalent.")}}}return feature({type:"Polygon",coordinates:coordinates},properties,options)}function polygons(coordinates,properties,options){if(!coordinates)throw new Error("coordinates is required");if(!Array.isArray(coordinates))throw new Error("coordinates must be an Array");return featureCollection(coordinates.map(function(coords){return polygon(coords,properties)}),options)}function lineString(coordinates,properties,options){if(!coordinates)throw new Error("coordinates is required");if(coordinates.length<2)throw new Error("coordinates must be an array of two or more positions");if(!isNumber(coordinates[0][1])||!isNumber(coordinates[0][1]))throw new Error("coordinates must contain numbers");return feature({type:"LineString",coordinates:coordinates},properties,options)}function lineStrings(coordinates,properties,options){if(!coordinates)throw new Error("coordinates is required");if(!Array.isArray(coordinates))throw new Error("coordinates must be an Array");return featureCollection(coordinates.map(function(coords){return lineString(coords,properties)}),options)}function featureCollection(features,options){options=options||{};if(!isObject(options))throw new Error("options is invalid");var bbox=options.bbox;var id=options.id;if(!features)throw new Error("No features passed");if(!Array.isArray(features))throw new Error("features must be an Array");if(bbox)validateBBox(bbox);if(id)validateId(id);var fc={type:"FeatureCollection"};if(id)fc.id=id;if(bbox)fc.bbox=bbox;fc.features=features;return fc}function multiLineString(coordinates,properties,options){if(!coordinates)throw new Error("coordinates is required");return feature({type:"MultiLineString",coordinates:coordinates},properties,options)}function multiPoint(coordinates,properties,options){if(!coordinates)throw new Error("coordinates is required");return feature({type:"MultiPoint",coordinates:coordinates},properties,options)}function multiPolygon(coordinates,properties,options){if(!coordinates)throw new Error("coordinates is required");return feature({type:"MultiPolygon",coordinates:coordinates},properties,options)}function geometryCollection(geometries,properties,options){if(!geometries)throw new Error("geometries is required");if(!Array.isArray(geometries))throw new Error("geometries must be an Array");return feature({type:"GeometryCollection",geometries:geometries},properties,options)}function round(num,precision){if(num===undefined||num===null||isNaN(num))throw new Error("num is required");if(precision&&!(precision>=0))throw new Error("precision must be a positive number");var multiplier=Math.pow(10,precision||0);return Math.round(num*multiplier)/multiplier}function radiansToLength(radians,units){if(radians===undefined||radians===null)throw new Error("radians is required");if(units&&typeof units!=="string")throw new Error("units must be a string");var factor=factors[units||"kilometers"];if(!factor)throw new Error(units+" units is invalid");return radians*factor}function lengthToRadians(distance,units){if(distance===undefined||distance===null)throw new Error("distance is required");if(units&&typeof units!=="string")throw new Error("units must be a string");var factor=factors[units||"kilometers"];if(!factor)throw new Error(units+" units is invalid");return distance/factor}function lengthToDegrees(distance,units){return radiansToDegrees(lengthToRadians(distance,units))}function bearingToAzimuth(bearing){if(bearing===null||bearing===undefined)throw new Error("bearing is required");var angle=bearing%360;if(angle<0)angle+=360;return angle}function radiansToDegrees(radians){if(radians===null||radians===undefined)throw new Error("radians is required");var degrees=radians%(2*Math.PI);return degrees*180/Math.PI}function degreesToRadians(degrees){if(degrees===null||degrees===undefined)throw new Error("degrees is required");var radians=degrees%360;return radians*Math.PI/180}function convertLength(length,originalUnit,finalUnit){if(length===null||length===undefined)throw new Error("length is required");if(!(length>=0))throw new Error("length must be a positive number");return radiansToLength(lengthToRadians(length,originalUnit),finalUnit||"kilometers")}function convertArea(area,originalUnit,finalUnit){if(area===null||area===undefined)throw new Error("area is required");if(!(area>=0))throw new Error("area must be a positive number");var startFactor=areaFactors[originalUnit||"meters"];if(!startFactor)throw new Error("invalid original units");var finalFactor=areaFactors[finalUnit||"kilometers"];if(!finalFactor)throw new Error("invalid final units");return area/startFactor*finalFactor}function isNumber(num){return!isNaN(num)&&num!==null&&!Array.isArray(num)}function isObject(input){return!!input&&input.constructor===Object}function validateBBox(bbox){if(!bbox)throw new Error("bbox is required");if(!Array.isArray(bbox))throw new Error("bbox must be an Array");if(bbox.length!==4&&bbox.length!==6)throw new Error("bbox must be an Array of 4 or 6 numbers");bbox.forEach(function(num){if(!isNumber(num))throw new Error("bbox must only contain numbers")})}function validateId(id){if(!id)throw new Error("id is required");if(["string","number"].indexOf(typeof id)===-1)throw new Error("id must be a number or a string")}function radians2degrees(){throw new Error("method has been renamed to `radiansToDegrees`")}function degrees2radians(){throw new Error("method has been renamed to `degreesToRadians`")}function distanceToDegrees(){throw new Error("method has been renamed to `lengthToDegrees`")}function distanceToRadians(){throw new Error("method has been renamed to `lengthToRadians`")}function radiansToDistance(){throw new Error("method has been renamed to `radiansToLength`")}function bearingToAngle(){throw new Error("method has been renamed to `bearingToAzimuth`")}function convertDistance(){throw new Error("method has been renamed to `convertLength`")}exports.earthRadius=earthRadius;exports.factors=factors;exports.unitsFactors=unitsFactors;exports.areaFactors=areaFactors;exports.feature=feature;exports.geometry=geometry;exports.point=point;exports.points=points;exports.polygon=polygon;exports.polygons=polygons;exports.lineString=lineString;exports.lineStrings=lineStrings;exports.featureCollection=featureCollection;exports.multiLineString=multiLineString;exports.multiPoint=multiPoint;exports.multiPolygon=multiPolygon;exports.geometryCollection=geometryCollection;exports.round=round;exports.radiansToLength=radiansToLength;exports.lengthToRadians=lengthToRadians;exports.lengthToDegrees=lengthToDegrees;exports.bearingToAzimuth=bearingToAzimuth;exports.radiansToDegrees=radiansToDegrees;exports.degreesToRadians=degreesToRadians;exports.convertLength=convertLength;exports.convertArea=convertArea;exports.isNumber=isNumber;exports.isObject=isObject;exports.validateBBox=validateBBox;exports.validateId=validateId;exports.radians2degrees=radians2degrees;exports.degrees2radians=degrees2radians;exports.distanceToDegrees=distanceToDegrees;exports.distanceToRadians=distanceToRadians;exports.radiansToDistance=radiansToDistance;exports.bearingToAngle=bearingToAngle;exports.convertDistance=convertDistance},{}],8:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var helpers=require("@turf/helpers");function coordEach(geojson,callback,excludeWrapCoord){if(geojson===null)return;var j,k,l,geometry,stopG,coords,geometryMaybeCollection,wrapShrink=0,coordIndex=0,isGeometryCollection,type=geojson.type,isFeatureCollection=type==="FeatureCollection",isFeature=type==="Feature",stop=isFeatureCollection?geojson.features.length:1;for(var featureIndex=0;featureIndex<stop;featureIndex++){geometryMaybeCollection=isFeatureCollection?geojson.features[featureIndex].geometry:isFeature?geojson.geometry:geojson;isGeometryCollection=geometryMaybeCollection?geometryMaybeCollection.type==="GeometryCollection":false;stopG=isGeometryCollection?geometryMaybeCollection.geometries.length:1;for(var geomIndex=0;geomIndex<stopG;geomIndex++){var multiFeatureIndex=0;var geometryIndex=0;geometry=isGeometryCollection?geometryMaybeCollection.geometries[geomIndex]:geometryMaybeCollection;if(geometry===null)continue;coords=geometry.coordinates;var geomType=geometry.type;wrapShrink=excludeWrapCoord&&(geomType==="Polygon"||geomType==="MultiPolygon")?1:0;switch(geomType){case null:break;case"Point":if(callback(coords,coordIndex,featureIndex,multiFeatureIndex,geometryIndex)===false)return false;coordIndex++;multiFeatureIndex++;break;case"LineString":case"MultiPoint":for(j=0;j<coords.length;j++){if(callback(coords[j],coordIndex,featureIndex,multiFeatureIndex,geometryIndex)===false)return false;coordIndex++;if(geomType==="MultiPoint")multiFeatureIndex++}if(geomType==="LineString")multiFeatureIndex++;break;case"Polygon":case"MultiLineString":for(j=0;j<coords.length;j++){for(k=0;k<coords[j].length-wrapShrink;k++){if(callback(coords[j][k],coordIndex,featureIndex,multiFeatureIndex,geometryIndex)===false)return false;coordIndex++}if(geomType==="MultiLineString")multiFeatureIndex++;if(geomType==="Polygon")geometryIndex++}if(geomType==="Polygon")multiFeatureIndex++;break;case"MultiPolygon":for(j=0;j<coords.length;j++){if(geomType==="MultiPolygon")geometryIndex=0;for(k=0;k<coords[j].length;k++){for(l=0;l<coords[j][k].length-wrapShrink;l++){if(callback(coords[j][k][l],coordIndex,featureIndex,multiFeatureIndex,geometryIndex)===false)return false;coordIndex++}geometryIndex++}multiFeatureIndex++}break;case"GeometryCollection":for(j=0;j<geometry.geometries.length;j++)if(coordEach(geometry.geometries[j],callback,excludeWrapCoord)===false)return false;break;default:throw new Error("Unknown Geometry Type")}}}}function coordReduce(geojson,callback,initialValue,excludeWrapCoord){var previousValue=initialValue;coordEach(geojson,function(currentCoord,coordIndex,featureIndex,multiFeatureIndex,geometryIndex){if(coordIndex===0&&initialValue===undefined)previousValue=currentCoord;else previousValue=callback(previousValue,currentCoord,coordIndex,featureIndex,multiFeatureIndex,geometryIndex)},excludeWrapCoord);return previousValue}function propEach(geojson,callback){var i;switch(geojson.type){case"FeatureCollection":for(i=0;i<geojson.features.length;i++){if(callback(geojson.features[i].properties,i)===false)break}break;case"Feature":callback(geojson.properties,0);break}}function propReduce(geojson,callback,initialValue){var previousValue=initialValue;propEach(geojson,function(currentProperties,featureIndex){if(featureIndex===0&&initialValue===undefined)previousValue=currentProperties;else previousValue=callback(previousValue,currentProperties,featureIndex)});return previousValue}function featureEach(geojson,callback){if(geojson.type==="Feature"){callback(geojson,0)}else if(geojson.type==="FeatureCollection"){for(var i=0;i<geojson.features.length;i++){if(callback(geojson.features[i],i)===false)break}}}function featureReduce(geojson,callback,initialValue){var previousValue=initialValue;featureEach(geojson,function(currentFeature,featureIndex){if(featureIndex===0&&initialValue===undefined)previousValue=currentFeature;else previousValue=callback(previousValue,currentFeature,featureIndex)});return previousValue}function coordAll(geojson){var coords=[];coordEach(geojson,function(coord){coords.push(coord)});return coords}function geomEach(geojson,callback){var i,j,g,geometry,stopG,geometryMaybeCollection,isGeometryCollection,featureProperties,featureBBox,featureId,featureIndex=0,isFeatureCollection=geojson.type==="FeatureCollection",isFeature=geojson.type==="Feature",stop=isFeatureCollection?geojson.features.length:1;for(i=0;i<stop;i++){geometryMaybeCollection=isFeatureCollection?geojson.features[i].geometry:isFeature?geojson.geometry:geojson;featureProperties=isFeatureCollection?geojson.features[i].properties:isFeature?geojson.properties:{};featureBBox=isFeatureCollection?geojson.features[i].bbox:isFeature?geojson.bbox:undefined;featureId=isFeatureCollection?geojson.features[i].id:isFeature?geojson.id:undefined;isGeometryCollection=geometryMaybeCollection?geometryMaybeCollection.type==="GeometryCollection":false;stopG=isGeometryCollection?geometryMaybeCollection.geometries.length:1;for(g=0;g<stopG;g++){geometry=isGeometryCollection?geometryMaybeCollection.geometries[g]:geometryMaybeCollection;if(geometry===null){if(callback(null,featureIndex,featureProperties,featureBBox,featureId)===false)return false;continue}switch(geometry.type){case"Point":case"LineString":case"MultiPoint":case"Polygon":case"MultiLineString":case"MultiPolygon":{if(callback(geometry,featureIndex,featureProperties,featureBBox,featureId)===false)return false;break}case"GeometryCollection":{for(j=0;j<geometry.geometries.length;j++){if(callback(geometry.geometries[j],featureIndex,featureProperties,featureBBox,featureId)===false)return false}break}default:throw new Error("Unknown Geometry Type")}}featureIndex++}}function geomReduce(geojson,callback,initialValue){var previousValue=initialValue;geomEach(geojson,function(currentGeometry,featureIndex,featureProperties,featureBBox,featureId){if(featureIndex===0&&initialValue===undefined)previousValue=currentGeometry;else previousValue=callback(previousValue,currentGeometry,featureIndex,featureProperties,featureBBox,featureId)});return previousValue}function flattenEach(geojson,callback){geomEach(geojson,function(geometry,featureIndex,properties,bbox,id){var type=geometry===null?null:geometry.type;switch(type){case null:case"Point":case"LineString":case"Polygon":if(callback(helpers.feature(geometry,properties,{bbox:bbox,id:id}),featureIndex,0)===false)return false;return}var geomType;switch(type){case"MultiPoint":geomType="Point";break;case"MultiLineString":geomType="LineString";break;case"MultiPolygon":geomType="Polygon";break}for(var multiFeatureIndex=0;multiFeatureIndex<geometry.coordinates.length;multiFeatureIndex++){var coordinate=geometry.coordinates[multiFeatureIndex];var geom={type:geomType,coordinates:coordinate};if(callback(helpers.feature(geom,properties),featureIndex,multiFeatureIndex)===false)return false}})}function flattenReduce(geojson,callback,initialValue){var previousValue=initialValue;flattenEach(geojson,function(currentFeature,featureIndex,multiFeatureIndex){if(featureIndex===0&&multiFeatureIndex===0&&initialValue===undefined)previousValue=currentFeature;else previousValue=callback(previousValue,currentFeature,featureIndex,multiFeatureIndex)});return previousValue}function segmentEach(geojson,callback){flattenEach(geojson,function(feature$$1,featureIndex,multiFeatureIndex){var segmentIndex=0;if(!feature$$1.geometry)return;var type=feature$$1.geometry.type;if(type==="Point"||type==="MultiPoint")return;var previousCoords;if(coordEach(feature$$1,function(currentCoord,coordIndex,featureIndexCoord,mutliPartIndexCoord,geometryIndex){if(previousCoords===undefined){previousCoords=currentCoord;return}var currentSegment=helpers.lineString([previousCoords,currentCoord],feature$$1.properties);if(callback(currentSegment,featureIndex,multiFeatureIndex,geometryIndex,segmentIndex)===false)return false;segmentIndex++;previousCoords=currentCoord})===false)return false})}function segmentReduce(geojson,callback,initialValue){var previousValue=initialValue;var started=false;segmentEach(geojson,function(currentSegment,featureIndex,multiFeatureIndex,geometryIndex,segmentIndex){if(started===false&&initialValue===undefined)previousValue=currentSegment;else previousValue=callback(previousValue,currentSegment,featureIndex,multiFeatureIndex,geometryIndex,segmentIndex);started=true});return previousValue}function lineEach(geojson,callback){if(!geojson)throw new Error("geojson is required");flattenEach(geojson,function(feature$$1,featureIndex,multiFeatureIndex){if(feature$$1.geometry===null)return;var type=feature$$1.geometry.type;var coords=feature$$1.geometry.coordinates;switch(type){case"LineString":if(callback(feature$$1,featureIndex,multiFeatureIndex,0,0)===false)return false;break;case"Polygon":for(var geometryIndex=0;geometryIndex<coords.length;geometryIndex++){if(callback(helpers.lineString(coords[geometryIndex],feature$$1.properties),featureIndex,multiFeatureIndex,geometryIndex)===false)return false}break}})}function lineReduce(geojson,callback,initialValue){var previousValue=initialValue;lineEach(geojson,function(currentLine,featureIndex,multiFeatureIndex,geometryIndex){if(featureIndex===0&&initialValue===undefined)previousValue=currentLine;else previousValue=callback(previousValue,currentLine,featureIndex,multiFeatureIndex,geometryIndex)});return previousValue}function findSegment(geojson,options){options=options||{};if(!helpers.isObject(options))throw new Error("options is invalid");var featureIndex=options.featureIndex||0;var multiFeatureIndex=options.multiFeatureIndex||0;var geometryIndex=options.geometryIndex||0;var segmentIndex=options.segmentIndex||0;var properties=options.properties;var geometry;switch(geojson.type){case"FeatureCollection":if(featureIndex<0)featureIndex=geojson.features.length+featureIndex;properties=properties||geojson.features[featureIndex].properties;geometry=geojson.features[featureIndex].geometry;break;case"Feature":properties=properties||geojson.properties;geometry=geojson.geometry;break;case"Point":case"MultiPoint":return null;case"LineString":case"Polygon":case"MultiLineString":case"MultiPolygon":geometry=geojson;break;default:throw new Error("geojson is invalid")}if(geometry===null)return null;var coords=geometry.coordinates;switch(geometry.type){case"Point":case"MultiPoint":return null;case"LineString":if(segmentIndex<0)segmentIndex=coords.length+segmentIndex-1;return helpers.lineString([coords[segmentIndex],coords[segmentIndex+1]],properties,options);case"Polygon":if(geometryIndex<0)geometryIndex=coords.length+geometryIndex;if(segmentIndex<0)segmentIndex=coords[geometryIndex].length+segmentIndex-1;return helpers.lineString([coords[geometryIndex][segmentIndex],coords[geometryIndex][segmentIndex+1]],properties,options);case"MultiLineString":if(multiFeatureIndex<0)multiFeatureIndex=coords.length+multiFeatureIndex;if(segmentIndex<0)segmentIndex=coords[multiFeatureIndex].length+segmentIndex-1;return helpers.lineString([coords[multiFeatureIndex][segmentIndex],coords[multiFeatureIndex][segmentIndex+1]],properties,options);case"MultiPolygon":if(multiFeatureIndex<0)multiFeatureIndex=coords.length+multiFeatureIndex;if(geometryIndex<0)geometryIndex=coords[multiFeatureIndex].length+geometryIndex;if(segmentIndex<0)segmentIndex=coords[multiFeatureIndex][geometryIndex].length-segmentIndex-1;return helpers.lineString([coords[multiFeatureIndex][geometryIndex][segmentIndex],coords[multiFeatureIndex][geometryIndex][segmentIndex+1]],properties,options)}throw new Error("geojson is invalid")}function findPoint(geojson,options){options=options||{};if(!helpers.isObject(options))throw new Error("options is invalid");var featureIndex=options.featureIndex||0;var multiFeatureIndex=options.multiFeatureIndex||0;var geometryIndex=options.geometryIndex||0;var coordIndex=options.coordIndex||0;var properties=options.properties;var geometry;switch(geojson.type){case"FeatureCollection":if(featureIndex<0)featureIndex=geojson.features.length+featureIndex;properties=properties||geojson.features[featureIndex].properties;geometry=geojson.features[featureIndex].geometry;break;case"Feature":properties=properties||geojson.properties;geometry=geojson.geometry;break;case"Point":case"MultiPoint":return null;case"LineString":case"Polygon":case"MultiLineString":case"MultiPolygon":geometry=geojson;break;default:throw new Error("geojson is invalid")}if(geometry===null)return null;var coords=geometry.coordinates;switch(geometry.type){case"Point":return helpers.point(coords,properties,options);case"MultiPoint":if(multiFeatureIndex<0)multiFeatureIndex=coords.length+multiFeatureIndex;return helpers.point(coords[multiFeatureIndex],properties,options);case"LineString":if(coordIndex<0)coordIndex=coords.length+coordIndex;return helpers.point(coords[coordIndex],properties,options);case"Polygon":if(geometryIndex<0)geometryIndex=coords.length+geometryIndex;if(coordIndex<0)coordIndex=coords[geometryIndex].length+coordIndex;return helpers.point(coords[geometryIndex][coordIndex],properties,options);case"MultiLineString":if(multiFeatureIndex<0)multiFeatureIndex=coords.length+multiFeatureIndex;if(coordIndex<0)coordIndex=coords[multiFeatureIndex].length+coordIndex;return helpers.point(coords[multiFeatureIndex][coordIndex],properties,options);case"MultiPolygon":if(multiFeatureIndex<0)multiFeatureIndex=coords.length+multiFeatureIndex;if(geometryIndex<0)geometryIndex=coords[multiFeatureIndex].length+geometryIndex;if(coordIndex<0)coordIndex=coords[multiFeatureIndex][geometryIndex].length-coordIndex;return helpers.point(coords[multiFeatureIndex][geometryIndex][coordIndex],properties,options)}throw new Error("geojson is invalid")}exports.coordEach=coordEach;exports.coordReduce=coordReduce;exports.propEach=propEach;exports.propReduce=propReduce;exports.featureEach=featureEach;exports.featureReduce=featureReduce;exports.coordAll=coordAll;exports.geomEach=geomEach;exports.geomReduce=geomReduce;exports.flattenEach=flattenEach;exports.flattenReduce=flattenReduce;exports.segmentEach=segmentEach;exports.segmentReduce=segmentReduce;exports.lineEach=lineEach;exports.lineReduce=lineReduce;exports.findSegment=findSegment;exports.findPoint=findPoint},{"@turf/helpers":7}],9:[function(require,module,exports){"use strict";function _interopDefault(ex){return ex&&typeof ex==="object"&&"default"in ex?ex["default"]:ex}var rbush=_interopDefault(require("geojson-rbush"));var lineSegment=_interopDefault(require("@turf/line-segment"));var invariant=require("@turf/invariant");var meta=require("@turf/meta");var helpers=require("@turf/helpers");function lineIntersect(line1,line2){var unique={};var results=[];if(line1.type==="LineString")line1=helpers.feature(line1);if(line2.type==="LineString")line2=helpers.feature(line2);if(line1.type==="Feature"&&line2.type==="Feature"&&line1.geometry.type==="LineString"&&line2.geometry.type==="LineString"&&line1.geometry.coordinates.length===2&&line2.geometry.coordinates.length===2){var intersect=intersects(line1,line2);if(intersect)results.push(intersect);return helpers.featureCollection(results)}var tree=rbush();tree.load(lineSegment(line2));meta.featureEach(lineSegment(line1),function(segment){meta.featureEach(tree.search(segment),function(match){var intersect=intersects(segment,match);if(intersect){var key=invariant.getCoords(intersect).join(",");if(!unique[key]){unique[key]=true;results.push(intersect)}}})});return helpers.featureCollection(results)}function intersects(line1,line2){var coords1=invariant.getCoords(line1);var coords2=invariant.getCoords(line2);if(coords1.length!==2){throw new Error("<intersects> line1 must only contain 2 coordinates")}if(coords2.length!==2){throw new Error("<intersects> line2 must only contain 2 coordinates")}var x1=coords1[0][0];var y1=coords1[0][1];var x2=coords1[1][0];var y2=coords1[1][1];var x3=coords2[0][0];var y3=coords2[0][1];var x4=coords2[1][0];var y4=coords2[1][1];var denom=(y4-y3)*(x2-x1)-(x4-x3)*(y2-y1);var numeA=(x4-x3)*(y1-y3)-(y4-y3)*(x1-x3);var numeB=(x2-x1)*(y1-y3)-(y2-y1)*(x1-x3);if(denom===0){if(numeA===0&&numeB===0){return null}return null}var uA=numeA/denom;var uB=numeB/denom;if(uA>=0&&uA<=1&&uB>=0&&uB<=1){var x=x1+uA*(x2-x1);var y=y1+uA*(y2-y1);return helpers.point([x,y])}return null}module.exports=lineIntersect;module.exports.default=lineIntersect},{"@turf/helpers":10,"@turf/invariant":11,"@turf/line-segment":13,"@turf/meta":12,"geojson-rbush":24}],10:[function(require,module,exports){arguments[4][4][0].apply(exports,arguments)},{dup:4}],11:[function(require,module,exports){arguments[4][2][0].apply(exports,arguments)},{dup:2}],12:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});function coordEach(geojson,callback,excludeWrapCoord){if(geojson===null)return;var featureIndex,geometryIndex,j,k,l,geometry,stopG,coords,geometryMaybeCollection,wrapShrink=0,coordIndex=0,isGeometryCollection,type=geojson.type,isFeatureCollection=type==="FeatureCollection",isFeature=type==="Feature",stop=isFeatureCollection?geojson.features.length:1;for(featureIndex=0;featureIndex<stop;featureIndex++){geometryMaybeCollection=isFeatureCollection?geojson.features[featureIndex].geometry:isFeature?geojson.geometry:geojson;isGeometryCollection=geometryMaybeCollection?geometryMaybeCollection.type==="GeometryCollection":false;stopG=isGeometryCollection?geometryMaybeCollection.geometries.length:1;for(geometryIndex=0;geometryIndex<stopG;geometryIndex++){var featureSubIndex=0;geometry=isGeometryCollection?geometryMaybeCollection.geometries[geometryIndex]:geometryMaybeCollection;if(geometry===null)continue;coords=geometry.coordinates;var geomType=geometry.type;wrapShrink=excludeWrapCoord&&(geomType==="Polygon"||geomType==="MultiPolygon")?1:0;switch(geomType){case null:break;case"Point":callback(coords,coordIndex,featureIndex,featureSubIndex);coordIndex++;featureSubIndex++;break;case"LineString":case"MultiPoint":for(j=0;j<coords.length;j++){callback(coords[j],coordIndex,featureIndex,featureSubIndex);coordIndex++;if(geomType==="MultiPoint")featureSubIndex++}if(geomType==="LineString")featureSubIndex++;break;case"Polygon":case"MultiLineString":for(j=0;j<coords.length;j++){for(k=0;k<coords[j].length-wrapShrink;k++){callback(coords[j][k],coordIndex,featureIndex,featureSubIndex);coordIndex++}if(geomType==="MultiLineString")featureSubIndex++}if(geomType==="Polygon")featureSubIndex++;break;case"MultiPolygon":for(j=0;j<coords.length;j++){for(k=0;k<coords[j].length;k++)for(l=0;l<coords[j][k].length-wrapShrink;l++){callback(coords[j][k][l],coordIndex,featureIndex,featureSubIndex);coordIndex++}featureSubIndex++}break;case"GeometryCollection":for(j=0;j<geometry.geometries.length;j++)coordEach(geometry.geometries[j],callback,excludeWrapCoord);break;default:throw new Error("Unknown Geometry Type")}}}}function coordReduce(geojson,callback,initialValue,excludeWrapCoord){var previousValue=initialValue;coordEach(geojson,function(currentCoord,coordIndex,featureIndex,featureSubIndex){if(coordIndex===0&&initialValue===undefined)previousValue=currentCoord;else previousValue=callback(previousValue,currentCoord,coordIndex,featureIndex,featureSubIndex)},excludeWrapCoord);return previousValue}function propEach(geojson,callback){var i;switch(geojson.type){case"FeatureCollection":for(i=0;i<geojson.features.length;i++){callback(geojson.features[i].properties,i)}break;case"Feature":callback(geojson.properties,0);break}}function propReduce(geojson,callback,initialValue){var previousValue=initialValue;propEach(geojson,function(currentProperties,featureIndex){if(featureIndex===0&&initialValue===undefined)previousValue=currentProperties;else previousValue=callback(previousValue,currentProperties,featureIndex)});return previousValue}function featureEach(geojson,callback){if(geojson.type==="Feature"){callback(geojson,0)}else if(geojson.type==="FeatureCollection"){for(var i=0;i<geojson.features.length;i++){callback(geojson.features[i],i)}}}function featureReduce(geojson,callback,initialValue){var previousValue=initialValue;featureEach(geojson,function(currentFeature,featureIndex){if(featureIndex===0&&initialValue===undefined)previousValue=currentFeature;else previousValue=callback(previousValue,currentFeature,featureIndex)});return previousValue}function coordAll(geojson){var coords=[];coordEach(geojson,function(coord){coords.push(coord)});return coords}function geomEach(geojson,callback){var i,j,g,geometry,stopG,geometryMaybeCollection,isGeometryCollection,geometryProperties,featureIndex=0,isFeatureCollection=geojson.type==="FeatureCollection",isFeature=geojson.type==="Feature",stop=isFeatureCollection?geojson.features.length:1;for(i=0;i<stop;i++){geometryMaybeCollection=isFeatureCollection?geojson.features[i].geometry:isFeature?geojson.geometry:geojson;geometryProperties=isFeatureCollection?geojson.features[i].properties:isFeature?geojson.properties:{};isGeometryCollection=geometryMaybeCollection?geometryMaybeCollection.type==="GeometryCollection":false;stopG=isGeometryCollection?geometryMaybeCollection.geometries.length:1;for(g=0;g<stopG;g++){geometry=isGeometryCollection?geometryMaybeCollection.geometries[g]:geometryMaybeCollection;if(geometry===null){callback(null,featureIndex,geometryProperties);continue}switch(geometry.type){case"Point":case"LineString":case"MultiPoint":case"Polygon":case"MultiLineString":case"MultiPolygon":{callback(geometry,featureIndex,geometryProperties);break}case"GeometryCollection":{for(j=0;j<geometry.geometries.length;j++){callback(geometry.geometries[j],featureIndex,geometryProperties)}break}default:throw new Error("Unknown Geometry Type")}}featureIndex++}}function geomReduce(geojson,callback,initialValue){var previousValue=initialValue;geomEach(geojson,function(currentGeometry,currentIndex,currentProperties){if(currentIndex===0&&initialValue===undefined)previousValue=currentGeometry;else previousValue=callback(previousValue,currentGeometry,currentIndex,currentProperties)});return previousValue}function flattenEach(geojson,callback){geomEach(geojson,function(geometry,featureIndex,properties){var type=geometry===null?null:geometry.type;switch(type){case null:case"Point":case"LineString":case"Polygon":callback(feature(geometry,properties),featureIndex,0);return}var geomType;switch(type){case"MultiPoint":geomType="Point";break;case"MultiLineString":geomType="LineString";break;case"MultiPolygon":geomType="Polygon";break}geometry.coordinates.forEach(function(coordinate,featureSubIndex){var geom={type:geomType,coordinates:coordinate};callback(feature(geom,properties),featureIndex,featureSubIndex)})})}function flattenReduce(geojson,callback,initialValue){var previousValue=initialValue;flattenEach(geojson,function(currentFeature,featureIndex,featureSubIndex){if(featureIndex===0&&featureSubIndex===0&&initialValue===undefined)previousValue=currentFeature;else previousValue=callback(previousValue,currentFeature,featureIndex,featureSubIndex)});return previousValue}function segmentEach(geojson,callback){flattenEach(geojson,function(feature,featureIndex,featureSubIndex){var segmentIndex=0;if(!feature.geometry)return;var type=feature.geometry.type;if(type==="Point"||type==="MultiPoint")return;coordReduce(feature,function(previousCoords,currentCoord){var currentSegment=lineString([previousCoords,currentCoord],feature.properties);callback(currentSegment,featureIndex,featureSubIndex,segmentIndex);segmentIndex++;return currentCoord})})}function segmentReduce(geojson,callback,initialValue){var previousValue=initialValue;var started=false;segmentEach(geojson,function(currentSegment,featureIndex,featureSubIndex,segmentIndex){if(started===false&&initialValue===undefined)previousValue=currentSegment;else previousValue=callback(previousValue,currentSegment,featureIndex,featureSubIndex,segmentIndex);started=true});return previousValue}function feature(geometry,properties){if(geometry===undefined)throw new Error("No geometry passed");return{type:"Feature",properties:properties||{},geometry:geometry}}function lineString(coordinates,properties){if(!coordinates)throw new Error("No coordinates passed");if(coordinates.length<2)throw new Error("Coordinates must be an array of two or more positions");return{type:"Feature",properties:properties||{},geometry:{type:"LineString",coordinates:coordinates}}}function lineEach(geojson,callback){if(!geojson)throw new Error("geojson is required");var type=geojson.geometry?geojson.geometry.type:geojson.type;if(!type)throw new Error("invalid geojson");if(type==="FeatureCollection")throw new Error("FeatureCollection is not supported");if(type==="GeometryCollection")throw new Error("GeometryCollection is not supported");var coordinates=geojson.geometry?geojson.geometry.coordinates:geojson.coordinates;if(!coordinates)throw new Error("geojson must contain coordinates");switch(type){case"LineString":callback(coordinates,0,0);return;case"Polygon":case"MultiLineString":var subIndex=0;for(var line=0;line<coordinates.length;line++){if(type==="MultiLineString")subIndex=line;callback(coordinates[line],line,subIndex)}return;case"MultiPolygon":for(var multi=0;multi<coordinates.length;multi++){for(var ring=0;ring<coordinates[multi].length;ring++){callback(coordinates[multi][ring],ring,multi)}}return;default:throw new Error(type+" geometry not supported")}}function lineReduce(geojson,callback,initialValue){var previousValue=initialValue;lineEach(geojson,function(currentLine,lineIndex,lineSubIndex){if(lineIndex===0&&initialValue===undefined)previousValue=currentLine;else previousValue=callback(previousValue,currentLine,lineIndex,lineSubIndex)});return previousValue}exports.coordEach=coordEach;exports.coordReduce=coordReduce;exports.propEach=propEach;exports.propReduce=propReduce;exports.featureEach=featureEach;exports.featureReduce=featureReduce;exports.coordAll=coordAll;exports.geomEach=geomEach;exports.geomReduce=geomReduce;exports.flattenEach=flattenEach;exports.flattenReduce=flattenReduce;exports.segmentEach=segmentEach;exports.segmentReduce=segmentReduce;exports.lineEach=lineEach;exports.lineReduce=lineReduce},{}],13:[function(require,module,exports){"use strict";var helpers=require("@turf/helpers");var invariant=require("@turf/invariant");var meta=require("@turf/meta");function lineSegment(geojson){if(!geojson)throw new Error("geojson is required");var results=[];meta.flattenEach(geojson,function(feature){lineSegmentFeature(feature,results)});return helpers.featureCollection(results)}function lineSegmentFeature(geojson,results){var coords=[];var geometry=geojson.geometry;switch(geometry.type){case"Polygon":coords=invariant.getCoords(geometry);break;case"LineString":coords=[invariant.getCoords(geometry)]}coords.forEach(function(coord){var segments=createSegments(coord,geojson.properties);segments.forEach(function(segment){segment.id=results.length;results.push(segment)})})}function createSegments(coords,properties){var segments=[];coords.reduce(function(previousCoords,currentCoords){var segment=helpers.lineString([previousCoords,currentCoords],properties);segment.bbox=bbox(previousCoords,currentCoords);segments.push(segment);return currentCoords});return segments}function bbox(coords1,coords2){var x1=coords1[0];var y1=coords1[1];var x2=coords2[0];var y2=coords2[1];var west=x1<x2?x1:x2;var south=y1<y2?y1:y2;var east=x1>x2?x1:x2;var north=y1>y2?y1:y2;return[west,south,east,north]}module.exports=lineSegment;module.exports.default=lineSegment},{"@turf/helpers":14,"@turf/invariant":15,"@turf/meta":16}],14:[function(require,module,exports){arguments[4][4][0].apply(exports,arguments)},{dup:4}],15:[function(require,module,exports){arguments[4][2][0].apply(exports,arguments)},{dup:2}],16:[function(require,module,exports){arguments[4][12][0].apply(exports,arguments)},{dup:12}],17:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});function coordEach(geojson,callback,excludeWrapCoord){if(geojson===null)return;var featureIndex,geometryIndex,j,k,l,geometry,stopG,coords,geometryMaybeCollection,wrapShrink=0,coordIndex=0,isGeometryCollection,type=geojson.type,isFeatureCollection=type==="FeatureCollection",isFeature=type==="Feature",stop=isFeatureCollection?geojson.features.length:1;for(featureIndex=0;featureIndex<stop;featureIndex++){geometryMaybeCollection=isFeatureCollection?geojson.features[featureIndex].geometry:isFeature?geojson.geometry:geojson;isGeometryCollection=geometryMaybeCollection?geometryMaybeCollection.type==="GeometryCollection":false;stopG=isGeometryCollection?geometryMaybeCollection.geometries.length:1;for(geometryIndex=0;geometryIndex<stopG;geometryIndex++){var featureSubIndex=0;geometry=isGeometryCollection?geometryMaybeCollection.geometries[geometryIndex]:geometryMaybeCollection;if(geometry===null)continue;coords=geometry.coordinates;var geomType=geometry.type;wrapShrink=excludeWrapCoord&&(geomType==="Polygon"||geomType==="MultiPolygon")?1:0;switch(geomType){case null:break;case"Point":callback(coords,coordIndex,featureIndex,featureSubIndex);coordIndex++;featureSubIndex++;break;case"LineString":case"MultiPoint":for(j=0;j<coords.length;j++){callback(coords[j],coordIndex,featureIndex,featureSubIndex);coordIndex++;if(geomType==="MultiPoint")featureSubIndex++}if(geomType==="LineString")featureSubIndex++;break;case"Polygon":case"MultiLineString":for(j=0;j<coords.length;j++){for(k=0;k<coords[j].length-wrapShrink;k++){callback(coords[j][k],coordIndex,featureIndex,featureSubIndex);coordIndex++}if(geomType==="MultiLineString")featureSubIndex++}if(geomType==="Polygon")featureSubIndex++;break;case"MultiPolygon":for(j=0;j<coords.length;j++){for(k=0;k<coords[j].length;k++)for(l=0;l<coords[j][k].length-wrapShrink;l++){callback(coords[j][k][l],coordIndex,featureIndex,featureSubIndex);coordIndex++}featureSubIndex++}break;case"GeometryCollection":for(j=0;j<geometry.geometries.length;j++)coordEach(geometry.geometries[j],callback,excludeWrapCoord);break;default:throw new Error("Unknown Geometry Type")}}}}function coordReduce(geojson,callback,initialValue,excludeWrapCoord){var previousValue=initialValue;coordEach(geojson,function(currentCoord,coordIndex,featureIndex,featureSubIndex){if(coordIndex===0&&initialValue===undefined)previousValue=currentCoord;else previousValue=callback(previousValue,currentCoord,coordIndex,featureIndex,featureSubIndex)},excludeWrapCoord);return previousValue}function propEach(geojson,callback){var i;switch(geojson.type){case"FeatureCollection":for(i=0;i<geojson.features.length;i++){callback(geojson.features[i].properties,i)}break;case"Feature":callback(geojson.properties,0);break}}function propReduce(geojson,callback,initialValue){var previousValue=initialValue;propEach(geojson,function(currentProperties,featureIndex){if(featureIndex===0&&initialValue===undefined)previousValue=currentProperties;else previousValue=callback(previousValue,currentProperties,featureIndex)});return previousValue}function featureEach(geojson,callback){if(geojson.type==="Feature"){callback(geojson,0)}else if(geojson.type==="FeatureCollection"){for(var i=0;i<geojson.features.length;i++){callback(geojson.features[i],i)}}}function featureReduce(geojson,callback,initialValue){var previousValue=initialValue;featureEach(geojson,function(currentFeature,featureIndex){if(featureIndex===0&&initialValue===undefined)previousValue=currentFeature;else previousValue=callback(previousValue,currentFeature,featureIndex)});return previousValue}function coordAll(geojson){var coords=[];coordEach(geojson,function(coord){coords.push(coord)});return coords}function geomEach(geojson,callback){var i,j,g,geometry,stopG,geometryMaybeCollection,isGeometryCollection,geometryProperties,featureIndex=0,isFeatureCollection=geojson.type==="FeatureCollection",isFeature=geojson.type==="Feature",stop=isFeatureCollection?geojson.features.length:1;for(i=0;i<stop;i++){geometryMaybeCollection=isFeatureCollection?geojson.features[i].geometry:isFeature?geojson.geometry:geojson;geometryProperties=isFeatureCollection?geojson.features[i].properties:isFeature?geojson.properties:{};isGeometryCollection=geometryMaybeCollection?geometryMaybeCollection.type==="GeometryCollection":false;stopG=isGeometryCollection?geometryMaybeCollection.geometries.length:1;for(g=0;g<stopG;g++){geometry=isGeometryCollection?geometryMaybeCollection.geometries[g]:geometryMaybeCollection;if(geometry===null){callback(null,featureIndex,geometryProperties);continue}switch(geometry.type){case"Point":case"LineString":case"MultiPoint":case"Polygon":case"MultiLineString":case"MultiPolygon":{callback(geometry,featureIndex,geometryProperties);break}case"GeometryCollection":{for(j=0;j<geometry.geometries.length;j++){callback(geometry.geometries[j],featureIndex,geometryProperties)}break}default:throw new Error("Unknown Geometry Type")}}featureIndex++}}function geomReduce(geojson,callback,initialValue){var previousValue=initialValue;geomEach(geojson,function(currentGeometry,currentIndex,currentProperties){if(currentIndex===0&&initialValue===undefined)previousValue=currentGeometry;else previousValue=callback(previousValue,currentGeometry,currentIndex,currentProperties)});return previousValue}function flattenEach(geojson,callback){geomEach(geojson,function(geometry,featureIndex,properties){var type=geometry===null?null:geometry.type;switch(type){case null:case"Point":case"LineString":case"Polygon":callback(feature(geometry,properties),featureIndex,0);return}var geomType;switch(type){case"MultiPoint":geomType="Point";break;case"MultiLineString":geomType="LineString";break;case"MultiPolygon":geomType="Polygon";break}geometry.coordinates.forEach(function(coordinate,featureSubIndex){var geom={type:geomType,coordinates:coordinate};callback(feature(geom,properties),featureIndex,featureSubIndex)})})}function flattenReduce(geojson,callback,initialValue){var previousValue=initialValue;flattenEach(geojson,function(currentFeature,featureIndex,featureSubIndex){if(featureIndex===0&&featureSubIndex===0&&initialValue===undefined)previousValue=currentFeature;else previousValue=callback(previousValue,currentFeature,featureIndex,featureSubIndex)});return previousValue}function segmentEach(geojson,callback){flattenEach(geojson,function(feature,featureIndex,featureSubIndex){var segmentIndex=0;if(!feature.geometry)return;var type=feature.geometry.type;if(type==="Point"||type==="MultiPoint")return;coordReduce(feature,function(previousCoords,currentCoord){var currentSegment=lineString([previousCoords,currentCoord],feature.properties);callback(currentSegment,featureIndex,featureSubIndex,segmentIndex);segmentIndex++;return currentCoord})})}function segmentReduce(geojson,callback,initialValue){var previousValue=initialValue;var started=false;segmentEach(geojson,function(currentSegment,featureIndex,featureSubIndex,segmentIndex){if(started===false&&initialValue===undefined)previousValue=currentSegment;else previousValue=callback(previousValue,currentSegment,featureIndex,featureSubIndex,segmentIndex);started=true});return previousValue}function feature(geometry,properties){if(geometry===undefined)throw new Error("No geometry passed");return{type:"Feature",properties:properties||{},geometry:geometry}}function lineString(coordinates,properties){if(!coordinates)throw new Error("No coordinates passed");if(coordinates.length<2)throw new Error("Coordinates must be an array of two or more positions");return{type:"Feature",properties:properties||{},geometry:{type:"LineString",coordinates:coordinates}}}function lineEach(geojson,callback){if(!geojson)throw new Error("geojson is required");var type=geojson.geometry?geojson.geometry.type:geojson.type;if(!type)throw new Error("invalid geojson");if(type==="FeatureCollection")throw new Error("FeatureCollection is not supported");if(type==="GeometryCollection")throw new Error("GeometryCollection is not supported");var coordinates=geojson.geometry?geojson.geometry.coordinates:geojson.coordinates;if(!coordinates)throw new Error("geojson must contain coordinates");switch(type){case"LineString":callback(coordinates,0,0);return;case"Polygon":case"MultiLineString":var subIndex=0;for(var line=0;line<coordinates.length;line++){if(type==="MultiLineString")subIndex=line;callback(coordinates[line],line,subIndex)}return;case"MultiPolygon":for(var multi=0;multi<coordinates.length;multi++){for(var ring=0;ring<coordinates[multi].length;ring++){callback(coordinates[multi][ring],ring,multi)}}return;default:throw new Error(type+" geometry not supported")}}function lineReduce(geojson,callback,initialValue){var previousValue=initialValue;lineEach(geojson,function(currentLine,lineIndex,lineSubIndex){if(lineIndex===0&&initialValue===undefined)previousValue=currentLine;else previousValue=callback(previousValue,currentLine,lineIndex,lineSubIndex)});return previousValue}exports.coordEach=coordEach;exports.coordReduce=coordReduce;exports.propEach=propEach;exports.propReduce=propReduce;exports.featureEach=featureEach;exports.featureReduce=featureReduce;exports.coordAll=coordAll;exports.geomEach=geomEach;exports.geomReduce=geomReduce;exports.flattenEach=flattenEach;exports.flattenReduce=flattenReduce;exports.segmentEach=segmentEach;exports.segmentReduce=segmentReduce;exports.feature=feature;exports.lineString=lineString;exports.lineEach=lineEach;exports.lineReduce=lineReduce},{}],18:[function(require,module,exports){"use strict";function _interopDefault(ex){return ex&&typeof ex==="object"&&"default"in ex?ex["default"]:ex}var bearing=_interopDefault(require("@turf/bearing"));var distance=_interopDefault(require("@turf/distance"));var destination=_interopDefault(require("@turf/destination"));var lineIntersects=_interopDefault(require("@turf/line-intersect"));var meta=require("@turf/meta");var helpers=require("@turf/helpers");var invariant=require("@turf/invariant");function pointOnLine(lines,pt,options){var units=typeof options==="object"?options.units:options;var type=lines.geometry?lines.geometry.type:lines.type;if(type!=="LineString"&&type!=="MultiLineString"){throw new Error("lines must be LineString or MultiLineString")}var closestPt=helpers.point([Infinity,Infinity],{dist:Infinity});var length=0;meta.flattenEach(lines,function(line){var coords=invariant.getCoords(line);for(var i=0;i<coords.length-1;i++){var start=helpers.point(coords[i]);start.properties.dist=distance(pt,start,units);var stop=helpers.point(coords[i+1]);stop.properties.dist=distance(pt,stop,units);var sectionLength=distance(start,stop,units);var heightDistance=Math.max(start.properties.dist,stop.properties.dist);var direction=bearing(start,stop);var perpendicularPt1=destination(pt,heightDistance,direction+90,units);var perpendicularPt2=destination(pt,heightDistance,direction-90,units);var intersect=lineIntersects(helpers.lineString([perpendicularPt1.geometry.coordinates,perpendicularPt2.geometry.coordinates]),helpers.lineString([start.geometry.coordinates,stop.geometry.coordinates]));var intersectPt=null;if(intersect.features.length>0){intersectPt=intersect.features[0];intersectPt.properties.dist=distance(pt,intersectPt,units);intersectPt.properties.location=length+distance(start,intersectPt,units)}if(start.properties.dist<closestPt.properties.dist){closestPt=start;closestPt.properties.index=i;closestPt.properties.location=length}if(stop.properties.dist<closestPt.properties.dist){closestPt=stop;closestPt.properties.index=i+1;closestPt.properties.location=length+sectionLength}if(intersectPt&&intersectPt.properties.dist<closestPt.properties.dist){closestPt=intersectPt;closestPt.properties.index=i}length+=sectionLength}});return closestPt}module.exports=pointOnLine;module.exports.default=pointOnLine},{"@turf/bearing":1,"@turf/destination":3,"@turf/distance":19,"@turf/helpers":20,"@turf/invariant":21,"@turf/line-intersect":9,"@turf/meta":22}],19:[function(require,module,exports){"use strict";var invariant=require("@turf/invariant");var helpers=require("@turf/helpers");function distance(from,to,options){var units=typeof options==="object"?options.units:options;var degrees2radians=Math.PI/180;var coordinates1=invariant.getCoord(from);var coordinates2=invariant.getCoord(to);var dLat=degrees2radians*(coordinates2[1]-coordinates1[1]);var dLon=degrees2radians*(coordinates2[0]-coordinates1[0]);var lat1=degrees2radians*coordinates1[1];var lat2=degrees2radians*coordinates2[1];var a=Math.pow(Math.sin(dLat/2),2)+Math.pow(Math.sin(dLon/2),2)*Math.cos(lat1)*Math.cos(lat2);return helpers.radiansToDistance(2*Math.atan2(Math.sqrt(a),Math.sqrt(1-a)),units)}module.exports=distance;module.exports.default=distance},{"@turf/helpers":20,"@turf/invariant":21}],20:[function(require,module,exports){arguments[4][4][0].apply(exports,arguments)},{dup:4}],21:[function(require,module,exports){arguments[4][2][0].apply(exports,arguments)},{dup:2}],22:[function(require,module,exports){arguments[4][12][0].apply(exports,arguments)},{dup:12}],23:[function(require,module,exports){},{}],24:[function(require,module,exports){"use strict";var meta=require("@turf/meta");var quickselect=function(arr,k,left,right,compare){quickselect$1(arr,k,left||0,right||arr.length-1,compare||defaultCompare)};function quickselect$1(arr,k,left,right,compare){while(right>left){if(right-left>600){var n=right-left+1;var m=k-left+1;var z=Math.log(n);var s=.5*Math.exp(2*z/3);var sd=.5*Math.sqrt(z*s*(n-s)/n)*(m-n/2<0?-1:1);var newLeft=Math.max(left,Math.floor(k-m*s/n+sd));var newRight=Math.min(right,Math.floor(k+(n-m)*s/n+sd));quickselect$1(arr,k,newLeft,newRight,compare)}var t=arr[k];var i=left;var j=right;swap(arr,left,k);if(compare(arr[right],t)>0)swap(arr,left,right);while(i<j){swap(arr,i,j);i++;j--;while(compare(arr[i],t)<0)i++;while(compare(arr[j],t)>0)j--}if(compare(arr[left],t)===0)swap(arr,left,j);else{j++;swap(arr,j,right)}if(j<=k)left=j+1;if(k<=j)right=j-1}}function swap(arr,i,j){var tmp=arr[i];arr[i]=arr[j];arr[j]=tmp}function defaultCompare(a,b){return a<b?-1:a>b?1:0}function rbush(maxEntries,format){if(!(this instanceof rbush))return new rbush(maxEntries,format);this._maxEntries=Math.max(4,maxEntries||9);this._minEntries=Math.max(2,Math.ceil(this._maxEntries*.4));if(format){this._initFormat(format)}this.clear()}rbush.prototype={all:function(){return this._all(this.data,[])},search:function(bbox){var node=this.data,result=[],toBBox=this.toBBox;if(!intersects(bbox,node))return result;var nodesToSearch=[],i,len,child,childBBox;while(node){for(i=0,len=node.children.length;i<len;i++){child=node.children[i];childBBox=node.leaf?toBBox(child):child;if(intersects(bbox,childBBox)){if(node.leaf)result.push(child);else if(contains(bbox,childBBox))this._all(child,result);else nodesToSearch.push(child)}}node=nodesToSearch.pop()}return result},collides:function(bbox){var node=this.data,toBBox=this.toBBox;if(!intersects(bbox,node))return false;var nodesToSearch=[],i,len,child,childBBox;while(node){for(i=0,len=node.children.length;i<len;i++){child=node.children[i];childBBox=node.leaf?toBBox(child):child;if(intersects(bbox,childBBox)){if(node.leaf||contains(bbox,childBBox))return true;nodesToSearch.push(child)}}node=nodesToSearch.pop()}return false},load:function(data){if(!(data&&data.length))return this;if(data.length<this._minEntries){for(var i=0,len=data.length;i<len;i++){this.insert(data[i])}return this}var node=this._build(data.slice(),0,data.length-1,0);if(!this.data.children.length){this.data=node}else if(this.data.height===node.height){this._splitRoot(this.data,node)}else{if(this.data.height<node.height){var tmpNode=this.data;this.data=node;node=tmpNode}this._insert(node,this.data.height-node.height-1,true)}return this},insert:function(item){if(item)this._insert(item,this.data.height-1);return this},clear:function(){this.data=createNode([]);return this},remove:function(item,equalsFn){if(!item)return this;var node=this.data,bbox=this.toBBox(item),path=[],indexes=[],i,parent,index,goingUp;while(node||path.length){if(!node){node=path.pop();parent=path[path.length-1];i=indexes.pop();goingUp=true}if(node.leaf){index=findItem(item,node.children,equalsFn);if(index!==-1){node.children.splice(index,1);path.push(node);this._condense(path);return this}}if(!goingUp&&!node.leaf&&contains(node,bbox)){path.push(node);indexes.push(i);i=0;parent=node;node=node.children[0]}else if(parent){i++;node=parent.children[i];goingUp=false}else node=null}return this},toBBox:function(item){return item},compareMinX:compareNodeMinX,compareMinY:compareNodeMinY,toJSON:function(){return this.data},fromJSON:function(data){this.data=data;return this},_all:function(node,result){var nodesToSearch=[];while(node){if(node.leaf)result.push.apply(result,node.children);else nodesToSearch.push.apply(nodesToSearch,node.children);node=nodesToSearch.pop()}return result},_build:function(items,left,right,height){var N=right-left+1,M=this._maxEntries,node;if(N<=M){node=createNode(items.slice(left,right+1));calcBBox(node,this.toBBox);return node}if(!height){height=Math.ceil(Math.log(N)/Math.log(M));M=Math.ceil(N/Math.pow(M,height-1))}node=createNode([]);node.leaf=false;node.height=height;var N2=Math.ceil(N/M),N1=N2*Math.ceil(Math.sqrt(M)),i,j,right2,right3;multiSelect(items,left,right,N1,this.compareMinX);for(i=left;i<=right;i+=N1){right2=Math.min(i+N1-1,right);multiSelect(items,i,right2,N2,this.compareMinY);for(j=i;j<=right2;j+=N2){right3=Math.min(j+N2-1,right2);node.children.push(this._build(items,j,right3,height-1))}}calcBBox(node,this.toBBox);return node},_chooseSubtree:function(bbox,node,level,path){var i,len,child,targetNode,area,enlargement,minArea,minEnlargement;while(true){path.push(node);if(node.leaf||path.length-1===level)break;minArea=minEnlargement=Infinity;for(i=0,len=node.children.length;i<len;i++){child=node.children[i];area=bboxArea(child);enlargement=enlargedArea(bbox,child)-area;if(enlargement<minEnlargement){minEnlargement=enlargement;minArea=area<minArea?area:minArea;targetNode=child}else if(enlargement===minEnlargement){if(area<minArea){minArea=area;targetNode=child}}}node=targetNode||node.children[0]}return node},_insert:function(item,level,isNode){var toBBox=this.toBBox,bbox=isNode?item:toBBox(item),insertPath=[];var node=this._chooseSubtree(bbox,this.data,level,insertPath);node.children.push(item);extend(node,bbox);while(level>=0){if(insertPath[level].children.length>this._maxEntries){this._split(insertPath,level);level--}else break}this._adjustParentBBoxes(bbox,insertPath,level)},_split:function(insertPath,level){var node=insertPath[level],M=node.children.length,m=this._minEntries;this._chooseSplitAxis(node,m,M);var splitIndex=this._chooseSplitIndex(node,m,M);var newNode=createNode(node.children.splice(splitIndex,node.children.length-splitIndex));newNode.height=node.height;newNode.leaf=node.leaf;calcBBox(node,this.toBBox);calcBBox(newNode,this.toBBox);if(level)insertPath[level-1].children.push(newNode);else this._splitRoot(node,newNode)},_splitRoot:function(node,newNode){this.data=createNode([node,newNode]);this.data.height=node.height+1;this.data.leaf=false;calcBBox(this.data,this.toBBox)},_chooseSplitIndex:function(node,m,M){var i,bbox1,bbox2,overlap,area,minOverlap,minArea,index;minOverlap=minArea=Infinity;for(i=m;i<=M-m;i++){bbox1=distBBox(node,0,i,this.toBBox);bbox2=distBBox(node,i,M,this.toBBox);overlap=intersectionArea(bbox1,bbox2);area=bboxArea(bbox1)+bboxArea(bbox2);if(overlap<minOverlap){minOverlap=overlap;index=i;minArea=area<minArea?area:minArea}else if(overlap===minOverlap){if(area<minArea){minArea=area;index=i}}}return index},_chooseSplitAxis:function(node,m,M){var compareMinX=node.leaf?this.compareMinX:compareNodeMinX,compareMinY=node.leaf?this.compareMinY:compareNodeMinY,xMargin=this._allDistMargin(node,m,M,compareMinX),yMargin=this._allDistMargin(node,m,M,compareMinY);if(xMargin<yMargin)node.children.sort(compareMinX)},_allDistMargin:function(node,m,M,compare){node.children.sort(compare);var toBBox=this.toBBox,leftBBox=distBBox(node,0,m,toBBox),rightBBox=distBBox(node,M-m,M,toBBox),margin=bboxMargin(leftBBox)+bboxMargin(rightBBox),i,child;for(i=m;i<M-m;i++){child=node.children[i];extend(leftBBox,node.leaf?toBBox(child):child);margin+=bboxMargin(leftBBox)}for(i=M-m-1;i>=m;i--){child=node.children[i];extend(rightBBox,node.leaf?toBBox(child):child);margin+=bboxMargin(rightBBox)}return margin},_adjustParentBBoxes:function(bbox,path,level){for(var i=level;i>=0;i--){extend(path[i],bbox)}},_condense:function(path){for(var i=path.length-1,siblings;i>=0;i--){if(path[i].children.length===0){if(i>0){siblings=path[i-1].children;siblings.splice(siblings.indexOf(path[i]),1)}else this.clear()}else calcBBox(path[i],this.toBBox)}},_initFormat:function(format){var compareArr=["return a"," - b",";"];this.compareMinX=new Function("a","b",compareArr.join(format[0]));this.compareMinY=new Function("a","b",compareArr.join(format[1]));this.toBBox=new Function("a","return {minX: a"+format[0]+", minY: a"+format[1]+", maxX: a"+format[2]+", maxY: a"+format[3]+"};")}};function findItem(item,items,equalsFn){if(!equalsFn)return items.indexOf(item);for(var i=0;i<items.length;i++){if(equalsFn(item,items[i]))return i}return-1}function calcBBox(node,toBBox){distBBox(node,0,node.children.length,toBBox,node)}function distBBox(node,k,p,toBBox,destNode){if(!destNode)destNode=createNode(null);destNode.minX=Infinity;destNode.minY=Infinity;destNode.maxX=-Infinity;destNode.maxY=-Infinity;for(var i=k,child;i<p;i++){child=node.children[i];extend(destNode,node.leaf?toBBox(child):child)}return destNode}function extend(a,b){a.minX=Math.min(a.minX,b.minX);a.minY=Math.min(a.minY,b.minY);a.maxX=Math.max(a.maxX,b.maxX);a.maxY=Math.max(a.maxY,b.maxY);return a}function compareNodeMinX(a,b){return a.minX-b.minX}function compareNodeMinY(a,b){return a.minY-b.minY}function bboxArea(a){return(a.maxX-a.minX)*(a.maxY-a.minY)}function bboxMargin(a){return a.maxX-a.minX+(a.maxY-a.minY)}function enlargedArea(a,b){return(Math.max(b.maxX,a.maxX)-Math.min(b.minX,a.minX))*(Math.max(b.maxY,a.maxY)-Math.min(b.minY,a.minY))}function intersectionArea(a,b){var minX=Math.max(a.minX,b.minX),minY=Math.max(a.minY,b.minY),maxX=Math.min(a.maxX,b.maxX),maxY=Math.min(a.maxY,b.maxY);return Math.max(0,maxX-minX)*Math.max(0,maxY-minY)}function contains(a,b){return a.minX<=b.minX&&a.minY<=b.minY&&b.maxX<=a.maxX&&b.maxY<=a.maxY}function intersects(a,b){return b.minX<=a.maxX&&b.minY<=a.maxY&&b.maxX>=a.minX&&b.maxY>=a.minY}function createNode(children){return{children:children,height:1,leaf:true,minX:Infinity,minY:Infinity,maxX:-Infinity,maxY:-Infinity}}function multiSelect(arr,left,right,n,compare){var stack=[left,right],mid;while(stack.length){right=stack.pop();left=stack.pop();if(right-left<=n)continue;mid=left+Math.ceil((right-left)/n/2)*n;quickselect(arr,mid,left,right,compare);stack.push(left,mid,mid,right)}}function geojsonRbush(maxEntries){var tree=rbush(maxEntries);tree.insert=function(feature){if(Array.isArray(feature)){var bbox=feature;feature=bboxPolygon(bbox);feature.bbox=bbox}else{feature.bbox=feature.bbox?feature.bbox:turfBBox(feature)}return rbush.prototype.insert.call(this,feature)};tree.load=function(features){var load=[];if(Array.isArray(features)){features.forEach(function(bbox){var feature=bboxPolygon(bbox);feature.bbox=bbox;load.push(feature)})}else{meta.featureEach(features,function(feature){feature.bbox=feature.bbox?feature.bbox:turfBBox(feature);load.push(feature)})}return rbush.prototype.load.call(this,load)};tree.remove=function(feature){if(Array.isArray(feature)){var bbox=feature;feature=bboxPolygon(bbox);feature.bbox=bbox}return rbush.prototype.remove.call(this,feature)};tree.clear=function(){return rbush.prototype.clear.call(this)};tree.search=function(geojson){var features=rbush.prototype.search.call(this,this.toBBox(geojson));return{type:"FeatureCollection",features:features}};tree.collides=function(geojson){return rbush.prototype.collides.call(this,this.toBBox(geojson))};tree.all=function(){var features=rbush.prototype.all.call(this);return{type:"FeatureCollection",features:features}};tree.toJSON=function(){return rbush.prototype.toJSON.call(this)};tree.fromJSON=function(json){return rbush.prototype.fromJSON.call(this,json)};tree.toBBox=function(geojson){var bbox;if(geojson.bbox)bbox=geojson.bbox;else if(Array.isArray(geojson)&&geojson.length===4)bbox=geojson;else bbox=turfBBox(geojson);return{minX:bbox[0],minY:bbox[1],maxX:bbox[2],maxY:bbox[3]}};return tree}function bboxPolygon(bbox){var lowLeft=[bbox[0],bbox[1]];var topLeft=[bbox[0],bbox[3]];var topRight=[bbox[2],bbox[3]];var lowRight=[bbox[2],bbox[1]];var coordinates=[[lowLeft,lowRight,topRight,topLeft,lowLeft]];return{type:"Feature",bbox:bbox,properties:{},geometry:{type:"Polygon",coordinates:coordinates}}}function turfBBox(geojson){var bbox=[Infinity,Infinity,-Infinity,-Infinity];meta.coordEach(geojson,function(coord){if(bbox[0]>coord[0])bbox[0]=coord[0];if(bbox[1]>coord[1])bbox[1]=coord[1];if(bbox[2]<coord[0])bbox[2]=coord[0];if(bbox[3]<coord[1])bbox[3]=coord[1]});return bbox}module.exports=geojsonRbush;module.exports.default=geojsonRbush},{"@turf/meta":17}],25:[function(require,module,exports){var getNative=require("./_getNative"),root=require("./_root");var DataView=getNative(root,"DataView");module.exports=DataView},{"./_getNative":94,"./_root":132}],26:[function(require,module,exports){var hashClear=require("./_hashClear"),hashDelete=require("./_hashDelete"),hashGet=require("./_hashGet"),hashHas=require("./_hashHas"),hashSet=require("./_hashSet");function Hash(entries){var index=-1,length=entries==null?0:entries.length;this.clear();while(++index<length){var entry=entries[index];this.set(entry[0],entry[1])}}Hash.prototype.clear=hashClear;Hash.prototype["delete"]=hashDelete;Hash.prototype.get=hashGet;Hash.prototype.has=hashHas;Hash.prototype.set=hashSet;module.exports=Hash},{"./_hashClear":100,"./_hashDelete":101,"./_hashGet":102,"./_hashHas":103,"./_hashSet":104}],27:[function(require,module,exports){var listCacheClear=require("./_listCacheClear"),listCacheDelete=require("./_listCacheDelete"),listCacheGet=require("./_listCacheGet"),listCacheHas=require("./_listCacheHas"),listCacheSet=require("./_listCacheSet");function ListCache(entries){var index=-1,length=entries==null?0:entries.length;this.clear();while(++index<length){var entry=entries[index];this.set(entry[0],entry[1])}}ListCache.prototype.clear=listCacheClear;ListCache.prototype["delete"]=listCacheDelete;ListCache.prototype.get=listCacheGet;ListCache.prototype.has=listCacheHas;ListCache.prototype.set=listCacheSet;module.exports=ListCache},{"./_listCacheClear":113,"./_listCacheDelete":114,"./_listCacheGet":115,"./_listCacheHas":116,"./_listCacheSet":117}],28:[function(require,module,exports){var getNative=require("./_getNative"),root=require("./_root");var Map=getNative(root,"Map");module.exports=Map},{"./_getNative":94,"./_root":132}],29:[function(require,module,exports){var mapCacheClear=require("./_mapCacheClear"),mapCacheDelete=require("./_mapCacheDelete"),mapCacheGet=require("./_mapCacheGet"),mapCacheHas=require("./_mapCacheHas"),mapCacheSet=require("./_mapCacheSet");function MapCache(entries){var index=-1,length=entries==null?0:entries.length;this.clear();while(++index<length){var entry=entries[index];this.set(entry[0],entry[1])}}MapCache.prototype.clear=mapCacheClear;MapCache.prototype["delete"]=mapCacheDelete;MapCache.prototype.get=mapCacheGet;MapCache.prototype.has=mapCacheHas;MapCache.prototype.set=mapCacheSet;module.exports=MapCache},{"./_mapCacheClear":118,"./_mapCacheDelete":119,"./_mapCacheGet":120,"./_mapCacheHas":121,"./_mapCacheSet":122}],30:[function(require,module,exports){var getNative=require("./_getNative"),root=require("./_root");var Promise=getNative(root,"Promise");module.exports=Promise},{"./_getNative":94,"./_root":132}],31:[function(require,module,exports){var getNative=require("./_getNative"),root=require("./_root");var Set=getNative(root,"Set");module.exports=Set},{"./_getNative":94,"./_root":132}],32:[function(require,module,exports){var MapCache=require("./_MapCache"),setCacheAdd=require("./_setCacheAdd"),setCacheHas=require("./_setCacheHas");function SetCache(values){var index=-1,length=values==null?0:values.length;this.__data__=new MapCache;while(++index<length){this.add(values[index])}}SetCache.prototype.add=SetCache.prototype.push=setCacheAdd;SetCache.prototype.has=setCacheHas;module.exports=SetCache},{"./_MapCache":29,"./_setCacheAdd":133,"./_setCacheHas":134}],33:[function(require,module,exports){var ListCache=require("./_ListCache"),stackClear=require("./_stackClear"),stackDelete=require("./_stackDelete"),stackGet=require("./_stackGet"),stackHas=require("./_stackHas"),stackSet=require("./_stackSet");function Stack(entries){var data=this.__data__=new ListCache(entries);this.size=data.size}Stack.prototype.clear=stackClear;Stack.prototype["delete"]=stackDelete;Stack.prototype.get=stackGet;Stack.prototype.has=stackHas;Stack.prototype.set=stackSet;module.exports=Stack},{"./_ListCache":27,"./_stackClear":138,"./_stackDelete":139,"./_stackGet":140,"./_stackHas":141,"./_stackSet":142}],34:[function(require,module,exports){var root=require("./_root");var Symbol=root.Symbol;module.exports=Symbol},{"./_root":132}],35:[function(require,module,exports){var root=require("./_root");var Uint8Array=root.Uint8Array;module.exports=Uint8Array},{"./_root":132}],36:[function(require,module,exports){var getNative=require("./_getNative"),root=require("./_root");var WeakMap=getNative(root,"WeakMap");module.exports=WeakMap},{"./_getNative":94,"./_root":132}],37:[function(require,module,exports){function apply(func,thisArg,args){switch(args.length){case 0:return func.call(thisArg);case 1:return func.call(thisArg,args[0]);case 2:return func.call(thisArg,args[0],args[1]);case 3:return func.call(thisArg,args[0],args[1],args[2])}return func.apply(thisArg,args)}module.exports=apply},{}],38:[function(require,module,exports){function arrayEach(array,iteratee){var index=-1,length=array==null?0:array.length;while(++index<length){if(iteratee(array[index],index,array)===false){break}}return array}module.exports=arrayEach},{}],39:[function(require,module,exports){function arrayFilter(array,predicate){var index=-1,length=array==null?0:array.length,resIndex=0,result=[];while(++index<length){var value=array[index];if(predicate(value,index,array)){result[resIndex++]=value}}return result}module.exports=arrayFilter},{}],40:[function(require,module,exports){var baseTimes=require("./_baseTimes"),isArguments=require("./isArguments"),isArray=require("./isArray"),isBuffer=require("./isBuffer"),isIndex=require("./_isIndex"),isTypedArray=require("./isTypedArray");var objectProto=Object.prototype;var hasOwnProperty=objectProto.hasOwnProperty;function arrayLikeKeys(value,inherited){var isArr=isArray(value),isArg=!isArr&&isArguments(value),isBuff=!isArr&&!isArg&&isBuffer(value),isType=!isArr&&!isArg&&!isBuff&&isTypedArray(value),skipIndexes=isArr||isArg||isBuff||isType,result=skipIndexes?baseTimes(value.length,String):[],length=result.length;for(var key in value){if((inherited||hasOwnProperty.call(value,key))&&!(skipIndexes&&(key=="length"||isBuff&&(key=="offset"||key=="parent")||isType&&(key=="buffer"||key=="byteLength"||key=="byteOffset")||isIndex(key,length)))){result.push(key)}}return result}module.exports=arrayLikeKeys},{"./_baseTimes":74,"./_isIndex":106,"./isArguments":155,"./isArray":156,"./isBuffer":158,"./isTypedArray":167}],41:[function(require,module,exports){function arrayMap(array,iteratee){var index=-1,length=array==null?0:array.length,result=Array(length);while(++index<length){result[index]=iteratee(array[index],index,array)}return result}module.exports=arrayMap},{}],42:[function(require,module,exports){function arrayPush(array,values){var index=-1,length=values.length,offset=array.length;while(++index<length){array[offset+index]=values[index]}return array}module.exports=arrayPush},{}],43:[function(require,module,exports){function arraySome(array,predicate){var index=-1,length=array==null?0:array.length;while(++index<length){if(predicate(array[index],index,array)){return true}}return false}module.exports=arraySome},{}],44:[function(require,module,exports){var eq=require("./eq");function assocIndexOf(array,key){var length=array.length;while(length--){if(eq(array[length][0],key)){return length}}return-1}module.exports=assocIndexOf},{"./eq":147}],45:[function(require,module,exports){var baseForOwn=require("./_baseForOwn"),createBaseEach=require("./_createBaseEach");var baseEach=createBaseEach(baseForOwn);module.exports=baseEach},{"./_baseForOwn":51,"./_createBaseEach":83}],46:[function(require,module,exports){var isSymbol=require("./isSymbol");function baseExtremum(array,iteratee,comparator){var index=-1,length=array.length;while(++index<length){var value=array[index],current=iteratee(value);if(current!=null&&(computed===undefined?current===current&&!isSymbol(current):comparator(current,computed))){var computed=current,result=value}}return result}module.exports=baseExtremum},{"./isSymbol":166}],47:[function(require,module,exports){var baseEach=require("./_baseEach");function baseFilter(collection,predicate){var result=[];baseEach(collection,function(value,index,collection){if(predicate(value,index,collection)){result.push(value)}});return result}module.exports=baseFilter},{"./_baseEach":45}],48:[function(require,module,exports){function baseFindIndex(array,predicate,fromIndex,fromRight){var length=array.length,index=fromIndex+(fromRight?1:-1);while(fromRight?index--:++index<length){if(predicate(array[index],index,array)){return index}}return-1}module.exports=baseFindIndex},{}],49:[function(require,module,exports){var arrayPush=require("./_arrayPush"),isFlattenable=require("./_isFlattenable");function baseFlatten(array,depth,predicate,isStrict,result){var index=-1,length=array.length;predicate||(predicate=isFlattenable);result||(result=[]);while(++index<length){var value=array[index];if(depth>0&&predicate(value)){if(depth>1){baseFlatten(value,depth-1,predicate,isStrict,result)}else{arrayPush(result,value)}}else if(!isStrict){result[result.length]=value}}return result}module.exports=baseFlatten},{"./_arrayPush":42,"./_isFlattenable":105}],50:[function(require,module,exports){var createBaseFor=require("./_createBaseFor");var baseFor=createBaseFor();module.exports=baseFor},{"./_createBaseFor":84}],51:[function(require,module,exports){var baseFor=require("./_baseFor"),keys=require("./keys");function baseForOwn(object,iteratee){return object&&baseFor(object,iteratee,keys)}module.exports=baseForOwn},{"./_baseFor":50,"./keys":168}],52:[function(require,module,exports){var castPath=require("./_castPath"),toKey=require("./_toKey");function baseGet(object,path){path=castPath(path,object);var index=0,length=path.length;while(object!=null&&index<length){object=object[toKey(path[index++])]}return index&&index==length?object:undefined}module.exports=baseGet},{"./_castPath":79,"./_toKey":144}],53:[function(require,module,exports){var arrayPush=require("./_arrayPush"),isArray=require("./isArray");function baseGetAllKeys(object,keysFunc,symbolsFunc){var result=keysFunc(object);return isArray(object)?result:arrayPush(result,symbolsFunc(object))}module.exports=baseGetAllKeys},{"./_arrayPush":42,"./isArray":156}],54:[function(require,module,exports){var Symbol=require("./_Symbol"),getRawTag=require("./_getRawTag"),objectToString=require("./_objectToString");var nullTag="[object Null]",undefinedTag="[object Undefined]";var symToStringTag=Symbol?Symbol.toStringTag:undefined;function baseGetTag(value){if(value==null){return value===undefined?undefinedTag:nullTag}return symToStringTag&&symToStringTag in Object(value)?getRawTag(value):objectToString(value)}module.exports=baseGetTag},{"./_Symbol":34,"./_getRawTag":95,"./_objectToString":129}],55:[function(require,module,exports){function baseHasIn(object,key){return object!=null&&key in Object(object)}module.exports=baseHasIn},{}],56:[function(require,module,exports){var baseGetTag=require("./_baseGetTag"),isObjectLike=require("./isObjectLike");var argsTag="[object Arguments]";function baseIsArguments(value){return isObjectLike(value)&&baseGetTag(value)==argsTag}module.exports=baseIsArguments},{"./_baseGetTag":54,"./isObjectLike":165}],57:[function(require,module,exports){var baseIsEqualDeep=require("./_baseIsEqualDeep"),isObjectLike=require("./isObjectLike");function baseIsEqual(value,other,bitmask,customizer,stack){if(value===other){return true}if(value==null||other==null||!isObjectLike(value)&&!isObjectLike(other)){return value!==value&&other!==other}return baseIsEqualDeep(value,other,bitmask,customizer,baseIsEqual,stack)}module.exports=baseIsEqual},{"./_baseIsEqualDeep":58,"./isObjectLike":165}],58:[function(require,module,exports){var Stack=require("./_Stack"),equalArrays=require("./_equalArrays"),equalByTag=require("./_equalByTag"),equalObjects=require("./_equalObjects"),getTag=require("./_getTag"),isArray=require("./isArray"),isBuffer=require("./isBuffer"),isTypedArray=require("./isTypedArray");var COMPARE_PARTIAL_FLAG=1;var argsTag="[object Arguments]",arrayTag="[object Array]",objectTag="[object Object]";var objectProto=Object.prototype;var hasOwnProperty=objectProto.hasOwnProperty;function baseIsEqualDeep(object,other,bitmask,customizer,equalFunc,stack){var objIsArr=isArray(object),othIsArr=isArray(other),objTag=objIsArr?arrayTag:getTag(object),othTag=othIsArr?arrayTag:getTag(other);objTag=objTag==argsTag?objectTag:objTag;othTag=othTag==argsTag?objectTag:othTag;var objIsObj=objTag==objectTag,othIsObj=othTag==objectTag,isSameTag=objTag==othTag;if(isSameTag&&isBuffer(object)){if(!isBuffer(other)){return false}objIsArr=true;objIsObj=false}if(isSameTag&&!objIsObj){stack||(stack=new Stack);return objIsArr||isTypedArray(object)?equalArrays(object,other,bitmask,customizer,equalFunc,stack):equalByTag(object,other,objTag,bitmask,customizer,equalFunc,stack)}if(!(bitmask&COMPARE_PARTIAL_FLAG)){var objIsWrapped=objIsObj&&hasOwnProperty.call(object,"__wrapped__"),othIsWrapped=othIsObj&&hasOwnProperty.call(other,"__wrapped__");if(objIsWrapped||othIsWrapped){var objUnwrapped=objIsWrapped?object.value():object,othUnwrapped=othIsWrapped?other.value():other;stack||(stack=new Stack);return equalFunc(objUnwrapped,othUnwrapped,bitmask,customizer,stack)}}if(!isSameTag){return false}stack||(stack=new Stack);return equalObjects(object,other,bitmask,customizer,equalFunc,stack)}module.exports=baseIsEqualDeep},{"./_Stack":33,"./_equalArrays":87,"./_equalByTag":88,"./_equalObjects":89,"./_getTag":97,"./isArray":156,"./isBuffer":158,"./isTypedArray":167}],59:[function(require,module,exports){var Stack=require("./_Stack"),baseIsEqual=require("./_baseIsEqual");var COMPARE_PARTIAL_FLAG=1,COMPARE_UNORDERED_FLAG=2;function baseIsMatch(object,source,matchData,customizer){var index=matchData.length,length=index,noCustomizer=!customizer;if(object==null){return!length}object=Object(object);while(index--){var data=matchData[index];if(noCustomizer&&data[2]?data[1]!==object[data[0]]:!(data[0]in object)){return false}}while(++index<length){data=matchData[index];var key=data[0],objValue=object[key],srcValue=data[1];if(noCustomizer&&data[2]){if(objValue===undefined&&!(key in object)){return false}}else{var stack=new Stack;if(customizer){var result=customizer(objValue,srcValue,key,object,source,stack)}if(!(result===undefined?baseIsEqual(srcValue,objValue,COMPARE_PARTIAL_FLAG|COMPARE_UNORDERED_FLAG,customizer,stack):result)){return false}}}return true}module.exports=baseIsMatch},{"./_Stack":33,"./_baseIsEqual":57}],60:[function(require,module,exports){var isFunction=require("./isFunction"),isMasked=require("./_isMasked"),isObject=require("./isObject"),toSource=require("./_toSource");var reRegExpChar=/[\\^$.*+?()[\]{}|]/g;var reIsHostCtor=/^\[object .+?Constructor\]$/;var funcProto=Function.prototype,objectProto=Object.prototype;var funcToString=funcProto.toString;var hasOwnProperty=objectProto.hasOwnProperty;var reIsNative=RegExp("^"+funcToString.call(hasOwnProperty).replace(reRegExpChar,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$");function baseIsNative(value){if(!isObject(value)||isMasked(value)){return false}var pattern=isFunction(value)?reIsNative:reIsHostCtor;return pattern.test(toSource(value))}module.exports=baseIsNative},{"./_isMasked":110,"./_toSource":145,"./isFunction":161,"./isObject":164}],61:[function(require,module,exports){var baseGetTag=require("./_baseGetTag"),isLength=require("./isLength"),isObjectLike=require("./isObjectLike");var argsTag="[object Arguments]",arrayTag="[object Array]",boolTag="[object Boolean]",dateTag="[object Date]",errorTag="[object Error]",funcTag="[object Function]",mapTag="[object Map]",numberTag="[object Number]",objectTag="[object Object]",regexpTag="[object RegExp]",setTag="[object Set]",stringTag="[object String]",weakMapTag="[object WeakMap]";var arrayBufferTag="[object ArrayBuffer]",dataViewTag="[object DataView]",float32Tag="[object Float32Array]",float64Tag="[object Float64Array]",int8Tag="[object Int8Array]",int16Tag="[object Int16Array]",int32Tag="[object Int32Array]",uint8Tag="[object Uint8Array]",uint8ClampedTag="[object Uint8ClampedArray]",uint16Tag="[object Uint16Array]",uint32Tag="[object Uint32Array]";var typedArrayTags={};typedArrayTags[float32Tag]=typedArrayTags[float64Tag]=typedArrayTags[int8Tag]=typedArrayTags[int16Tag]=typedArrayTags[int32Tag]=typedArrayTags[uint8Tag]=typedArrayTags[uint8ClampedTag]=typedArrayTags[uint16Tag]=typedArrayTags[uint32Tag]=true;typedArrayTags[argsTag]=typedArrayTags[arrayTag]=typedArrayTags[arrayBufferTag]=typedArrayTags[boolTag]=typedArrayTags[dataViewTag]=typedArrayTags[dateTag]=typedArrayTags[errorTag]=typedArrayTags[funcTag]=typedArrayTags[mapTag]=typedArrayTags[numberTag]=typedArrayTags[objectTag]=typedArrayTags[regexpTag]=typedArrayTags[setTag]=typedArrayTags[stringTag]=typedArrayTags[weakMapTag]=false;function baseIsTypedArray(value){return isObjectLike(value)&&isLength(value.length)&&!!typedArrayTags[baseGetTag(value)]}module.exports=baseIsTypedArray},{"./_baseGetTag":54,"./isLength":162,"./isObjectLike":165}],62:[function(require,module,exports){var baseMatches=require("./_baseMatches"),baseMatchesProperty=require("./_baseMatchesProperty"),identity=require("./identity"),isArray=require("./isArray"),property=require("./property");function baseIteratee(value){if(typeof value=="function"){return value}if(value==null){return identity}if(typeof value=="object"){return isArray(value)?baseMatchesProperty(value[0],value[1]):baseMatches(value)}return property(value)}module.exports=baseIteratee},{"./_baseMatches":66,"./_baseMatchesProperty":67,"./identity":154,"./isArray":156,"./property":172}],63:[function(require,module,exports){var isPrototype=require("./_isPrototype"),nativeKeys=require("./_nativeKeys");var objectProto=Object.prototype;var hasOwnProperty=objectProto.hasOwnProperty;function baseKeys(object){if(!isPrototype(object)){return nativeKeys(object)}var result=[];for(var key in Object(object)){if(hasOwnProperty.call(object,key)&&key!="constructor"){result.push(key)}}return result}module.exports=baseKeys},{"./_isPrototype":111,"./_nativeKeys":127}],64:[function(require,module,exports){function baseLt(value,other){return value<other}module.exports=baseLt},{}],65:[function(require,module,exports){var baseEach=require("./_baseEach"),isArrayLike=require("./isArrayLike");function baseMap(collection,iteratee){var index=-1,result=isArrayLike(collection)?Array(collection.length):[];baseEach(collection,function(value,key,collection){result[++index]=iteratee(value,key,collection)});return result}module.exports=baseMap},{"./_baseEach":45,"./isArrayLike":157}],66:[function(require,module,exports){var baseIsMatch=require("./_baseIsMatch"),getMatchData=require("./_getMatchData"),matchesStrictComparable=require("./_matchesStrictComparable");function baseMatches(source){var matchData=getMatchData(source);if(matchData.length==1&&matchData[0][2]){return matchesStrictComparable(matchData[0][0],matchData[0][1])}return function(object){return object===source||baseIsMatch(object,source,matchData)}}module.exports=baseMatches},{"./_baseIsMatch":59,"./_getMatchData":93,"./_matchesStrictComparable":124}],67:[function(require,module,exports){var baseIsEqual=require("./_baseIsEqual"),get=require("./get"),hasIn=require("./hasIn"),isKey=require("./_isKey"),isStrictComparable=require("./_isStrictComparable"),matchesStrictComparable=require("./_matchesStrictComparable"),toKey=require("./_toKey");var COMPARE_PARTIAL_FLAG=1,COMPARE_UNORDERED_FLAG=2;function baseMatchesProperty(path,srcValue){if(isKey(path)&&isStrictComparable(srcValue)){return matchesStrictComparable(toKey(path),srcValue)}return function(object){var objValue=get(object,path);return objValue===undefined&&objValue===srcValue?hasIn(object,path):baseIsEqual(srcValue,objValue,COMPARE_PARTIAL_FLAG|COMPARE_UNORDERED_FLAG)}}module.exports=baseMatchesProperty},{"./_baseIsEqual":57,"./_isKey":108,"./_isStrictComparable":112,"./_matchesStrictComparable":124,"./_toKey":144,"./get":152,"./hasIn":153}],68:[function(require,module,exports){var arrayMap=require("./_arrayMap"),baseIteratee=require("./_baseIteratee"),baseMap=require("./_baseMap"),baseSortBy=require("./_baseSortBy"),baseUnary=require("./_baseUnary"),compareMultiple=require("./_compareMultiple"),identity=require("./identity");function baseOrderBy(collection,iteratees,orders){var index=-1;iteratees=arrayMap(iteratees.length?iteratees:[identity],baseUnary(baseIteratee));var result=baseMap(collection,function(value,key,collection){var criteria=arrayMap(iteratees,function(iteratee){return iteratee(value)});return{criteria:criteria,index:++index,value:value}});return baseSortBy(result,function(object,other){return compareMultiple(object,other,orders)})}module.exports=baseOrderBy},{"./_arrayMap":41,"./_baseIteratee":62,"./_baseMap":65,"./_baseSortBy":73,"./_baseUnary":76,"./_compareMultiple":81,"./identity":154}],69:[function(require,module,exports){function baseProperty(key){return function(object){return object==null?undefined:object[key]}}module.exports=baseProperty},{}],70:[function(require,module,exports){var baseGet=require("./_baseGet");function basePropertyDeep(path){return function(object){return baseGet(object,path)}}module.exports=basePropertyDeep},{"./_baseGet":52}],71:[function(require,module,exports){var identity=require("./identity"),overRest=require("./_overRest"),setToString=require("./_setToString");function baseRest(func,start){return setToString(overRest(func,start,identity),func+"")}module.exports=baseRest},{"./_overRest":131,"./_setToString":136,"./identity":154}],72:[function(require,module,exports){var constant=require("./constant"),defineProperty=require("./_defineProperty"),identity=require("./identity");var baseSetToString=!defineProperty?identity:function(func,string){return defineProperty(func,"toString",{configurable:true,enumerable:false,value:constant(string),writable:true})};module.exports=baseSetToString},{"./_defineProperty":86,"./constant":146,"./identity":154}],73:[function(require,module,exports){function baseSortBy(array,comparer){var length=array.length;array.sort(comparer);while(length--){array[length]=array[length].value}return array}module.exports=baseSortBy},{}],74:[function(require,module,exports){function baseTimes(n,iteratee){var index=-1,result=Array(n);while(++index<n){result[index]=iteratee(index)}return result}module.exports=baseTimes},{}],75:[function(require,module,exports){var Symbol=require("./_Symbol"),arrayMap=require("./_arrayMap"),isArray=require("./isArray"),isSymbol=require("./isSymbol");var INFINITY=1/0;var symbolProto=Symbol?Symbol.prototype:undefined,symbolToString=symbolProto?symbolProto.toString:undefined;function baseToString(value){if(typeof value=="string"){return value}if(isArray(value)){return arrayMap(value,baseToString)+""}if(isSymbol(value)){return symbolToString?symbolToString.call(value):""}var result=value+"";return result=="0"&&1/value==-INFINITY?"-0":result}module.exports=baseToString},{"./_Symbol":34,"./_arrayMap":41,"./isArray":156,"./isSymbol":166}],76:[function(require,module,exports){function baseUnary(func){return function(value){return func(value)}}module.exports=baseUnary},{}],77:[function(require,module,exports){function cacheHas(cache,key){return cache.has(key)}module.exports=cacheHas},{}],78:[function(require,module,exports){var identity=require("./identity");function castFunction(value){return typeof value=="function"?value:identity}module.exports=castFunction},{"./identity":154}],79:[function(require,module,exports){var isArray=require("./isArray"),isKey=require("./_isKey"),stringToPath=require("./_stringToPath"),toString=require("./toString");function castPath(value,object){if(isArray(value)){return value}return isKey(value,object)?[value]:stringToPath(toString(value))}module.exports=castPath},{"./_isKey":108,"./_stringToPath":143,"./isArray":156,"./toString":179}],80:[function(require,module,exports){var isSymbol=require("./isSymbol");function compareAscending(value,other){if(value!==other){var valIsDefined=value!==undefined,valIsNull=value===null,valIsReflexive=value===value,valIsSymbol=isSymbol(value);var othIsDefined=other!==undefined,othIsNull=other===null,othIsReflexive=other===other,othIsSymbol=isSymbol(other);if(!othIsNull&&!othIsSymbol&&!valIsSymbol&&value>other||valIsSymbol&&othIsDefined&&othIsReflexive&&!othIsNull&&!othIsSymbol||valIsNull&&othIsDefined&&othIsReflexive||!valIsDefined&&othIsReflexive||!valIsReflexive){return 1}if(!valIsNull&&!valIsSymbol&&!othIsSymbol&&value<other||othIsSymbol&&valIsDefined&&valIsReflexive&&!valIsNull&&!valIsSymbol||othIsNull&&valIsDefined&&valIsReflexive||!othIsDefined&&valIsReflexive||!othIsReflexive){return-1}}return 0}module.exports=compareAscending},{"./isSymbol":166}],81:[function(require,module,exports){var compareAscending=require("./_compareAscending");function compareMultiple(object,other,orders){var index=-1,objCriteria=object.criteria,othCriteria=other.criteria,length=objCriteria.length,ordersLength=orders.length;while(++index<length){var result=compareAscending(objCriteria[index],othCriteria[index]);if(result){if(index>=ordersLength){return result}var order=orders[index];return result*(order=="desc"?-1:1)}}return object.index-other.index}module.exports=compareMultiple},{"./_compareAscending":80}],82:[function(require,module,exports){var root=require("./_root");var coreJsData=root["__core-js_shared__"];module.exports=coreJsData},{"./_root":132}],83:[function(require,module,exports){var isArrayLike=require("./isArrayLike");function createBaseEach(eachFunc,fromRight){return function(collection,iteratee){if(collection==null){return collection}if(!isArrayLike(collection)){return eachFunc(collection,iteratee)}var length=collection.length,index=fromRight?length:-1,iterable=Object(collection);while(fromRight?index--:++index<length){if(iteratee(iterable[index],index,iterable)===false){break}}return collection}}module.exports=createBaseEach},{"./isArrayLike":157}],84:[function(require,module,exports){function createBaseFor(fromRight){return function(object,iteratee,keysFunc){var index=-1,iterable=Object(object),props=keysFunc(object),length=props.length;while(length--){var key=props[fromRight?length:++index];if(iteratee(iterable[key],key,iterable)===false){break}}return object}}module.exports=createBaseFor},{}],85:[function(require,module,exports){var baseIteratee=require("./_baseIteratee"),isArrayLike=require("./isArrayLike"),keys=require("./keys");function createFind(findIndexFunc){return function(collection,predicate,fromIndex){var iterable=Object(collection);if(!isArrayLike(collection)){var iteratee=baseIteratee(predicate,3);collection=keys(collection);predicate=function(key){return iteratee(iterable[key],key,iterable)}}var index=findIndexFunc(collection,predicate,fromIndex);return index>-1?iterable[iteratee?collection[index]:index]:undefined}}module.exports=createFind},{"./_baseIteratee":62,"./isArrayLike":157,"./keys":168}],86:[function(require,module,exports){var getNative=require("./_getNative");var defineProperty=function(){try{var func=getNative(Object,"defineProperty");func({},"",{});return func}catch(e){}}();module.exports=defineProperty},{"./_getNative":94}],87:[function(require,module,exports){var SetCache=require("./_SetCache"),arraySome=require("./_arraySome"),cacheHas=require("./_cacheHas");var COMPARE_PARTIAL_FLAG=1,COMPARE_UNORDERED_FLAG=2;function equalArrays(array,other,bitmask,customizer,equalFunc,stack){var isPartial=bitmask&COMPARE_PARTIAL_FLAG,arrLength=array.length,othLength=other.length;if(arrLength!=othLength&&!(isPartial&&othLength>arrLength)){return false}var stacked=stack.get(array);if(stacked&&stack.get(other)){return stacked==other}var index=-1,result=true,seen=bitmask&COMPARE_UNORDERED_FLAG?new SetCache:undefined;stack.set(array,other);stack.set(other,array);while(++index<arrLength){var arrValue=array[index],othValue=other[index];if(customizer){var compared=isPartial?customizer(othValue,arrValue,index,other,array,stack):customizer(arrValue,othValue,index,array,other,stack)}if(compared!==undefined){if(compared){continue}result=false;break}if(seen){if(!arraySome(other,function(othValue,othIndex){if(!cacheHas(seen,othIndex)&&(arrValue===othValue||equalFunc(arrValue,othValue,bitmask,customizer,stack))){return seen.push(othIndex)}})){result=false;break}}else if(!(arrValue===othValue||equalFunc(arrValue,othValue,bitmask,customizer,stack))){result=false;break}}stack["delete"](array);stack["delete"](other);return result}module.exports=equalArrays},{"./_SetCache":32,"./_arraySome":43,"./_cacheHas":77}],88:[function(require,module,exports){var Symbol=require("./_Symbol"),Uint8Array=require("./_Uint8Array"),eq=require("./eq"),equalArrays=require("./_equalArrays"),mapToArray=require("./_mapToArray"),setToArray=require("./_setToArray");var COMPARE_PARTIAL_FLAG=1,COMPARE_UNORDERED_FLAG=2;var boolTag="[object Boolean]",dateTag="[object Date]",errorTag="[object Error]",mapTag="[object Map]",numberTag="[object Number]",regexpTag="[object RegExp]",setTag="[object Set]",stringTag="[object String]",symbolTag="[object Symbol]";var arrayBufferTag="[object ArrayBuffer]",dataViewTag="[object DataView]";var symbolProto=Symbol?Symbol.prototype:undefined,symbolValueOf=symbolProto?symbolProto.valueOf:undefined;function equalByTag(object,other,tag,bitmask,customizer,equalFunc,stack){switch(tag){case dataViewTag:if(object.byteLength!=other.byteLength||object.byteOffset!=other.byteOffset){return false}object=object.buffer;other=other.buffer;case arrayBufferTag:if(object.byteLength!=other.byteLength||!equalFunc(new Uint8Array(object),new Uint8Array(other))){return false}return true;case boolTag:case dateTag:case numberTag:return eq(+object,+other);case errorTag:return object.name==other.name&&object.message==other.message;case regexpTag:case stringTag:return object==other+"";case mapTag:var convert=mapToArray;case setTag:var isPartial=bitmask&COMPARE_PARTIAL_FLAG;convert||(convert=setToArray);if(object.size!=other.size&&!isPartial){return false}var stacked=stack.get(object);if(stacked){return stacked==other}bitmask|=COMPARE_UNORDERED_FLAG;stack.set(object,other);var result=equalArrays(convert(object),convert(other),bitmask,customizer,equalFunc,stack);stack["delete"](object);return result;case symbolTag:if(symbolValueOf){return symbolValueOf.call(object)==symbolValueOf.call(other)}}return false}module.exports=equalByTag},{"./_Symbol":34,"./_Uint8Array":35,"./_equalArrays":87,"./_mapToArray":123,"./_setToArray":135,"./eq":147}],89:[function(require,module,exports){var getAllKeys=require("./_getAllKeys");var COMPARE_PARTIAL_FLAG=1;var objectProto=Object.prototype;var hasOwnProperty=objectProto.hasOwnProperty;function equalObjects(object,other,bitmask,customizer,equalFunc,stack){var isPartial=bitmask&COMPARE_PARTIAL_FLAG,objProps=getAllKeys(object),objLength=objProps.length,othProps=getAllKeys(other),othLength=othProps.length;if(objLength!=othLength&&!isPartial){return false}var index=objLength;while(index--){var key=objProps[index];if(!(isPartial?key in other:hasOwnProperty.call(other,key))){return false}}var stacked=stack.get(object);if(stacked&&stack.get(other)){return stacked==other}var result=true;stack.set(object,other);stack.set(other,object);var skipCtor=isPartial;while(++index<objLength){key=objProps[index];var objValue=object[key],othValue=other[key];if(customizer){var compared=isPartial?customizer(othValue,objValue,key,other,object,stack):customizer(objValue,othValue,key,object,other,stack)}if(!(compared===undefined?objValue===othValue||equalFunc(objValue,othValue,bitmask,customizer,stack):compared)){result=false;break}skipCtor||(skipCtor=key=="constructor")}if(result&&!skipCtor){var objCtor=object.constructor,othCtor=other.constructor;if(objCtor!=othCtor&&("constructor"in object&&"constructor"in other)&&!(typeof objCtor=="function"&&objCtor instanceof objCtor&&typeof othCtor=="function"&&othCtor instanceof othCtor)){result=false}}stack["delete"](object);stack["delete"](other);return result}module.exports=equalObjects},{"./_getAllKeys":91}],90:[function(require,module,exports){(function(global){var freeGlobal=typeof global=="object"&&global&&global.Object===Object&&global;module.exports=freeGlobal}).call(this,typeof global!=="undefined"?global:typeof self!=="undefined"?self:typeof window!=="undefined"?window:{})},{}],91:[function(require,module,exports){var baseGetAllKeys=require("./_baseGetAllKeys"),getSymbols=require("./_getSymbols"),keys=require("./keys");function getAllKeys(object){return baseGetAllKeys(object,keys,getSymbols)}module.exports=getAllKeys},{"./_baseGetAllKeys":53,"./_getSymbols":96,"./keys":168}],92:[function(require,module,exports){var isKeyable=require("./_isKeyable");function getMapData(map,key){var data=map.__data__;return isKeyable(key)?data[typeof key=="string"?"string":"hash"]:data.map}module.exports=getMapData},{"./_isKeyable":109}],93:[function(require,module,exports){var isStrictComparable=require("./_isStrictComparable"),keys=require("./keys");function getMatchData(object){var result=keys(object),length=result.length;while(length--){var key=result[length],value=object[key];result[length]=[key,value,isStrictComparable(value)]}return result}module.exports=getMatchData},{"./_isStrictComparable":112,"./keys":168}],94:[function(require,module,exports){var baseIsNative=require("./_baseIsNative"),getValue=require("./_getValue");function getNative(object,key){var value=getValue(object,key);return baseIsNative(value)?value:undefined}module.exports=getNative},{"./_baseIsNative":60,"./_getValue":98}],95:[function(require,module,exports){var Symbol=require("./_Symbol");var objectProto=Object.prototype;var hasOwnProperty=objectProto.hasOwnProperty;var nativeObjectToString=objectProto.toString;var symToStringTag=Symbol?Symbol.toStringTag:undefined;function getRawTag(value){var isOwn=hasOwnProperty.call(value,symToStringTag),tag=value[symToStringTag];try{value[symToStringTag]=undefined;var unmasked=true}catch(e){}var result=nativeObjectToString.call(value);if(unmasked){if(isOwn){value[symToStringTag]=tag}else{delete value[symToStringTag]}}return result}module.exports=getRawTag},{"./_Symbol":34}],96:[function(require,module,exports){var arrayFilter=require("./_arrayFilter"),stubArray=require("./stubArray");var objectProto=Object.prototype;var propertyIsEnumerable=objectProto.propertyIsEnumerable;var nativeGetSymbols=Object.getOwnPropertySymbols;var getSymbols=!nativeGetSymbols?stubArray:function(object){if(object==null){return[]}object=Object(object);return arrayFilter(nativeGetSymbols(object),function(symbol){return propertyIsEnumerable.call(object,symbol)})};module.exports=getSymbols},{"./_arrayFilter":39,"./stubArray":174}],97:[function(require,module,exports){var DataView=require("./_DataView"),Map=require("./_Map"),Promise=require("./_Promise"),Set=require("./_Set"),WeakMap=require("./_WeakMap"),baseGetTag=require("./_baseGetTag"),toSource=require("./_toSource");var mapTag="[object Map]",objectTag="[object Object]",promiseTag="[object Promise]",setTag="[object Set]",weakMapTag="[object WeakMap]";var dataViewTag="[object DataView]";var dataViewCtorString=toSource(DataView),mapCtorString=toSource(Map),promiseCtorString=toSource(Promise),setCtorString=toSource(Set),weakMapCtorString=toSource(WeakMap);var getTag=baseGetTag;if(DataView&&getTag(new DataView(new ArrayBuffer(1)))!=dataViewTag||Map&&getTag(new Map)!=mapTag||Promise&&getTag(Promise.resolve())!=promiseTag||Set&&getTag(new Set)!=setTag||WeakMap&&getTag(new WeakMap)!=weakMapTag){getTag=function(value){var result=baseGetTag(value),Ctor=result==objectTag?value.constructor:undefined,ctorString=Ctor?toSource(Ctor):"";if(ctorString){switch(ctorString){case dataViewCtorString:return dataViewTag;case mapCtorString:return mapTag;case promiseCtorString:return promiseTag;case setCtorString:return setTag;case weakMapCtorString:return weakMapTag}}return result}}module.exports=getTag},{"./_DataView":25,"./_Map":28,"./_Promise":30,"./_Set":31,"./_WeakMap":36,"./_baseGetTag":54,"./_toSource":145}],98:[function(require,module,exports){function getValue(object,key){return object==null?undefined:object[key]}module.exports=getValue},{}],99:[function(require,module,exports){var castPath=require("./_castPath"),isArguments=require("./isArguments"),isArray=require("./isArray"),isIndex=require("./_isIndex"),isLength=require("./isLength"),toKey=require("./_toKey");function hasPath(object,path,hasFunc){path=castPath(path,object);var index=-1,length=path.length,result=false;while(++index<length){var key=toKey(path[index]);if(!(result=object!=null&&hasFunc(object,key))){break}object=object[key]}if(result||++index!=length){return result}length=object==null?0:object.length;return!!length&&isLength(length)&&isIndex(key,length)&&(isArray(object)||isArguments(object))}module.exports=hasPath},{"./_castPath":79,"./_isIndex":106,"./_toKey":144,"./isArguments":155,"./isArray":156,"./isLength":162}],100:[function(require,module,exports){var nativeCreate=require("./_nativeCreate");function hashClear(){this.__data__=nativeCreate?nativeCreate(null):{};this.size=0}module.exports=hashClear},{"./_nativeCreate":126}],101:[function(require,module,exports){function hashDelete(key){var result=this.has(key)&&delete this.__data__[key];this.size-=result?1:0;return result}module.exports=hashDelete},{}],102:[function(require,module,exports){var nativeCreate=require("./_nativeCreate");var HASH_UNDEFINED="__lodash_hash_undefined__";var objectProto=Object.prototype;var hasOwnProperty=objectProto.hasOwnProperty;function hashGet(key){var data=this.__data__;if(nativeCreate){var result=data[key];return result===HASH_UNDEFINED?undefined:result}return hasOwnProperty.call(data,key)?data[key]:undefined}module.exports=hashGet},{"./_nativeCreate":126}],103:[function(require,module,exports){var nativeCreate=require("./_nativeCreate");var objectProto=Object.prototype;var hasOwnProperty=objectProto.hasOwnProperty;function hashHas(key){var data=this.__data__;return nativeCreate?data[key]!==undefined:hasOwnProperty.call(data,key)}module.exports=hashHas},{"./_nativeCreate":126}],104:[function(require,module,exports){var nativeCreate=require("./_nativeCreate");var HASH_UNDEFINED="__lodash_hash_undefined__";function hashSet(key,value){var data=this.__data__;this.size+=this.has(key)?0:1;data[key]=nativeCreate&&value===undefined?HASH_UNDEFINED:value;return this}module.exports=hashSet},{"./_nativeCreate":126}],105:[function(require,module,exports){var Symbol=require("./_Symbol"),isArguments=require("./isArguments"),isArray=require("./isArray");var spreadableSymbol=Symbol?Symbol.isConcatSpreadable:undefined;function isFlattenable(value){return isArray(value)||isArguments(value)||!!(spreadableSymbol&&value&&value[spreadableSymbol])}module.exports=isFlattenable},{"./_Symbol":34,"./isArguments":155,"./isArray":156}],106:[function(require,module,exports){var MAX_SAFE_INTEGER=9007199254740991;var reIsUint=/^(?:0|[1-9]\d*)$/;function isIndex(value,length){length=length==null?MAX_SAFE_INTEGER:length;return!!length&&(typeof value=="number"||reIsUint.test(value))&&(value>-1&&value%1==0&&value<length)}module.exports=isIndex},{}],107:[function(require,module,exports){var eq=require("./eq"),isArrayLike=require("./isArrayLike"),isIndex=require("./_isIndex"),isObject=require("./isObject");function isIterateeCall(value,index,object){if(!isObject(object)){return false}var type=typeof index;if(type=="number"?isArrayLike(object)&&isIndex(index,object.length):type=="string"&&index in object){return eq(object[index],value)}return false}module.exports=isIterateeCall},{"./_isIndex":106,"./eq":147,"./isArrayLike":157,"./isObject":164}],108:[function(require,module,exports){var isArray=require("./isArray"),isSymbol=require("./isSymbol");var reIsDeepProp=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,reIsPlainProp=/^\w*$/;function isKey(value,object){if(isArray(value)){return false}var type=typeof value;if(type=="number"||type=="symbol"||type=="boolean"||value==null||isSymbol(value)){return true}return reIsPlainProp.test(value)||!reIsDeepProp.test(value)||object!=null&&value in Object(object)}module.exports=isKey},{"./isArray":156,"./isSymbol":166}],109:[function(require,module,exports){function isKeyable(value){var type=typeof value;return type=="string"||type=="number"||type=="symbol"||type=="boolean"?value!=="__proto__":value===null}module.exports=isKeyable},{}],110:[function(require,module,exports){var coreJsData=require("./_coreJsData");var maskSrcKey=function(){var uid=/[^.]+$/.exec(coreJsData&&coreJsData.keys&&coreJsData.keys.IE_PROTO||"");return uid?"Symbol(src)_1."+uid:""}();function isMasked(func){return!!maskSrcKey&&maskSrcKey in func}module.exports=isMasked},{"./_coreJsData":82}],111:[function(require,module,exports){var objectProto=Object.prototype;function isPrototype(value){var Ctor=value&&value.constructor,proto=typeof Ctor=="function"&&Ctor.prototype||objectProto;return value===proto}module.exports=isPrototype},{}],112:[function(require,module,exports){var isObject=require("./isObject");function isStrictComparable(value){return value===value&&!isObject(value)}module.exports=isStrictComparable},{"./isObject":164}],113:[function(require,module,exports){function listCacheClear(){this.__data__=[];this.size=0}module.exports=listCacheClear},{}],114:[function(require,module,exports){var assocIndexOf=require("./_assocIndexOf");var arrayProto=Array.prototype;var splice=arrayProto.splice;function listCacheDelete(key){var data=this.__data__,index=assocIndexOf(data,key);if(index<0){return false}var lastIndex=data.length-1;if(index==lastIndex){data.pop()}else{splice.call(data,index,1)}--this.size;return true}module.exports=listCacheDelete},{"./_assocIndexOf":44}],115:[function(require,module,exports){var assocIndexOf=require("./_assocIndexOf");function listCacheGet(key){var data=this.__data__,index=assocIndexOf(data,key);return index<0?undefined:data[index][1]}module.exports=listCacheGet},{"./_assocIndexOf":44}],116:[function(require,module,exports){var assocIndexOf=require("./_assocIndexOf");function listCacheHas(key){return assocIndexOf(this.__data__,key)>-1}module.exports=listCacheHas},{"./_assocIndexOf":44}],117:[function(require,module,exports){var assocIndexOf=require("./_assocIndexOf");function listCacheSet(key,value){var data=this.__data__,index=assocIndexOf(data,key);if(index<0){++this.size;data.push([key,value])}else{data[index][1]=value}return this}module.exports=listCacheSet},{"./_assocIndexOf":44}],118:[function(require,module,exports){var Hash=require("./_Hash"),ListCache=require("./_ListCache"),Map=require("./_Map");function mapCacheClear(){this.size=0;this.__data__={hash:new Hash,map:new(Map||ListCache),string:new Hash}}module.exports=mapCacheClear},{"./_Hash":26,"./_ListCache":27,"./_Map":28}],119:[function(require,module,exports){var getMapData=require("./_getMapData");function mapCacheDelete(key){var result=getMapData(this,key)["delete"](key);this.size-=result?1:0;return result}module.exports=mapCacheDelete},{"./_getMapData":92}],120:[function(require,module,exports){var getMapData=require("./_getMapData");function mapCacheGet(key){return getMapData(this,key).get(key)}module.exports=mapCacheGet},{"./_getMapData":92}],121:[function(require,module,exports){var getMapData=require("./_getMapData");function mapCacheHas(key){return getMapData(this,key).has(key)}module.exports=mapCacheHas},{"./_getMapData":92}],122:[function(require,module,exports){var getMapData=require("./_getMapData");function mapCacheSet(key,value){var data=getMapData(this,key),size=data.size;data.set(key,value);this.size+=data.size==size?0:1;return this}module.exports=mapCacheSet},{"./_getMapData":92}],123:[function(require,module,exports){function mapToArray(map){var index=-1,result=Array(map.size);map.forEach(function(value,key){result[++index]=[key,value]});return result}module.exports=mapToArray},{}],124:[function(require,module,exports){function matchesStrictComparable(key,srcValue){return function(object){if(object==null){return false}return object[key]===srcValue&&(srcValue!==undefined||key in Object(object))}}module.exports=matchesStrictComparable},{}],125:[function(require,module,exports){var memoize=require("./memoize");var MAX_MEMOIZE_SIZE=500;function memoizeCapped(func){var result=memoize(func,function(key){if(cache.size===MAX_MEMOIZE_SIZE){cache.clear()}return key});var cache=result.cache;return result}module.exports=memoizeCapped},{"./memoize":170}],126:[function(require,module,exports){var getNative=require("./_getNative");var nativeCreate=getNative(Object,"create");module.exports=nativeCreate},{"./_getNative":94}],127:[function(require,module,exports){var overArg=require("./_overArg");var nativeKeys=overArg(Object.keys,Object);module.exports=nativeKeys},{"./_overArg":130}],128:[function(require,module,exports){var freeGlobal=require("./_freeGlobal");var freeExports=typeof exports=="object"&&exports&&!exports.nodeType&&exports;var freeModule=freeExports&&typeof module=="object"&&module&&!module.nodeType&&module;var moduleExports=freeModule&&freeModule.exports===freeExports;var freeProcess=moduleExports&&freeGlobal.process;var nodeUtil=function(){try{return freeProcess&&freeProcess.binding&&freeProcess.binding("util")}catch(e){}}();module.exports=nodeUtil},{"./_freeGlobal":90}],129:[function(require,module,exports){var objectProto=Object.prototype;var nativeObjectToString=objectProto.toString;function objectToString(value){return nativeObjectToString.call(value)}module.exports=objectToString},{}],130:[function(require,module,exports){function overArg(func,transform){return function(arg){return func(transform(arg))}}module.exports=overArg},{}],131:[function(require,module,exports){var apply=require("./_apply");var nativeMax=Math.max;function overRest(func,start,transform){start=nativeMax(start===undefined?func.length-1:start,0);return function(){var args=arguments,index=-1,length=nativeMax(args.length-start,0),array=Array(length);while(++index<length){array[index]=args[start+index]}index=-1;var otherArgs=Array(start+1);while(++index<start){otherArgs[index]=args[index]}otherArgs[start]=transform(array);return apply(func,this,otherArgs)}}module.exports=overRest},{"./_apply":37}],132:[function(require,module,exports){var freeGlobal=require("./_freeGlobal");var freeSelf=typeof self=="object"&&self&&self.Object===Object&&self;var root=freeGlobal||freeSelf||Function("return this")();module.exports=root},{"./_freeGlobal":90}],133:[function(require,module,exports){var HASH_UNDEFINED="__lodash_hash_undefined__";function setCacheAdd(value){this.__data__.set(value,HASH_UNDEFINED);return this}module.exports=setCacheAdd},{}],134:[function(require,module,exports){function setCacheHas(value){return this.__data__.has(value)}module.exports=setCacheHas},{}],135:[function(require,module,exports){function setToArray(set){var index=-1,result=Array(set.size);set.forEach(function(value){result[++index]=value});return result}module.exports=setToArray},{}],136:[function(require,module,exports){var baseSetToString=require("./_baseSetToString"),shortOut=require("./_shortOut");var setToString=shortOut(baseSetToString);module.exports=setToString},{"./_baseSetToString":72,"./_shortOut":137}],137:[function(require,module,exports){var HOT_COUNT=800,HOT_SPAN=16;var nativeNow=Date.now;function shortOut(func){var count=0,lastCalled=0;return function(){var stamp=nativeNow(),remaining=HOT_SPAN-(stamp-lastCalled);lastCalled=stamp;if(remaining>0){if(++count>=HOT_COUNT){return arguments[0]}}else{count=0}return func.apply(undefined,arguments)}}module.exports=shortOut},{}],138:[function(require,module,exports){var ListCache=require("./_ListCache");function stackClear(){this.__data__=new ListCache;this.size=0}module.exports=stackClear},{"./_ListCache":27}],139:[function(require,module,exports){function stackDelete(key){var data=this.__data__,result=data["delete"](key);this.size=data.size;return result}module.exports=stackDelete},{}],140:[function(require,module,exports){function stackGet(key){return this.__data__.get(key)}module.exports=stackGet},{}],141:[function(require,module,exports){function stackHas(key){return this.__data__.has(key)}module.exports=stackHas},{}],142:[function(require,module,exports){var ListCache=require("./_ListCache"),Map=require("./_Map"),MapCache=require("./_MapCache");var LARGE_ARRAY_SIZE=200;function stackSet(key,value){var data=this.__data__;if(data instanceof ListCache){var pairs=data.__data__;if(!Map||pairs.length<LARGE_ARRAY_SIZE-1){pairs.push([key,value]);this.size=++data.size;return this}data=this.__data__=new MapCache(pairs)}data.set(key,value);this.size=data.size;return this}module.exports=stackSet},{"./_ListCache":27,"./_Map":28,"./_MapCache":29}],143:[function(require,module,exports){var memoizeCapped=require("./_memoizeCapped");var reLeadingDot=/^\./,rePropName=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;var reEscapeChar=/\\(\\)?/g;var stringToPath=memoizeCapped(function(string){var result=[];if(reLeadingDot.test(string)){result.push("")}string.replace(rePropName,function(match,number,quote,string){result.push(quote?string.replace(reEscapeChar,"$1"):number||match)});return result});module.exports=stringToPath},{"./_memoizeCapped":125}],144:[function(require,module,exports){var isSymbol=require("./isSymbol");var INFINITY=1/0;function toKey(value){if(typeof value=="string"||isSymbol(value)){return value}var result=value+"";return result=="0"&&1/value==-INFINITY?"-0":result}module.exports=toKey},{"./isSymbol":166}],145:[function(require,module,exports){var funcProto=Function.prototype;var funcToString=funcProto.toString;function toSource(func){if(func!=null){try{return funcToString.call(func)}catch(e){}try{return func+""}catch(e){}}return""}module.exports=toSource},{}],146:[function(require,module,exports){function constant(value){return function(){return value}}module.exports=constant},{}],147:[function(require,module,exports){function eq(value,other){return value===other||value!==value&&other!==other}module.exports=eq},{}],148:[function(require,module,exports){var arrayFilter=require("./_arrayFilter"),baseFilter=require("./_baseFilter"),baseIteratee=require("./_baseIteratee"),isArray=require("./isArray");function filter(collection,predicate){var func=isArray(collection)?arrayFilter:baseFilter;return func(collection,baseIteratee(predicate,3))}module.exports=filter},{"./_arrayFilter":39,"./_baseFilter":47,"./_baseIteratee":62,"./isArray":156}],149:[function(require,module,exports){var createFind=require("./_createFind"),findIndex=require("./findIndex");var find=createFind(findIndex);module.exports=find},{"./_createFind":85,"./findIndex":150}],150:[function(require,module,exports){var baseFindIndex=require("./_baseFindIndex"),baseIteratee=require("./_baseIteratee"),toInteger=require("./toInteger");var nativeMax=Math.max;function findIndex(array,predicate,fromIndex){var length=array==null?0:array.length;if(!length){return-1}var index=fromIndex==null?0:toInteger(fromIndex);if(index<0){index=nativeMax(length+index,0)}return baseFindIndex(array,baseIteratee(predicate,3),index)}module.exports=findIndex},{"./_baseFindIndex":48,"./_baseIteratee":62,"./toInteger":177}],151:[function(require,module,exports){var arrayEach=require("./_arrayEach"),baseEach=require("./_baseEach"),castFunction=require("./_castFunction"),isArray=require("./isArray");function forEach(collection,iteratee){var func=isArray(collection)?arrayEach:baseEach;return func(collection,castFunction(iteratee))}module.exports=forEach},{"./_arrayEach":38,"./_baseEach":45,"./_castFunction":78,"./isArray":156}],152:[function(require,module,exports){var baseGet=require("./_baseGet");function get(object,path,defaultValue){var result=object==null?undefined:baseGet(object,path);return result===undefined?defaultValue:result}module.exports=get},{"./_baseGet":52}],153:[function(require,module,exports){var baseHasIn=require("./_baseHasIn"),hasPath=require("./_hasPath");function hasIn(object,path){return object!=null&&hasPath(object,path,baseHasIn)}module.exports=hasIn},{"./_baseHasIn":55,"./_hasPath":99}],154:[function(require,module,exports){function identity(value){return value}module.exports=identity},{}],155:[function(require,module,exports){var baseIsArguments=require("./_baseIsArguments"),isObjectLike=require("./isObjectLike");var objectProto=Object.prototype;var hasOwnProperty=objectProto.hasOwnProperty;var propertyIsEnumerable=objectProto.propertyIsEnumerable;var isArguments=baseIsArguments(function(){return arguments}())?baseIsArguments:function(value){return isObjectLike(value)&&hasOwnProperty.call(value,"callee")&&!propertyIsEnumerable.call(value,"callee")};module.exports=isArguments},{"./_baseIsArguments":56,"./isObjectLike":165}],156:[function(require,module,exports){var isArray=Array.isArray;module.exports=isArray},{}],157:[function(require,module,exports){var isFunction=require("./isFunction"),isLength=require("./isLength");function isArrayLike(value){return value!=null&&isLength(value.length)&&!isFunction(value)}module.exports=isArrayLike},{"./isFunction":161,"./isLength":162}],158:[function(require,module,exports){var root=require("./_root"),stubFalse=require("./stubFalse");var freeExports=typeof exports=="object"&&exports&&!exports.nodeType&&exports;var freeModule=freeExports&&typeof module=="object"&&module&&!module.nodeType&&module;var moduleExports=freeModule&&freeModule.exports===freeExports;var Buffer=moduleExports?root.Buffer:undefined;var nativeIsBuffer=Buffer?Buffer.isBuffer:undefined;var isBuffer=nativeIsBuffer||stubFalse;module.exports=isBuffer},{"./_root":132,"./stubFalse":175}],159:[function(require,module,exports){var baseKeys=require("./_baseKeys"),getTag=require("./_getTag"),isArguments=require("./isArguments"),isArray=require("./isArray"),isArrayLike=require("./isArrayLike"),isBuffer=require("./isBuffer"),isPrototype=require("./_isPrototype"),isTypedArray=require("./isTypedArray");var mapTag="[object Map]",setTag="[object Set]";var objectProto=Object.prototype;var hasOwnProperty=objectProto.hasOwnProperty;function isEmpty(value){if(value==null){return true}if(isArrayLike(value)&&(isArray(value)||typeof value=="string"||typeof value.splice=="function"||isBuffer(value)||isTypedArray(value)||isArguments(value))){return!value.length}var tag=getTag(value);if(tag==mapTag||tag==setTag){return!value.size}if(isPrototype(value)){return!baseKeys(value).length}for(var key in value){if(hasOwnProperty.call(value,key)){return false}}return true}module.exports=isEmpty},{"./_baseKeys":63,"./_getTag":97,"./_isPrototype":111,"./isArguments":155,"./isArray":156,"./isArrayLike":157,"./isBuffer":158,"./isTypedArray":167}],160:[function(require,module,exports){var baseIsEqual=require("./_baseIsEqual");function isEqual(value,other){return baseIsEqual(value,other)}module.exports=isEqual},{"./_baseIsEqual":57}],161:[function(require,module,exports){var baseGetTag=require("./_baseGetTag"),isObject=require("./isObject");var asyncTag="[object AsyncFunction]",funcTag="[object Function]",genTag="[object GeneratorFunction]",proxyTag="[object Proxy]";function isFunction(value){if(!isObject(value)){return false}var tag=baseGetTag(value);return tag==funcTag||tag==genTag||tag==asyncTag||tag==proxyTag}module.exports=isFunction},{"./_baseGetTag":54,"./isObject":164}],162:[function(require,module,exports){var MAX_SAFE_INTEGER=9007199254740991;function isLength(value){return typeof value=="number"&&value>-1&&value%1==0&&value<=MAX_SAFE_INTEGER}module.exports=isLength},{}],163:[function(require,module,exports){function isNull(value){return value===null}module.exports=isNull},{}],164:[function(require,module,exports){function isObject(value){var type=typeof value;return value!=null&&(type=="object"||type=="function")}module.exports=isObject},{}],165:[function(require,module,exports){function isObjectLike(value){return value!=null&&typeof value=="object"}module.exports=isObjectLike},{}],166:[function(require,module,exports){var baseGetTag=require("./_baseGetTag"),isObjectLike=require("./isObjectLike");var symbolTag="[object Symbol]";function isSymbol(value){return typeof value=="symbol"||isObjectLike(value)&&baseGetTag(value)==symbolTag}module.exports=isSymbol},{"./_baseGetTag":54,"./isObjectLike":165}],167:[function(require,module,exports){var baseIsTypedArray=require("./_baseIsTypedArray"),baseUnary=require("./_baseUnary"),nodeUtil=require("./_nodeUtil");var nodeIsTypedArray=nodeUtil&&nodeUtil.isTypedArray;var isTypedArray=nodeIsTypedArray?baseUnary(nodeIsTypedArray):baseIsTypedArray;module.exports=isTypedArray},{"./_baseIsTypedArray":61,"./_baseUnary":76,"./_nodeUtil":128}],168:[function(require,module,exports){var arrayLikeKeys=require("./_arrayLikeKeys"),baseKeys=require("./_baseKeys"),isArrayLike=require("./isArrayLike");function keys(object){return isArrayLike(object)?arrayLikeKeys(object):baseKeys(object)}module.exports=keys},{"./_arrayLikeKeys":40,"./_baseKeys":63,"./isArrayLike":157}],169:[function(require,module,exports){var arrayMap=require("./_arrayMap"),baseIteratee=require("./_baseIteratee"),baseMap=require("./_baseMap"),isArray=require("./isArray");function map(collection,iteratee){var func=isArray(collection)?arrayMap:baseMap;return func(collection,baseIteratee(iteratee,3))}module.exports=map},{"./_arrayMap":41,"./_baseIteratee":62,"./_baseMap":65,"./isArray":156}],170:[function(require,module,exports){var MapCache=require("./_MapCache");var FUNC_ERROR_TEXT="Expected a function";function memoize(func,resolver){if(typeof func!="function"||resolver!=null&&typeof resolver!="function"){throw new TypeError(FUNC_ERROR_TEXT)}var memoized=function(){var args=arguments,key=resolver?resolver.apply(this,args):args[0],cache=memoized.cache;if(cache.has(key)){return cache.get(key)}var result=func.apply(this,args);memoized.cache=cache.set(key,result)||cache;return result};memoized.cache=new(memoize.Cache||MapCache);return memoized}memoize.Cache=MapCache;module.exports=memoize},{"./_MapCache":29}],171:[function(require,module,exports){var baseExtremum=require("./_baseExtremum"),baseLt=require("./_baseLt"),identity=require("./identity");function min(array){return array&&array.length?baseExtremum(array,identity,baseLt):undefined}module.exports=min},{"./_baseExtremum":46,"./_baseLt":64,"./identity":154}],172:[function(require,module,exports){var baseProperty=require("./_baseProperty"),basePropertyDeep=require("./_basePropertyDeep"),isKey=require("./_isKey"),toKey=require("./_toKey");function property(path){return isKey(path)?baseProperty(toKey(path)):basePropertyDeep(path)}module.exports=property},{"./_baseProperty":69,"./_basePropertyDeep":70,"./_isKey":108,"./_toKey":144}],173:[function(require,module,exports){var baseFlatten=require("./_baseFlatten"),baseOrderBy=require("./_baseOrderBy"),baseRest=require("./_baseRest"),isIterateeCall=require("./_isIterateeCall");var sortBy=baseRest(function(collection,iteratees){if(collection==null){return[]}var length=iteratees.length;if(length>1&&isIterateeCall(collection,iteratees[0],iteratees[1])){iteratees=[]}else if(length>2&&isIterateeCall(iteratees[0],iteratees[1],iteratees[2])){iteratees=[iteratees[0]]}return baseOrderBy(collection,baseFlatten(iteratees,1),[])});module.exports=sortBy},{"./_baseFlatten":49,"./_baseOrderBy":68,"./_baseRest":71,"./_isIterateeCall":107}],174:[function(require,module,exports){function stubArray(){return[]}module.exports=stubArray},{}],175:[function(require,module,exports){function stubFalse(){return false}module.exports=stubFalse},{}],176:[function(require,module,exports){var toNumber=require("./toNumber");var INFINITY=1/0,MAX_INTEGER=1.7976931348623157e308;function toFinite(value){if(!value){return value===0?value:0}value=toNumber(value);if(value===INFINITY||value===-INFINITY){var sign=value<0?-1:1;return sign*MAX_INTEGER}return value===value?value:0}module.exports=toFinite},{"./toNumber":178}],177:[function(require,module,exports){var toFinite=require("./toFinite");function toInteger(value){var result=toFinite(value),remainder=result%1;return result===result?remainder?result-remainder:result:0}module.exports=toInteger},{"./toFinite":176}],178:[function(require,module,exports){var isObject=require("./isObject"),isSymbol=require("./isSymbol");var NAN=0/0;var reTrim=/^\s+|\s+$/g;var reIsBadHex=/^[-+]0x[0-9a-f]+$/i;var reIsBinary=/^0b[01]+$/i;var reIsOctal=/^0o[0-7]+$/i;var freeParseInt=parseInt;function toNumber(value){if(typeof value=="number"){return value}if(isSymbol(value)){return NAN}if(isObject(value)){var other=typeof value.valueOf=="function"?value.valueOf():value;value=isObject(other)?other+"":other}if(typeof value!="string"){return value===0?value:+value}value=value.replace(reTrim,"");var isBinary=reIsBinary.test(value);return isBinary||reIsOctal.test(value)?freeParseInt(value.slice(2),isBinary?2:8):reIsBadHex.test(value)?NAN:+value}module.exports=toNumber},{"./isObject":164,"./isSymbol":166}],179:[function(require,module,exports){var baseToString=require("./_baseToString");function toString(value){return value==null?"":baseToString(value)}module.exports=toString},{"./_baseToString":75}],180:[function(require,module,exports){(function(root,definition){"use strict";if(typeof define==="function"&&define.amd){define(definition)}else if(typeof module==="object"&&module.exports){module.exports=definition()}else{root.log=definition()}})(this,function(){"use strict";var noop=function(){};var undefinedType="undefined";var logMethods=["trace","debug","info","warn","error"];function bindMethod(obj,methodName){var method=obj[methodName];if(typeof method.bind==="function"){return method.bind(obj)}else{try{return Function.prototype.bind.call(method,obj)}catch(e){return function(){return Function.prototype.apply.apply(method,[obj,arguments])}}}}function realMethod(methodName){if(methodName==="debug"){methodName="log"}if(typeof console===undefinedType){return false}else if(console[methodName]!==undefined){return bindMethod(console,methodName)}else if(console.log!==undefined){return bindMethod(console,"log")}else{return noop}}function replaceLoggingMethods(level,loggerName){for(var i=0;i<logMethods.length;i++){var methodName=logMethods[i];this[methodName]=i<level?noop:this.methodFactory(methodName,level,loggerName)}this.log=this.debug}function enableLoggingWhenConsoleArrives(methodName,level,loggerName){return function(){if(typeof console!==undefinedType){replaceLoggingMethods.call(this,level,loggerName);this[methodName].apply(this,arguments)}}}function defaultMethodFactory(methodName,level,loggerName){return realMethod(methodName)||enableLoggingWhenConsoleArrives.apply(this,arguments)}function Logger(name,defaultLevel,factory){var self=this;var currentLevel;var storageKey="loglevel";if(name){storageKey+=":"+name}function persistLevelIfPossible(levelNum){var levelName=(logMethods[levelNum]||"silent").toUpperCase();if(typeof window===undefinedType)return;try{window.localStorage[storageKey]=levelName;return}catch(ignore){}try{window.document.cookie=encodeURIComponent(storageKey)+"="+levelName+";"}catch(ignore){}}function getPersistedLevel(){var storedLevel;if(typeof window===undefinedType)return;try{storedLevel=window.localStorage[storageKey]}catch(ignore){}if(typeof storedLevel===undefinedType){try{var cookie=window.document.cookie;var location=cookie.indexOf(encodeURIComponent(storageKey)+"=");if(location!==-1){storedLevel=/^([^;]+)/.exec(cookie.slice(location))[1]}}catch(ignore){}}if(self.levels[storedLevel]===undefined){storedLevel=undefined}return storedLevel}self.levels={TRACE:0,DEBUG:1,INFO:2,WARN:3,ERROR:4,SILENT:5};self.methodFactory=factory||defaultMethodFactory;self.getLevel=function(){return currentLevel};self.setLevel=function(level,persist){if(typeof level==="string"&&self.levels[level.toUpperCase()]!==undefined){level=self.levels[level.toUpperCase()]}if(typeof level==="number"&&level>=0&&level<=self.levels.SILENT){currentLevel=level;if(persist!==false){persistLevelIfPossible(level)}replaceLoggingMethods.call(self,level,name);if(typeof console===undefinedType&&level<self.levels.SILENT){return"No console available for logging"}}else{throw"log.setLevel() called with invalid level: "+level}};self.setDefaultLevel=function(level){if(!getPersistedLevel()){self.setLevel(level,false)}};self.enableAll=function(persist){self.setLevel(self.levels.TRACE,persist)};self.disableAll=function(persist){self.setLevel(self.levels.SILENT,persist)};var initialLevel=getPersistedLevel();if(initialLevel==null){initialLevel=defaultLevel==null?"WARN":defaultLevel}self.setLevel(initialLevel,false)}var defaultLogger=new Logger;var _loggersByName={};defaultLogger.getLogger=function getLogger(name){if(typeof name!=="string"||name===""){throw new TypeError("You must supply a name when creating a logger.")}var logger=_loggersByName[name];if(!logger){logger=_loggersByName[name]=new Logger(name,defaultLogger.getLevel(),defaultLogger.methodFactory)}return logger};var _log=typeof window!==undefinedType?window.log:undefined;defaultLogger.noConflict=function(){if(typeof window!==undefinedType&&window.log===defaultLogger){window.log=_log}return defaultLogger};return defaultLogger})},{}],181:[function(require,module,exports){var process=module.exports={};var cachedSetTimeout;var cachedClearTimeout;function defaultSetTimout(){throw new Error("setTimeout has not been defined")}function defaultClearTimeout(){throw new Error("clearTimeout has not been defined")}(function(){try{if(typeof setTimeout==="function"){cachedSetTimeout=setTimeout}else{cachedSetTimeout=defaultSetTimout}}catch(e){cachedSetTimeout=defaultSetTimout}try{if(typeof clearTimeout==="function"){cachedClearTimeout=clearTimeout}else{cachedClearTimeout=defaultClearTimeout}}catch(e){cachedClearTimeout=defaultClearTimeout}})();function runTimeout(fun){if(cachedSetTimeout===setTimeout){return setTimeout(fun,0)}if((cachedSetTimeout===defaultSetTimout||!cachedSetTimeout)&&setTimeout){cachedSetTimeout=setTimeout;return setTimeout(fun,0)}try{return cachedSetTimeout(fun,0)}catch(e){try{return cachedSetTimeout.call(null,fun,0)}catch(e){return cachedSetTimeout.call(this,fun,0)}}}function runClearTimeout(marker){if(cachedClearTimeout===clearTimeout){return clearTimeout(marker)}if((cachedClearTimeout===defaultClearTimeout||!cachedClearTimeout)&&clearTimeout){cachedClearTimeout=clearTimeout;return clearTimeout(marker)}try{return cachedClearTimeout(marker)}catch(e){try{return cachedClearTimeout.call(null,marker)}catch(e){return cachedClearTimeout.call(this,marker)}}}var queue=[];var draining=false;var currentQueue;var queueIndex=-1;function cleanUpNextTick(){if(!draining||!currentQueue){return}draining=false;if(currentQueue.length){queue=currentQueue.concat(queue)}else{queueIndex=-1}if(queue.length){drainQueue()}}function drainQueue(){if(draining){return}var timeout=runTimeout(cleanUpNextTick);draining=true;var len=queue.length;while(len){currentQueue=queue;queue=[];while(++queueIndex<len){if(currentQueue){currentQueue[queueIndex].run()}}queueIndex=-1;len=queue.length}currentQueue=null;draining=false;runClearTimeout(timeout)}process.nextTick=function(fun){var args=new Array(arguments.length-1);if(arguments.length>1){for(var i=1;i<arguments.length;i++){args[i-1]=arguments[i]}}queue.push(new Item(fun,args));if(queue.length===1&&!draining){runTimeout(drainQueue)}};function Item(fun,array){this.fun=fun;this.array=array}Item.prototype.run=function(){this.fun.apply(null,this.array)};process.title="browser";process.browser=true;process.env={};process.argv=[];process.version="";process.versions={};function noop(){}process.on=noop;process.addListener=noop;process.once=noop;process.off=noop;process.removeListener=noop;process.removeAllListeners=noop;process.emit=noop;process.prependListener=noop;process.prependOnceListener=noop;process.listeners=function(name){return[]};process.binding=function(name){throw new Error("process.binding is not supported")};process.cwd=function(){return"/"};process.chdir=function(dir){throw new Error("process.chdir is not supported")};process.umask=function(){return 0}},{}],182:[function(require,module,exports){(function(process){var toGeoJSON=function(){"use strict";var removeSpace=/\s*/g,trimSpace=/^\s*|\s*$/g,splitSpace=/\s+/;function okhash(x){if(!x||!x.length)return 0;for(var i=0,h=0;i<x.length;i++){h=(h<<5)-h+x.charCodeAt(i)|0}return h}function get(x,y){return x.getElementsByTagName(y)}function attr(x,y){return x.getAttribute(y)}function attrf(x,y){return parseFloat(attr(x,y))}function get1(x,y){var n=get(x,y);return n.length?n[0]:null}function norm(el){if(el.normalize){el.normalize()}return el}function numarray(x){for(var j=0,o=[];j<x.length;j++){o[j]=parseFloat(x[j])}return o}function nodeVal(x){if(x){norm(x)}return x&&x.textContent||""}function getMulti(x,ys){var o={},n,k;for(k=0;k<ys.length;k++){n=get1(x,ys[k]);if(n)o[ys[k]]=nodeVal(n)}return o}function extend(x,y){for(var k in y)x[k]=y[k]}function coord1(v){return numarray(v.replace(removeSpace,"").split(","))}function coord(v){var coords=v.replace(trimSpace,"").split(splitSpace),o=[];for(var i=0;i<coords.length;i++){o.push(coord1(coords[i]))}return o}function coordPair(x){var ll=[attrf(x,"lon"),attrf(x,"lat")],ele=get1(x,"ele"),heartRate=get1(x,"gpxtpx:hr")||get1(x,"hr"),time=get1(x,"time"),e;if(ele){e=parseFloat(nodeVal(ele));if(!isNaN(e)){ll.push(e)}}return{coordinates:ll,time:time?nodeVal(time):null,heartRate:heartRate?parseFloat(nodeVal(heartRate)):null}}function fc(){return{type:"FeatureCollection",features:[]}}var serializer;if(typeof XMLSerializer!=="undefined"){serializer=new XMLSerializer}else if(typeof exports==="object"&&typeof process==="object"&&!process.browser){serializer=new(require("xmldom").XMLSerializer)}function xml2str(str){if(str.xml!==undefined)return str.xml;return serializer.serializeToString(str)}var t={kml:function(doc){var gj=fc(),styleIndex={},styleByHash={},styleMapIndex={},geotypes=["Polygon","LineString","Point","Track","gx:Track"],placemarks=get(doc,"Placemark"),styles=get(doc,"Style"),styleMaps=get(doc,"StyleMap");for(var k=0;k<styles.length;k++){var hash=okhash(xml2str(styles[k])).toString(16);styleIndex["#"+attr(styles[k],"id")]=hash;styleByHash[hash]=styles[k]}for(var l=0;l<styleMaps.length;l++){styleIndex["#"+attr(styleMaps[l],"id")]=okhash(xml2str(styleMaps[l])).toString(16);var pairs=get(styleMaps[l],"Pair");var pairsMap={};for(var m=0;m<pairs.length;m++){pairsMap[nodeVal(get1(pairs[m],"key"))]=nodeVal(get1(pairs[m],"styleUrl"))}styleMapIndex["#"+attr(styleMaps[l],"id")]=pairsMap}for(var j=0;j<placemarks.length;j++){gj.features=gj.features.concat(getPlacemark(placemarks[j]))}function kmlColor(v){var color,opacity;v=v||"";if(v.substr(0,1)==="#"){v=v.substr(1)}if(v.length===6||v.length===3){color=v}if(v.length===8){opacity=parseInt(v.substr(0,2),16)/255;color="#"+v.substr(6,2)+v.substr(4,2)+v.substr(2,2)}return[color,isNaN(opacity)?undefined:opacity]}function gxCoord(v){return numarray(v.split(" "))}function gxCoords(root){var elems=get(root,"coord","gx"),coords=[],times=[];if(elems.length===0)elems=get(root,"gx:coord");for(var i=0;i<elems.length;i++)coords.push(gxCoord(nodeVal(elems[i])));var timeElems=get(root,"when");for(var j=0;j<timeElems.length;j++)times.push(nodeVal(timeElems[j]));return{coords:coords,times:times}}function getGeometry(root){var geomNode,geomNodes,i,j,k,geoms=[],coordTimes=[];if(get1(root,"MultiGeometry")){return getGeometry(get1(root,"MultiGeometry"))}if(get1(root,"MultiTrack")){return getGeometry(get1(root,"MultiTrack"))}if(get1(root,"gx:MultiTrack")){return getGeometry(get1(root,"gx:MultiTrack"))}for(i=0;i<geotypes.length;i++){geomNodes=get(root,geotypes[i]);if(geomNodes){for(j=0;j<geomNodes.length;j++){geomNode=geomNodes[j];if(geotypes[i]==="Point"){geoms.push({type:"Point",coordinates:coord1(nodeVal(get1(geomNode,"coordinates")))})}else if(geotypes[i]==="LineString"){geoms.push({type:"LineString",coordinates:coord(nodeVal(get1(geomNode,"coordinates")))})}else if(geotypes[i]==="Polygon"){var rings=get(geomNode,"LinearRing"),coords=[];for(k=0;k<rings.length;k++){coords.push(coord(nodeVal(get1(rings[k],"coordinates"))))}geoms.push({type:"Polygon",coordinates:coords})}else if(geotypes[i]==="Track"||geotypes[i]==="gx:Track"){var track=gxCoords(geomNode);geoms.push({type:"LineString",coordinates:track.coords});if(track.times.length)coordTimes.push(track.times)}}}}return{geoms:geoms,coordTimes:coordTimes}}function getPlacemark(root){var geomsAndTimes=getGeometry(root),i,properties={},name=nodeVal(get1(root,"name")),styleUrl=nodeVal(get1(root,"styleUrl")),description=nodeVal(get1(root,"description")),timeSpan=get1(root,"TimeSpan"),timeStamp=get1(root,"TimeStamp"),extendedData=get1(root,"ExtendedData"),lineStyle=get1(root,"LineStyle"),polyStyle=get1(root,"PolyStyle"),visibility=get1(root,"visibility");if(!geomsAndTimes.geoms.length)return[];if(name)properties.name=name;if(styleUrl){if(styleUrl[0]!=="#"){styleUrl="#"+styleUrl}properties.styleUrl=styleUrl;if(styleIndex[styleUrl]){properties.styleHash=styleIndex[styleUrl]}if(styleMapIndex[styleUrl]){properties.styleMapHash=styleMapIndex[styleUrl];properties.styleHash=styleIndex[styleMapIndex[styleUrl].normal]}var style=styleByHash[properties.styleHash];if(style){if(!lineStyle)lineStyle=get1(style,"LineStyle");if(!polyStyle)polyStyle=get1(style,"PolyStyle")}}if(description)properties.description=description;if(timeSpan){var begin=nodeVal(get1(timeSpan,"begin"));var end=nodeVal(get1(timeSpan,"end"));properties.timespan={begin:begin,end:end}}if(timeStamp){properties.timestamp=nodeVal(get1(timeStamp,"when"))}if(lineStyle){var linestyles=kmlColor(nodeVal(get1(lineStyle,"color"))),color=linestyles[0],opacity=linestyles[1],width=parseFloat(nodeVal(get1(lineStyle,"width")));if(color)properties.stroke=color;if(!isNaN(opacity))properties["stroke-opacity"]=opacity;if(!isNaN(width))properties["stroke-width"]=width}if(polyStyle){var polystyles=kmlColor(nodeVal(get1(polyStyle,"color"))),pcolor=polystyles[0],popacity=polystyles[1],fill=nodeVal(get1(polyStyle,"fill")),outline=nodeVal(get1(polyStyle,"outline"));if(pcolor)properties.fill=pcolor;if(!isNaN(popacity))properties["fill-opacity"]=popacity;if(fill)properties["fill-opacity"]=fill==="1"?properties["fill-opacity"]||1:0;if(outline)properties["stroke-opacity"]=outline==="1"?properties["stroke-opacity"]||1:0}if(extendedData){var datas=get(extendedData,"Data"),simpleDatas=get(extendedData,"SimpleData");for(i=0;i<datas.length;i++){properties[datas[i].getAttribute("name")]=nodeVal(get1(datas[i],"value"))}for(i=0;i<simpleDatas.length;i++){properties[simpleDatas[i].getAttribute("name")]=nodeVal(simpleDatas[i])}}if(visibility){properties.visibility=nodeVal(visibility)}if(geomsAndTimes.coordTimes.length){properties.coordTimes=geomsAndTimes.coordTimes.length===1?geomsAndTimes.coordTimes[0]:geomsAndTimes.coordTimes}var feature={type:"Feature",geometry:geomsAndTimes.geoms.length===1?geomsAndTimes.geoms[0]:{type:"GeometryCollection",geometries:geomsAndTimes.geoms},properties:properties};if(attr(root,"id"))feature.id=attr(root,"id");return[feature]}return gj},gpx:function(doc){var i,tracks=get(doc,"trk"),routes=get(doc,"rte"),waypoints=get(doc,"wpt"),gj=fc(),feature;for(i=0;i<tracks.length;i++){feature=getTrack(tracks[i]);if(feature)gj.features.push(feature)}for(i=0;i<routes.length;i++){feature=getRoute(routes[i]);if(feature)gj.features.push(feature)}for(i=0;i<waypoints.length;i++){gj.features.push(getPoint(waypoints[i]))}function getPoints(node,pointname){var pts=get(node,pointname),line=[],times=[],heartRates=[],l=pts.length;if(l<2)return{};for(var i=0;i<l;i++){var c=coordPair(pts[i]);line.push(c.coordinates);if(c.time)times.push(c.time);if(c.heartRate)heartRates.push(c.heartRate)}return{line:line,times:times,heartRates:heartRates}}function getTrack(node){var segments=get(node,"trkseg"),track=[],times=[],heartRates=[],line;for(var i=0;i<segments.length;i++){line=getPoints(segments[i],"trkpt");if(line){if(line.line)track.push(line.line);if(line.times&&line.times.length)times.push(line.times);if(line.heartRates&&line.heartRates.length)heartRates.push(line.heartRates)}}if(track.length===0)return;var properties=getProperties(node);if(times.length)properties.coordTimes=track.length===1?times[0]:times;if(heartRates.length)properties.heartRates=track.length===1?heartRates[0]:heartRates;return{type:"Feature",properties:properties,geometry:{type:track.length===1?"LineString":"MultiLineString",coordinates:track.length===1?track[0]:track}}}function getRoute(node){var line=getPoints(node,"rtept");if(!line.line)return;var routeObj={type:"Feature",properties:getProperties(node),geometry:{type:"LineString",coordinates:line.line}};return routeObj}function getPoint(node){var prop=getProperties(node);extend(prop,getMulti(node,["sym","type"]));return{type:"Feature",properties:prop,geometry:{type:"Point",coordinates:coordPair(node).coordinates}}}function getProperties(node){var prop,links;prop=getMulti(node,["name","cmt","desc","time","keywords"]);links=get(node,"link");if(links.length)prop.links=[];for(var i=0,link;i<links.length;i++){link={href:attr(links[i],"href")};extend(link,getMulti(links[i],["text","type"]));prop.links.push(link)}return prop}return gj}};return t}();if(typeof module!=="undefined")module.exports=toGeoJSON}).call(this,require("_process"))},{_process:181,xmldom:23}],183:[function(require,module,exports){module.exports=function(){this.routeUrl=$("div#map-canvas").attr("data-what");this.routeParamsUrl=$("div#map-canvas").attr("data-route-params");this.routeApproveUrl=$("div#map-canvas").attr("data-route-approve");this.isLocal=false}},{}],184:[function(require,module,exports){var logger=require("loglevel");var _=require("./lodash");module.exports=function(geoJson){var ROUTE_TYPE_ID="div#routeType";var SINGLE_PATH_ID="div#singlePath";var PATH_LENGTH_ID="div#pathLength";var ELEVATION_GAIN_ID="div#elevationGain";var ELEVATION_LOSS_ID="div#elevationLoss";var ELEVATION_TOTAL_CHANGE_ID="div#elevationTotalChange";var NUMBER_OF_STATIONS_ID="div#numberOfStations";var STATIONS_ORDER_ID="div#stationsOrder";var STATIONS_ON_PATH_ID="div#stationsOnPath";var DATA_CONSISTENCY_ID="div#dataConsistency";var ELEVATION_CHART_ID="canvas#elevationChart";var VERIFY_BUTTON_ID="button#verifyRoute";var LOADER_ID="div#loader";var LOADER_ELEMENT='<div id="loader" class="overlay"><i class="fa fa-refresh fa-spin"></i></div>';var ELEVATION_CHART_ELEMENT='<canvas id="elevationChart"></canvas>';var updateControlColor=function(element,isValid){var VALID_COLOR_CLASS="bg-green";var INVALID_COLOR_CLASS="bg-yellow";var INFO_BOX_ICON="span.info-box-icon";if(_.isNull(isValid)){$(element+" "+INFO_BOX_ICON).removeClass([INVALID_COLOR_CLASS,VALID_COLOR_CLASS].join(" "))}else{isValid?$(element+" "+INFO_BOX_ICON).removeClass(INVALID_COLOR_CLASS).addClass(VALID_COLOR_CLASS):$(element+" "+INFO_BOX_ICON).removeClass(VALID_COLOR_CLASS).addClass(INVALID_COLOR_CLASS)}};var updateControlValue=function(element,value,unit){var INFO_BOX_NUMBER="span.info-box-number";logger.debug("Updating control element",element,"with:",value,unit);$(element+" "+INFO_BOX_NUMBER).html(value+" "+(unit?"<small>"+unit+"</small>":""))};var removeControlChildren=function(element){$(ELEVATION_CHART_ID).empty()};this.updateRouteType=function(isNormalRoute){var normalRouteString=$("input#normalRouteString").attr("value");var inspiredRouteString=$("input#inspiredRouteString").attr("value");updateControlValue(ROUTE_TYPE_ID,isNormalRoute?normalRouteString:inspiredRouteString)};this.updatePathLength=function(isLengthValid,length){updateControlValue(PATH_LENGTH_ID,length.toFixed(2),"km");updateControlColor(PATH_LENGTH_ID,isLengthValid)};this.updateElevationGain=function(isElevationGainValid,elevationGain){updateControlValue(ELEVATION_GAIN_ID,elevationGain.toFixed(2),"m");updateControlColor(ELEVATION_GAIN_ID,isElevationGainValid)};this.updateElevationLoss=function(isElevationLossValid,elevationLoss){updateControlValue(ELEVATION_LOSS_ID,elevationLoss.toFixed(2),"m");updateControlColor(ELEVATION_LOSS_ID,isElevationLossValid)};this.updateElevationTotalChange=function(isElevationTotalChangeValid,elevationTotalChange){updateControlValue(ELEVATION_TOTAL_CHANGE_ID,elevationTotalChange.toFixed(2),"m");updateControlColor(ELEVATION_TOTAL_CHANGE_ID,isElevationTotalChangeValid)};this.updateNumberOfStations=function(areAllStationsPresent){updateControlColor(NUMBER_OF_STATIONS_ID,areAllStationsPresent)};this.updateStationsOrder=function(isStationOrderCorrect){updateControlColor(STATIONS_ORDER_ID,isStationOrderCorrect)};this.updateStationsOnPath=function(areAllStationsOnPath){updateControlColor(STATIONS_ON_PATH_ID,areAllStationsOnPath)};this.updateSinglePath=function(isSinglePath){updateControlColor(SINGLE_PATH_ID,isSinglePath)};this.updateDataConsistency=function(isDataConsistent){updateControlColor(DATA_CONSISTENCY_ID,isDataConsistent)};this.drawElevationChart=function(pathElevation){var X_AXIS_NUMBER_OF_LABELS=10;var X_AXIS_LABEL_STRING="[km]";var Y_AXIS_LABEL_STRING="[m]";var CHART_BACKGROUND_COLOR="rgb(32, 77, 116)";var labelWidth=parseInt(pathElevation.data.length/X_AXIS_NUMBER_OF_LABELS);var labels=_.map(pathElevation.data,function(elevation){return elevation.distance.toFixed()});var data=_.map(pathElevation.data,function(elevation){return elevation.elevation});logger.debug("Drawing elevation chart. Input:",pathElevation);var elevationChart=new Chart($(ELEVATION_CHART_ID),{type:"line",data:{labels:labels,datasets:[{label:"",data:data,fill:"start",radius:0,backgroundColor:CHART_BACKGROUND_COLOR}]},options:{scales:{xAxes:[{scaleLabel:{display:true,labelString:X_AXIS_LABEL_STRING},ticks:{callback:function(dataLabel,index){return index%labelWidth===0||index===pathElevation.data.length-1?dataLabel:null}}}],yAxes:[{scaleLabel:{display:true,labelString:Y_AXIS_LABEL_STRING}}]},legend:{display:false},tooltips:{enabled:false}}})};this.resetElevationChart=function(){var elevationChartParentElement=$(ELEVATION_CHART_ID).parent();$(ELEVATION_CHART_ID).remove();elevationChartParentElement.append(ELEVATION_CHART_ELEMENT)};this.addLoaderToButton=function(){$(VERIFY_BUTTON_ID).append(LOADER_ELEMENT)};this.removeLoaderFromButton=function(){$(VERIFY_BUTTON_ID+" "+LOADER_ID).remove()};this.resetAll=function(){updateControlValue(ROUTE_TYPE_ID,"");updateControlValue(PATH_LENGTH_ID,"");updateControlColor(PATH_LENGTH_ID,null);updateControlValue(ELEVATION_GAIN_ID,"");updateControlColor(ELEVATION_GAIN_ID,null);updateControlValue(ELEVATION_LOSS_ID,"");updateControlColor(ELEVATION_LOSS_ID,null);updateControlValue(ELEVATION_TOTAL_CHANGE_ID,"");updateControlColor(ELEVATION_TOTAL_CHANGE_ID,null);updateControlColor(NUMBER_OF_STATIONS_ID,null);updateControlColor(STATIONS_ORDER_ID,null);updateControlColor(STATIONS_ON_PATH_ID,null);updateControlColor(SINGLE_PATH_ID,null);updateControlColor(DATA_CONSISTENCY_ID,null);this.resetElevationChart()}}},{"./lodash":189,loglevel:180}],185:[function(require,module,exports){module.exports=function(elevations,length){var getGain=function(elevations){var elevationGain=0;for(var i=1;i<elevations.length;i++){var elevationDifference=elevations[i].elevation-elevations[i-1].elevation;elevationGain+=elevationDifference>0?elevationDifference:0}return Number(elevationGain)};var getLoss=function(elevations){var elevationLoss=0;for(var i=1;i<elevations.length;i++){var elevationDifference=elevations[i-1].elevation-elevations[i].elevation;elevationLoss+=elevationDifference>0?elevationDifference:0}return Number(elevationLoss)};this.gain=getGain(elevations);this.loss=getLoss(elevations);this.totalChange=this.loss+this.gain;this.data=elevations;this.enrichData=function(length){var elevationsWithDistance=[];var resolution=length/this.data.length;for(var i=0;i<this.data.length;i++){elevationsWithDistance.push({elevation:this.data[i].elevation,distance:i*resolution})}this.data=elevationsWithDistance}}},{}],186:[function(require,module,exports){var logger=require("loglevel");var _=require("./lodash");var helpers=require("./helpers");var PathElevation=require("./PathElevation");var Stations=require("./Stations");module.exports=function(geoJson){var lineString=helpers.getLineString(geoJson);var points=helpers.getPoints(geoJson);this.numberOfPaths=helpers.getNumberOfFeatures("LineString",geoJson);this.stations=new Stations(points,lineString);this.path=this.stations.isPathReversed()?helpers.reverseLineString(lineString):lineString;var EXPECTED_NUMBER_OF_PATHS=1;var EXPECTED_NUMBER_OF_STATIONS=14;var MAXIMUM_DISTANCE_FROM_STATION_TO_PATH=100;this.isSinglePath=function(){var result=_.isEqual(this.numberOfPaths,EXPECTED_NUMBER_OF_PATHS);logger.debug("isSinglePath:",result,", numberOfPaths:",this.numberOfPaths);return result};this.areAllStationsPresent=function(){var numberOfStations=this.stations.getCount();var result=_.isEqual(numberOfStations,EXPECTED_NUMBER_OF_STATIONS);logger.debug("areAllStationsPresent:",result,", numberOfStations:",numberOfStations);return result};this.areStationsOnThePath=function(){var result=this.stations.areAllOnThePath(MAXIMUM_DISTANCE_FROM_STATION_TO_PATH);logger.debug("areStationsOnThePath:",result);return result};this.isStationOrderCorrect=function(){var result=this.stations.isOrderCorrect();logger.debug("isStationOrderCorrect:",result);return result};this.getPathLength=function(){var result=0;var googleMapsPath=helpers.getGoogleMapsPath(this.path);result=google.maps.geometry.spherical.computeLength(googleMapsPath);result=result/1e3;logger.debug("getPathLength [km]:",result);return result};this.fetchPathElevationData=function(){var _this=this;return helpers.getPathElevations(this.path).then(function(elevations){logger.debug("Path elevations:",elevations);_this.pathElevation=new PathElevation(elevations);return _this.pathElevation}).catch(function(error){throw new Error(error)})};this.getPathElevation=function(){logger.debug("getPathElevation:",this.pathElevation);return this.pathElevation}}},{"./PathElevation":185,"./Stations":187,"./helpers":188,"./lodash":189,loglevel:180}],187:[function(require,module,exports){var logger=require("loglevel");var _=require("./lodash");var pointOnLine=require("@turf/point-on-line");module.exports=function(points,lineString){this.points=points;this.path=lineString;this.pathReversed=false;this._sortPoints=function(){var path=this.path;var enhancedPoints=_.map(this.points,function(point){point.properties.nearestOnLine=pointOnLine(path,point,"meters");return point});var sortedPoints=_.sortBy(enhancedPoints,function(point){return point.properties.nearestOnLine.properties.location});this.points=sortedPoints};this._addIndexes=function(){var getIndex=function(str){var START_NAMES_REGEX=/^(wstęp|wprowadzenie|początek|start)$/gi;var END_NAMES_REGEX=/^(zakończenia|koniec|podsumowanie)$/gi;var ROMAN_NUMBERS_REGEX=/^(I|II|III|IV|V|VI|VII|VIII|IX|X|XI|XII|XIII|XIV)$/g;var EUROPEAN_NUMBERS_REGEX=/^(1[0-4]|[1-9])$/g;var SPLITTER_REGEX=/[ ,\._\-:;]+/;var ROMAN_EUROPEAN_MAP={I:1,II:2,III:3,IV:4,V:5,VI:6,VII:7,VIII:8,IX:9,X:10,XI:11,XII:12,XIII:13,XIV:14};var index=null;logger.debug("Checking station index for string: "+str);if(!str){return index}var parts=str.trim().split(SPLITTER_REGEX);_.forEach(parts,function(part){var matches=part.match(ROMAN_NUMBERS_REGEX);if(!_.isNull(matches)){index=ROMAN_EUROPEAN_MAP[matches[0]];return false}var matches=part.match(EUROPEAN_NUMBERS_REGEX);if(!_.isNull(matches)){index=parseInt(matches[0]);return false}var matches=part.match(START_NAMES_REGEX);if(!_.isNull(matches)){index=0;return false}var matches=part.match(END_NAMES_REGEX);if(!_.isNull(matches)){index=15;return false}});return index};this.points=_.map(this.points,function(point){var name=point.properties.name;var number=getIndex(name);point.properties.index=number;return point})};this._updateDirection=function(){var ascIndexes=0;var descIndexes=0;for(var i=1;i<this.points.length;i++){var currentIndex=this.points[i].properties.index;var previousIndex=this.points[i-1].properties.index;if(currentIndex>previousIndex){ascIndexes++}else if(currentIndex<previousIndex){descIndexes++}}if(descIndexes>ascIndexes){logger.debug("Reversed path detected.");this.pathReversed=true;this.points=this.points.reverse()}};this._sortPoints();this._addIndexes();this._updateDirection();this.getCount=function(){var numberOfStations=0;for(var stationNumber=1;stationNumber<=14;stationNumber++){var firstStationName="";var stationsOfNumber=_.filter(this.points,function(station){if(station.properties.index===stationNumber){firstStationName=station.properties.name;return true}else{return false}});if(stationsOfNumber.length!==1){logger.warn("Station "+stationNumber+" found "+stationsOfNumber.length+" times.")}else{logger.debug("Station "+stationNumber+" found. Station name: "+firstStationName);numberOfStations++}}return numberOfStations};this.isOrderCorrect=function(){var result=true;for(var i=1;i<this.points.length;i++){var currentStationNumber=this.points[i].properties.index;var previousStationNumber=this.points[i-1].properties.index;logger.debug("Point "+(i-1));if(currentStationNumber===null){logger.debug("Not checking order for unrecognized point: "+this.points[i].properties.name)}else if(previousStationNumber===null){logger.debug("Not checking order for unrecognized point: "+this.points[i-1].properties.name)}else if(currentStationNumber<=previousStationNumber){logger.warn("Detected invalid order of stations. Station "+currentStationNumber+" is after station "+previousStationNumber+".");result=false}else{logger.debug("Station "+currentStationNumber+" is after station "+previousStationNumber+".")}}return result};this.areAllOnThePath=function(maximumDistanceFromPath){var result=true;_.forEach(this.points,function(station,index){var stationNumber=station.properties.index;var distanceFromStationToPath=station.properties.nearestOnLine.properties.dist;logger.debug("Point "+index);if(stationNumber===null){logger.debug("Not checking distance for: "+station.properties.name)}else if(distanceFromStationToPath>maximumDistanceFromPath){logger.warn("Station "+stationNumber+" is too far from path. Expected maximum distance from path: "+maximumDistanceFromPath+" meter(s).");result=false}else{logger.debug("Station "+stationNumber+" is on the path.")}});return result};this.isPathReversed=function(){return this.pathReversed}}},{"./lodash":189,"@turf/point-on-line":18,loglevel:180}],188:[function(require,module,exports){var logger=require("loglevel");var toGeoJSON=require("togeojson");var flatten=require("@turf/flatten");var _=require("./lodash");function getGeoJSON(kml){var extendedData=kml.getElementsByTagName("ExtendedData");for(var index=extendedData.length-1;index>=0;index--){extendedData[index].parentNode.removeChild(extendedData[index])}logger.log("KML (no ExtendedData):",kml);var geoJson=toGeoJSON.kml(kml);geoJson=flatten(geoJson);logger.log("GeoJSON (flatten): ",geoJson);return geoJson}function getNumberOfFeatures(featureName,geoJson){var features=_.filter(geoJson.features,function(feature){return _.isEqual(feature.geometry.type,featureName)});return features.length}function getLineString(geoJson){var lineString=_.find(geoJson.features,function(feature){return _.isEqual(feature.geometry.type,"LineString")});return lineString}function reverseLineString(lineString){var newLineString=Object.assign({},lineString);newLineString.geometry.coordinates=lineString.geometry.coordinates.reverse();return newLineString}function getPoints(geoJson){var points=_.filter(geoJson.features,function(feature){return _.isEqual(feature.geometry.type,"Point")});return points}function getRoute(routeUrl,isLocal){routeUrl=isLocal?"http://localhost:8080"+routeUrl.replace(/^.*\/\/[^\/]+/,""):routeUrl;logger.debug("Fetching route from:",routeUrl);return $.ajax(routeUrl)}function getGoogleMapsPath(lineString){var path=_.map(lineString.geometry.coordinates,function(element){return new google.maps.LatLng(element[1],element[0])});return path}function getPathElevations(lineString,useLocalElevations){if(useLocalElevations&&lineString.geometry.coordinates[0].length===3){logger.debug("Getting path elevations from line string...");var elevations=_.map(lineString.geometry.coordinates,function(element){return{elevation:element[2]}});logger.debug("Elevations:",elevations);return new Promise(function(resolve,reject){resolve(elevations)})}else{var path=getGoogleMapsPath(lineString);var MAXIMUM_NUMBER_OF_SAMPLES=512;var ratio=Math.ceil(path.length/MAXIMUM_NUMBER_OF_SAMPLES);path=path.filter(function(value,index){return index%ratio==0});return new Promise(function(resolve,reject){var elevator=new google.maps.ElevationService;elevator.getElevationAlongPath({path:path,samples:_.min([path.length,MAXIMUM_NUMBER_OF_SAMPLES])},function(elevations,status){if(status===google.maps.ElevationStatus.OK){resolve(elevations)}else{reject(status)}})})}}function getRouteParameters(routeParamsUrl){return new Promise(function(resolve,reject){$.ajax(routeParamsUrl).done(function(data){logger.debug("Route parameters:",data);if(data.success===1){resolve(data)}else{reject("Server side error: "+data.error)}}).fail(function(xhr,status){reject(status)})})}function approveRoute(routeApproveUrl){return new Promise(function(resolve,reject){$.ajax(routeApproveUrl).done(function(data){resolve({success:true})}).fail(function(xhr,status){reject(status)})})}module.exports={getGeoJSON:getGeoJSON,getNumberOfFeatures:getNumberOfFeatures,getLineString:getLineString,reverseLineString:reverseLineString,getPoints:getPoints,getRoute:getRoute,getGoogleMapsPath:getGoogleMapsPath,getPathElevations:getPathElevations,getRouteParameters:getRouteParameters,approveRoute:approveRoute}},{"./lodash":189,"@turf/flatten":6,loglevel:180,togeojson:182}],189:[function(require,module,exports){exports.isEmpty=require("lodash/isEmpty");exports.isEqual=require("lodash/isEqual");exports.isNull=require("lodash/isNull");exports.filter=require("lodash/filter");exports.find=require("lodash/find");exports.forEach=require("lodash/forEach");exports.map=require("lodash/map");exports.min=require("lodash/min");exports.sortBy=require("lodash/sortBy")},{"lodash/filter":148,"lodash/find":149,"lodash/forEach":151,"lodash/isEmpty":159,"lodash/isEqual":160,"lodash/isNull":163,"lodash/map":169,"lodash/min":171,"lodash/sortBy":173}],190:[function(require,module,exports){var logger=require("loglevel");var helpers=require("./helpers");var Route=require("./Route");var Context=require("./Context");var Controls=require("./Controls");function verifyRoute(){var context=new Context;var controls=new Controls;controls.resetAll();controls.addLoaderToButton();helpers.getRoute(context.routeUrl,context.isLocal).done(function(data){var geoJson=helpers.getGeoJSON(data);var route=new Route(geoJson);var isSinglePath=route.isSinglePath();controls.updateSinglePath(isSinglePath);var routeLength=route.getPathLength();var isPathLengthValid=true;controls.updatePathLength(isPathLengthValid,routeLength);var areAllStationsPresent=route.areAllStationsPresent();controls.updateNumberOfStations(areAllStationsPresent);var isStationOrderCorrect=route.isStationOrderCorrect();controls.updateStationsOrder(isStationOrderCorrect);var areStationsOnThePath=route.areStationsOnThePath();controls.updateStationsOnPath(areStationsOnThePath);route.fetchPathElevationData().then(function(){var pathElevation=route.getPathElevation();pathElevation.enrichData(routeLength);var isPathElevationGainValid=true;controls.updateElevationGain(isPathElevationGainValid,pathElevation.gain);var isNormalRoute=routeLength>=40||pathElevation.gain>500&&routeLength>=30;controls.updateRouteType(isNormalRoute);var isPathElevationLossValid=true;controls.updateElevationLoss(isPathElevationLossValid,pathElevation.loss);var isPathElevationTotalChangeValid=true;controls.updateElevationTotalChange(isPathElevationTotalChangeValid,pathElevation.totalChange);controls.drawElevationChart(pathElevation);helpers.getRouteParameters(context.routeParamsUrl).then(function(parameters){var ACCEPTED_ROUTE_LENGTH_DIFF=1;var ACCEPTED_ELEVATION_GAIN_DIFF=50;var NORMAL_ROUTE_TYPE=0;var INSPIRED_ROUTE_TYPE=1;var isLengthConsistent=routeLength-ACCEPTED_ROUTE_LENGTH_DIFF<=parameters.length&&parameters.length<=routeLength+ACCEPTED_ROUTE_LENGTH_DIFF;var isElevationGainConsistent=pathElevation.gain-ACCEPTED_ELEVATION_GAIN_DIFF<=parameters.ascent&&parameters.ascent<=pathElevation.gain+ACCEPTED_ELEVATION_GAIN_DIFF;var isRouteTypeConsistent=parameters.type===(isNormalRoute?NORMAL_ROUTE_TYPE:INSPIRED_ROUTE_TYPE);var isDataConsistent=isLengthConsistent&&isElevationGainConsistent&&isRouteTypeConsistent;logger.debug("isLengthConsistent:",isLengthConsistent,", isElevationGainConsistent:",isElevationGainConsistent,", isRouteTypeConsistent:",isRouteTypeConsistent);controls.updateDataConsistency(isDataConsistent);var canRouteBeAutomaticallyApproved=isPathLengthValid&&isPathLengthValid&&areAllStationsPresent&&isStationOrderCorrect&&areStationsOnThePath&&isPathElevationGainValid&&isPathElevationLossValid&&isPathElevationTotalChangeValid&&isDataConsistent;if(canRouteBeAutomaticallyApproved){logger.info("Route verification success. Approving...");helpers.approveRoute(context.routeApproveUrl).then(function(){logger.info("Route approved.")}).catch(function(error){logger.error("Route approval error.",error)})}else{logger.info("Route verification failed. Cannot be approved.")}}).catch(function(error){logger.error("Route parameters data fetching error.",error)})}).catch(function(error){logger.error("Path elevation data fetching error.",error);controls.updateElevationGain(false,0);controls.updateElevationLoss(false,0);controls.updateElevationTotalChange(false,0);controls.updateDataConsistency(false)})}).fail(function(xhr,status){logger.error("Route fetching error. Status:",status)}).always(function(){controls.removeLoaderFromButton()})}logger.setLevel("warn");logger.enableAll();$("button#verifyRoute").bind("click",verifyRoute)},{"./Context":183,"./Controls":184,"./Route":186,"./helpers":188,loglevel:180}]},{},[190]);
